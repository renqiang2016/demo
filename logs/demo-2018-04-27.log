2018-04-27 08:56:40 -Starting DemoApplication on DESKTOP-4VE2VST with PID 11604 (Y:\MyGit\demo\target\classes started by Qiang in Y:\MyGit\demo)
2018-04-27 08:56:40 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 08:56:40 -The following profiles are active: dev
2018-04-27 08:56:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74fe5c40: startup date [Fri Apr 27 08:56:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 08:56:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74fe5c40: startup date [Fri Apr 27 08:56:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 08:56:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:56:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:56:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:56:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:56:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:56:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:56:44 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 08:56:44 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 08:56:44 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 08:56:44 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 08:56:44 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 08:56:44 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 08:56:44 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 08:56:44 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 08:56:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:56:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 08:56:44 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 08:56:45 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 08:56:45 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 08:56:45 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 08:56:45 -Loaded expression factory via original TCCL
2018-04-27 08:56:45 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 08:56:45 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 08:56:45 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 08:56:45 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 08:56:45 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 08:56:45 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 08:56:45 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 08:56:45 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 08:56:45 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 08:56:45 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 08:56:45 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 08:56:45 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 08:56:45 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 08:56:45 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 08:56:45 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 08:56:45 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 08:56:45 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$67ec85b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$67ec85b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84d51e3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84d51e3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$58af7148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$58af7148] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 08:56:45 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 08:56:45 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 08:56:45 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 08:56:45 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 08:56:45 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 08:56:45 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 08:56:45 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 08:56:45 -Starting Post-processing phase
2018-04-27 08:56:45 -Building annotation class map
2018-04-27 08:56:45 -Building interface class map for 8 classes
2018-04-27 08:56:45 - - Actor implements 0 interfaces
2018-04-27 08:56:45 - - Role implements 1 interfaces
2018-04-27 08:56:45 -   - java.io.Serializable
2018-04-27 08:56:45 - - MongoUser implements 0 interfaces
2018-04-27 08:56:45 - - Role implements 0 interfaces
2018-04-27 08:56:45 - - Movie implements 0 interfaces
2018-04-27 08:56:45 - - Department implements 0 interfaces
2018-04-27 08:56:45 - - BookBean implements 0 interfaces
2018-04-27 08:56:45 - - User implements 1 interfaces
2018-04-27 08:56:45 -   - java.io.Serializable
2018-04-27 08:56:45 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 08:56:45 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 08:56:45 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 08:56:45 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 08:56:45 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 08:56:45 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 08:56:45 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 08:56:45 -Post-processing: com.example.ren.model.BookBean
2018-04-27 08:56:45 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 08:56:45 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 08:56:45 -Checking for @Transient classes....
2018-04-27 08:56:45 -Registering converters and deregistering transient fields and methods....
2018-04-27 08:56:45 -Post-processing complete
2018-04-27 08:56:45 -Building Index Metadata.
2018-04-27 08:56:45 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:45 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:56:46 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 08:56:46 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 08:56:46 -Initializing ProtocolHandler ["http-nio-8080"]
2018-04-27 08:56:46 -Starting service [Tomcat]
2018-04-27 08:56:46 -Starting Servlet Engine: Apache Tomcat/8.5.28
2018-04-27 08:56:46 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;.]
2018-04-27 08:56:47 -Initializing Spring embedded WebApplicationContext
2018-04-27 08:56:47 -Root WebApplicationContext: initialization completed in 6031 ms
2018-04-27 08:56:47 -Root WebApplicationContext: initialization completed in 6031 ms
2018-04-27 08:56:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 08:56:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 08:56:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 08:56:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 08:56:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 08:56:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 08:56:47 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 08:56:47 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 08:56:47 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-27 08:56:47 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-27 08:56:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 08:56:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 08:56:47 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 08:56:47 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 08:56:47 -Servlet dispatcherServlet mapped to [/]
2018-04-27 08:56:47 -Servlet dispatcherServlet mapped to [/]
2018-04-27 08:56:48 -{dataSource-1} inited
2018-04-27 08:56:48 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 08:56:48 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 08:56:48 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 08:56:47",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:1339858954, ConnectTime:"2018-04-27 08:56:48", UseCount:1, LastActiveTime:"2018-04-27 08:56:48"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 08:56:48 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 08:56:48 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 08:56:48 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 08:56:48 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 08:56:48 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 08:56:48 -HHH000206: hibernate.properties not found
2018-04-27 08:56:48 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 08:56:48 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 08:56:48 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 08:56:49 -Adding type registration boolean -> org.hibernate.type.BooleanType@16736040
2018-04-27 08:56:49 -Adding type registration boolean -> org.hibernate.type.BooleanType@16736040
2018-04-27 08:56:49 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@16736040
2018-04-27 08:56:49 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26ca61bf
2018-04-27 08:56:49 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@6870c3c2
2018-04-27 08:56:49 -Adding type registration yes_no -> org.hibernate.type.YesNoType@4debbf0
2018-04-27 08:56:49 -Adding type registration byte -> org.hibernate.type.ByteType@796f632b
2018-04-27 08:56:49 -Adding type registration byte -> org.hibernate.type.ByteType@796f632b
2018-04-27 08:56:49 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@796f632b
2018-04-27 08:56:49 -Adding type registration character -> org.hibernate.type.CharacterType@233db8e9
2018-04-27 08:56:49 -Adding type registration char -> org.hibernate.type.CharacterType@233db8e9
2018-04-27 08:56:49 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@233db8e9
2018-04-27 08:56:49 -Adding type registration short -> org.hibernate.type.ShortType@6274670b
2018-04-27 08:56:49 -Adding type registration short -> org.hibernate.type.ShortType@6274670b
2018-04-27 08:56:49 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6274670b
2018-04-27 08:56:49 -Adding type registration integer -> org.hibernate.type.IntegerType@7f7b6639
2018-04-27 08:56:49 -Adding type registration int -> org.hibernate.type.IntegerType@7f7b6639
2018-04-27 08:56:49 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f7b6639
2018-04-27 08:56:49 -Adding type registration long -> org.hibernate.type.LongType@3408f695
2018-04-27 08:56:49 -Adding type registration long -> org.hibernate.type.LongType@3408f695
2018-04-27 08:56:49 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@3408f695
2018-04-27 08:56:49 -Adding type registration float -> org.hibernate.type.FloatType@5649d11a
2018-04-27 08:56:49 -Adding type registration float -> org.hibernate.type.FloatType@5649d11a
2018-04-27 08:56:49 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5649d11a
2018-04-27 08:56:49 -Adding type registration double -> org.hibernate.type.DoubleType@101ca8da
2018-04-27 08:56:49 -Adding type registration double -> org.hibernate.type.DoubleType@101ca8da
2018-04-27 08:56:49 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@101ca8da
2018-04-27 08:56:49 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@53c99b09
2018-04-27 08:56:49 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@53c99b09
2018-04-27 08:56:49 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d4df0e
2018-04-27 08:56:49 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d4df0e
2018-04-27 08:56:49 -Adding type registration string -> org.hibernate.type.StringType@4997552e
2018-04-27 08:56:49 -Adding type registration java.lang.String -> org.hibernate.type.StringType@4997552e
2018-04-27 08:56:49 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@77c1e611
2018-04-27 08:56:49 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@659f226a
2018-04-27 08:56:49 -Adding type registration url -> org.hibernate.type.UrlType@b61edb9
2018-04-27 08:56:49 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@b61edb9
2018-04-27 08:56:49 -Adding type registration Duration -> org.hibernate.type.DurationType@6025d790
2018-04-27 08:56:49 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6025d790
2018-04-27 08:56:49 -Adding type registration Instant -> org.hibernate.type.InstantType@4c0e426a
2018-04-27 08:56:49 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4c0e426a
2018-04-27 08:56:49 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@f29353f
2018-04-27 08:56:49 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@f29353f
2018-04-27 08:56:49 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@17dad32f
2018-04-27 08:56:49 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@17dad32f
2018-04-27 08:56:49 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@29be997f
2018-04-27 08:56:49 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@29be997f
2018-04-27 08:56:49 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f9e8421
2018-04-27 08:56:49 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f9e8421
2018-04-27 08:56:49 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@45545e7a
2018-04-27 08:56:49 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@45545e7a
2018-04-27 08:56:49 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d157493
2018-04-27 08:56:49 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d157493
2018-04-27 08:56:49 -Adding type registration date -> org.hibernate.type.DateType@5e13f156
2018-04-27 08:56:49 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e13f156
2018-04-27 08:56:49 -Adding type registration time -> org.hibernate.type.TimeType@5ba03c82
2018-04-27 08:56:49 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ba03c82
2018-04-27 08:56:49 -Adding type registration timestamp -> org.hibernate.type.TimestampType@388d14e
2018-04-27 08:56:49 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@388d14e
2018-04-27 08:56:49 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@388d14e
2018-04-27 08:56:49 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68b366e2
2018-04-27 08:56:49 -Adding type registration calendar -> org.hibernate.type.CalendarType@78d71df1
2018-04-27 08:56:49 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78d71df1
2018-04-27 08:56:49 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78d71df1
2018-04-27 08:56:49 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@568750b7
2018-04-27 08:56:49 -Adding type registration locale -> org.hibernate.type.LocaleType@2e7bf7b7
2018-04-27 08:56:49 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e7bf7b7
2018-04-27 08:56:49 -Adding type registration currency -> org.hibernate.type.CurrencyType@78ec89a6
2018-04-27 08:56:49 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78ec89a6
2018-04-27 08:56:49 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@642ee49c
2018-04-27 08:56:49 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@642ee49c
2018-04-27 08:56:49 -Adding type registration class -> org.hibernate.type.ClassType@32456db0
2018-04-27 08:56:49 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32456db0
2018-04-27 08:56:49 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a146b11
2018-04-27 08:56:49 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a146b11
2018-04-27 08:56:49 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18d003cd
2018-04-27 08:56:49 -Adding type registration binary -> org.hibernate.type.BinaryType@79f90a3a
2018-04-27 08:56:49 -Adding type registration byte[] -> org.hibernate.type.BinaryType@79f90a3a
2018-04-27 08:56:49 -Adding type registration [B -> org.hibernate.type.BinaryType@79f90a3a
2018-04-27 08:56:49 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@46e3559f
2018-04-27 08:56:49 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@46e3559f
2018-04-27 08:56:49 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@46e3559f
2018-04-27 08:56:49 -Adding type registration row_version -> org.hibernate.type.RowVersionType@3cd26422
2018-04-27 08:56:49 -Adding type registration image -> org.hibernate.type.ImageType@1b01a0d
2018-04-27 08:56:49 -Adding type registration characters -> org.hibernate.type.CharArrayType@72a2312e
2018-04-27 08:56:49 -Adding type registration char[] -> org.hibernate.type.CharArrayType@72a2312e
2018-04-27 08:56:49 -Adding type registration [C -> org.hibernate.type.CharArrayType@72a2312e
2018-04-27 08:56:49 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57e388c3
2018-04-27 08:56:49 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57e388c3
2018-04-27 08:56:49 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57e388c3
2018-04-27 08:56:49 -Adding type registration text -> org.hibernate.type.TextType@2b916808
2018-04-27 08:56:49 -Adding type registration ntext -> org.hibernate.type.NTextType@1290ed28
2018-04-27 08:56:49 -Adding type registration blob -> org.hibernate.type.BlobType@23ed382c
2018-04-27 08:56:49 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@23ed382c
2018-04-27 08:56:49 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72b6832e
2018-04-27 08:56:49 -Adding type registration clob -> org.hibernate.type.ClobType@44114b9f
2018-04-27 08:56:49 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44114b9f
2018-04-27 08:56:49 -Adding type registration nclob -> org.hibernate.type.NClobType@3913f206
2018-04-27 08:56:49 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3913f206
2018-04-27 08:56:49 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@270d43a7
2018-04-27 08:56:49 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53d9826f
2018-04-27 08:56:49 -Adding type registration serializable -> org.hibernate.type.SerializableType@74834afd
2018-04-27 08:56:49 -Adding type registration object -> org.hibernate.type.ObjectType@3453acd2
2018-04-27 08:56:49 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3453acd2
2018-04-27 08:56:49 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71b6172c
2018-04-27 08:56:49 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58aa10f4
2018-04-27 08:56:49 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fb56bea
2018-04-27 08:56:49 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e5beb8a
2018-04-27 08:56:49 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1f95881a
2018-04-27 08:56:49 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17b016ac
2018-04-27 08:56:49 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@733ec58b
2018-04-27 08:56:49 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@723877dd
2018-04-27 08:56:49 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 08:56:49 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 08:56:49 -JDBC version : 4.0
2018-04-27 08:56:49 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 08:56:49 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 08:56:49 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 08:56:49 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 08:56:49 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 08:56:49 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 08:56:49 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 08:56:49 -Import with entity name Role
2018-04-27 08:56:49 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -MetadataSourceProcessor property id with lazy=false
2018-04-27 08:56:49 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 08:56:49 -building SimpleValue for id
2018-04-27 08:56:49 -Building property id
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -MetadataSourceProcessor property name with lazy=false
2018-04-27 08:56:49 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 08:56:49 -building SimpleValue for name
2018-04-27 08:56:49 -Building property name
2018-04-27 08:56:49 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 08:56:49 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 08:56:49 -Import with entity name Department
2018-04-27 08:56:49 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -MetadataSourceProcessor property id with lazy=false
2018-04-27 08:56:49 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 08:56:49 -building SimpleValue for id
2018-04-27 08:56:49 -Building property id
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -MetadataSourceProcessor property name with lazy=false
2018-04-27 08:56:49 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 08:56:49 -building SimpleValue for name
2018-04-27 08:56:49 -Building property name
2018-04-27 08:56:49 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 08:56:49 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 08:56:49 -Import with entity name User
2018-04-27 08:56:49 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -MetadataSourceProcessor property id with lazy=false
2018-04-27 08:56:49 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 08:56:49 -building SimpleValue for id
2018-04-27 08:56:49 -Building property id
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 08:56:49 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 08:56:49 -building SimpleValue for createDate
2018-04-27 08:56:49 -Building property createDate
2018-04-27 08:56:49 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -Building property department
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -MetadataSourceProcessor property email with lazy=false
2018-04-27 08:56:49 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 08:56:49 -building SimpleValue for email
2018-04-27 08:56:49 -Building property email
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -MetadataSourceProcessor property name with lazy=false
2018-04-27 08:56:49 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 08:56:49 -building SimpleValue for name
2018-04-27 08:56:49 -Building property name
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -MetadataSourceProcessor property password with lazy=false
2018-04-27 08:56:49 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 08:56:49 -building SimpleValue for password
2018-04-27 08:56:49 -Building property password
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 08:56:49 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 08:56:49 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 08:56:49 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 08:56:49 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 08:56:49 -Building property roles
2018-04-27 08:56:49 -Starting fillSimpleValue for id
2018-04-27 08:56:49 -Starting fillSimpleValue for name
2018-04-27 08:56:49 -Starting fillSimpleValue for id
2018-04-27 08:56:49 -Starting fillSimpleValue for name
2018-04-27 08:56:49 -Starting fillSimpleValue for id
2018-04-27 08:56:49 -Starting fillSimpleValue for createDate
2018-04-27 08:56:49 -Starting fillSimpleValue for email
2018-04-27 08:56:49 -Starting fillSimpleValue for name
2018-04-27 08:56:49 -Starting fillSimpleValue for password
2018-04-27 08:56:49 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 08:56:49 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 08:56:49 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 08:56:49 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 08:56:49 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 08:56:49 -Mapped collection key: user_id, element: role_id
2018-04-27 08:56:49 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 08:56:49 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 08:56:49 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 08:56:49 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 08:56:49 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 08:56:49 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 08:56:49 -Building session factory
2018-04-27 08:56:49 -SessionFactory name : null
2018-04-27 08:56:49 -Automatic flush during beforeCompletion(): enabled
2018-04-27 08:56:49 -Automatic session close at end of transaction: disabled
2018-04-27 08:56:49 -Statistics: disabled
2018-04-27 08:56:49 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 08:56:49 -Default entity-mode: pojo
2018-04-27 08:56:49 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 08:56:49 -Allow initialization of lazy state outside session : disabled
2018-04-27 08:56:49 -Using BatchFetchStyle : LEGACY
2018-04-27 08:56:49 -Default batch fetch size: -1
2018-04-27 08:56:49 -Maximum outer join fetch depth: 2
2018-04-27 08:56:49 -Default null ordering: NONE
2018-04-27 08:56:49 -Order SQL updates by primary key: disabled
2018-04-27 08:56:49 -Order SQL inserts for batching: disabled
2018-04-27 08:56:49 -multi-tenancy strategy : NONE
2018-04-27 08:56:49 -JTA Track by Thread: enabled
2018-04-27 08:56:49 -Query language substitutions: {}
2018-04-27 08:56:49 -JPA query language strict compliance: disabled
2018-04-27 08:56:49 -Named query checking : enabled
2018-04-27 08:56:49 -Second-level cache: enabled
2018-04-27 08:56:49 -Second-level query cache: disabled
2018-04-27 08:56:49 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1d6751e3
2018-04-27 08:56:49 -Second-level cache region prefix: null
2018-04-27 08:56:49 -Optimize second-level cache for minimal puts: disabled
2018-04-27 08:56:49 -Structured second-level cache entries: disabled
2018-04-27 08:56:49 -Second-level cache direct-reference entries: disabled
2018-04-27 08:56:49 -Automatic eviction of collection cache: disabled
2018-04-27 08:56:49 -JDBC batch size: 15
2018-04-27 08:56:49 -JDBC batch updates for versioned data: enabled
2018-04-27 08:56:49 -Scrollable result sets: enabled
2018-04-27 08:56:49 -Wrap result sets: disabled
2018-04-27 08:56:49 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 08:56:49 -JDBC result set fetch size: null
2018-04-27 08:56:49 -Connection release mode: ON_CLOSE
2018-04-27 08:56:49 -Generate SQL with comments: disabled
2018-04-27 08:56:50 -Session factory constructed with filter configurations : {}
2018-04-27 08:56:50 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-security\2.0.0.RELEASE\spring-boot-starter-security-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-config\5.0.3.RELEASE\spring-security-config-5.0.3.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-core\5.0.3.RELEASE\spring-security-core-5.0.3.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-web\5.0.3.RELEASE\spring-security-web-5.0.3.RELEASE.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.example.ren.DemoApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@629e8212, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, spring.output.ansi.enabled=always, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, catalina.home=C:\Users\Qiang\AppData\Local\Temp\tomcat.4811003969333486683.8080, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=11604, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\Qiang\AppData\Local\Temp\tomcat.4811003969333486683.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@498c535d, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 08:56:47",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:1339858954, ConnectTime:"2018-04-27 08:56:48", UseCount:2, LastActiveTime:"2018-04-27 08:56:49"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 08:56:50 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 08:56:50 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 08:56:50 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 08:56:50 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 08:56:50 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 08:56:50 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 08:56:50 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 08:56:50 -Loaded expression factory via original TCCL
2018-04-27 08:56:50 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 08:56:50 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 08:56:50 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 08:56:50 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 08:56:50 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 08:56:50 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 08:56:50 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 08:56:50 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 08:56:50 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 08:56:50 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 08:56:50 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 08:56:50 -Skipping JACC integration as it was not enabled
2018-04-27 08:56:50 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 08:56:50 -Instantiated session factory
2018-04-27 08:56:50 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 08:56:50 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 08:56:50 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 08:56:50 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 08:56:50 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 08:56:50 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 08:56:50 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 08:56:50 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 08:56:50 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 08:56:50 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 08:56:50 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 08:56:50 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 08:56:50 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 08:56:50 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 08:56:50 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 08:56:50 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 08:56:50 - One-shot delete: delete from user_role where user_id=?
2018-04-27 08:56:50 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 08:56:50 - Version select: select id from role where id =?
2018-04-27 08:56:50 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 08:56:50 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 08:56:50 - Update 0: update role set name=? where id=?
2018-04-27 08:56:50 - Delete 0: delete from role where id=?
2018-04-27 08:56:50 - Identity insert: insert into role (name) values (?)
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2c3947]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@526f6427]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@492521c4]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ddd1c51]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15605d83]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c18516]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d104c9b]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da54910]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24134cbc]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22f02996]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42c0a16e]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:56:50 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:56:50 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:56:50 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 08:56:50 - Version select: select id from department where id =?
2018-04-27 08:56:50 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 08:56:50 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 08:56:50 - Update 0: update department set name=? where id=?
2018-04-27 08:56:50 - Delete 0: delete from department where id=?
2018-04-27 08:56:50 - Identity insert: insert into department (name) values (?)
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@437ed416]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@de77146]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cfed0ba]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a567f7b]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26f0141]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6de7778f]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce25e47]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@350da119]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34c7232c]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8b13d91]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2589d787]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:56:50 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:56:50 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:56:50 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 08:56:50 - Version select: select id from user where id =?
2018-04-27 08:56:50 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 08:56:50 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 08:56:50 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 08:56:50 - Delete 0: delete from user where id=?
2018-04-27 08:56:50 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d431b4]
2018-04-27 08:56:50 -Visiting attribute path : createDate
2018-04-27 08:56:50 -Visiting attribute path : department
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@216372b7]
2018-04-27 08:56:50 -Visiting attribute path : department.name
2018-04-27 08:56:50 -Visiting attribute path : email
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Visiting attribute path : password
2018-04-27 08:56:50 -Visiting attribute path : roles
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37c7766e]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6094de13]
2018-04-27 08:56:50 -Visiting attribute path : roles.name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d0cd23c]
2018-04-27 08:56:50 -Visiting attribute path : createDate
2018-04-27 08:56:50 -Visiting attribute path : department
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b0f266e]
2018-04-27 08:56:50 -Visiting attribute path : department.name
2018-04-27 08:56:50 -Visiting attribute path : email
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Visiting attribute path : password
2018-04-27 08:56:50 -Visiting attribute path : roles
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53314f76]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62a6674f]
2018-04-27 08:56:50 -Visiting attribute path : roles.name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e905f2c]
2018-04-27 08:56:50 -Visiting attribute path : createDate
2018-04-27 08:56:50 -Visiting attribute path : department
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f6cce7f]
2018-04-27 08:56:50 -Visiting attribute path : email
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Visiting attribute path : password
2018-04-27 08:56:50 -Visiting attribute path : roles
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2725ca05]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b9088f2]
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a914089]
2018-04-27 08:56:50 -Visiting attribute path : createDate
2018-04-27 08:56:50 -Visiting attribute path : department
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a2bf50f]
2018-04-27 08:56:50 -Visiting attribute path : email
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Visiting attribute path : password
2018-04-27 08:56:50 -Visiting attribute path : roles
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@350323a0]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2506b881]
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d7dd549]
2018-04-27 08:56:50 -Visiting attribute path : createDate
2018-04-27 08:56:50 -Visiting attribute path : department
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6459f4ea]
2018-04-27 08:56:50 -Visiting attribute path : email
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Visiting attribute path : password
2018-04-27 08:56:50 -Visiting attribute path : roles
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@740b9a50]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@476fde05]
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5111de7c]
2018-04-27 08:56:50 -Visiting attribute path : createDate
2018-04-27 08:56:50 -Visiting attribute path : department
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52354202]
2018-04-27 08:56:50 -Visiting attribute path : email
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Visiting attribute path : password
2018-04-27 08:56:50 -Visiting attribute path : roles
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b1321b7]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@342ee097]
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac45c0c]
2018-04-27 08:56:50 -Visiting attribute path : createDate
2018-04-27 08:56:50 -Visiting attribute path : department
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6075b369]
2018-04-27 08:56:50 -Visiting attribute path : email
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Visiting attribute path : password
2018-04-27 08:56:50 -Visiting attribute path : roles
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@231cdda8]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b70d1fb]
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3002e397]
2018-04-27 08:56:50 -Visiting attribute path : createDate
2018-04-27 08:56:50 -Visiting attribute path : department
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38159384]
2018-04-27 08:56:50 -Visiting attribute path : email
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Visiting attribute path : password
2018-04-27 08:56:50 -Visiting attribute path : roles
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55877274]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@723e2d08]
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d4a82]
2018-04-27 08:56:50 -Visiting attribute path : createDate
2018-04-27 08:56:50 -Visiting attribute path : department
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a0ab480]
2018-04-27 08:56:50 -Visiting attribute path : email
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Visiting attribute path : password
2018-04-27 08:56:50 -Visiting attribute path : roles
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79df80a4]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@130cfc47]
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eeab3e]
2018-04-27 08:56:50 -Visiting attribute path : createDate
2018-04-27 08:56:50 -Visiting attribute path : department
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eb0cefe]
2018-04-27 08:56:50 -Visiting attribute path : email
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Visiting attribute path : password
2018-04-27 08:56:50 -Visiting attribute path : roles
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a2ae1ab]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bec068b]
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d59e968]
2018-04-27 08:56:50 -Visiting attribute path : createDate
2018-04-27 08:56:50 -Visiting attribute path : department
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@581c9bb7]
2018-04-27 08:56:50 -Visiting attribute path : email
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Visiting attribute path : password
2018-04-27 08:56:50 -Visiting attribute path : roles
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@138f0661]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@212fafd1]
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:56:50 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 08:56:50 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 08:56:50 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@544e3679]
2018-04-27 08:56:50 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6889f56f]
2018-04-27 08:56:50 -Visiting attribute path : name
2018-04-27 08:56:50 -Building LoadPlan...
2018-04-27 08:56:50 -processing queryspace <gen:0>
2018-04-27 08:56:50 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 08:56:50 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 08:56:50 -No alter strings for table : department
2018-04-27 08:56:50 -No alter strings for table : role
2018-04-27 08:56:50 -No alter strings for table : user
2018-04-27 08:56:50 -No alter strings for table : user_role
2018-04-27 08:56:50 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 08:56:50 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 08:56:50 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 08:56:50 -Checking 0 named HQL queries
2018-04-27 08:56:50 -Checking 0 named SQL queries
2018-04-27 08:56:50 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@47187f50
2018-04-27 08:56:50 -Registering SessionFactory: 67040b83-2dda-45cc-97ee-b4c7c19f8198 (<unnamed>)
2018-04-27 08:56:50 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 08:56:50 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 08:56:50 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 08:56:51 -Statistics initialized [enabled=false]
2018-04-27 08:56:51 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7fc7152e
2018-04-27 08:56:51 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 08:56:51 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 08:56:51 -throwQueryException() : no errors
2018-04-27 08:56:51 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 08:56:51 -select << begin [level=1, statement=select]
2018-04-27 08:56:51 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 08:56:51 -Resolved : t -> user0_.id
2018-04-27 08:56:51 -Resolved : t -> user0_.id
2018-04-27 08:56:51 -getDataType() : name -> org.hibernate.type.StringType@4997552e
2018-04-27 08:56:51 -Resolved : t.name -> user0_.name
2018-04-27 08:56:51 -select : finishing up [level=1, statement=select]
2018-04-27 08:56:51 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 08:56:51 -Using FROM fragment [user user0_]
2018-04-27 08:56:51 -select >> end [level=1, statement=select]
2018-04-27 08:56:51 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@4997552e}

2018-04-27 08:56:51 -throwQueryException() : no errors
2018-04-27 08:56:51 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 08:56:51 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 08:56:51 -throwQueryException() : no errors
2018-04-27 08:56:51 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 08:56:51 -throwQueryException() : no errors
2018-04-27 08:56:51 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 08:56:51 -select << begin [level=1, statement=select]
2018-04-27 08:56:51 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 08:56:51 -Resolved : t -> user0_.id
2018-04-27 08:56:51 -Resolved : t -> user0_.id
2018-04-27 08:56:51 -getDataType() : name -> org.hibernate.type.StringType@4997552e
2018-04-27 08:56:51 -Resolved : t.name -> user0_.name
2018-04-27 08:56:51 -Resolved : t -> user0_.id
2018-04-27 08:56:51 -getDataType() : email -> org.hibernate.type.StringType@4997552e
2018-04-27 08:56:51 -Resolved : t.email -> user0_.email
2018-04-27 08:56:51 -select : finishing up [level=1, statement=select]
2018-04-27 08:56:51 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 08:56:51 -Using FROM fragment [user user0_]
2018-04-27 08:56:51 -select >> end [level=1, statement=select]
2018-04-27 08:56:51 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@4997552e}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@4997552e}

2018-04-27 08:56:51 -throwQueryException() : no errors
2018-04-27 08:56:51 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 08:56:51 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 08:56:51 -throwQueryException() : no errors
2018-04-27 08:56:51 -Using SLF4J as the default logging framework
2018-04-27 08:56:51 --Dio.netty.eventLoopThreads: 4
2018-04-27 08:56:52 --Dio.netty.leakDetection.level: simple
2018-04-27 08:56:52 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 08:56:52 -Platform: Windows
2018-04-27 08:56:52 --Dio.netty.noUnsafe: false
2018-04-27 08:56:52 -Java version: 8
2018-04-27 08:56:52 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 08:56:52 -sun.misc.Unsafe.copyMemory: available
2018-04-27 08:56:52 -java.nio.Buffer.address: available
2018-04-27 08:56:52 -direct buffer constructor: available
2018-04-27 08:56:52 -java.nio.Bits.unaligned: available, true
2018-04-27 08:56:52 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 08:56:52 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 08:56:52 -sun.misc.Unsafe: available
2018-04-27 08:56:52 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 08:56:52 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 08:56:52 --Dio.netty.noPreferDirect: false
2018-04-27 08:56:52 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 08:56:52 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 08:56:52 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 08:56:52 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@b5312df
2018-04-27 08:56:52 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 08:56:52 -Using Slf4j logging framework
2018-04-27 08:56:52 -Starting UnsafeSupport init in Java 1.8
2018-04-27 08:56:52 -Unsafe is available
2018-04-27 08:56:52 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 08:56:52 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 08:56:52 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 08:56:52 --Dio.netty.allocator.pageSize: 8192
2018-04-27 08:56:52 --Dio.netty.allocator.maxOrder: 11
2018-04-27 08:56:52 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 08:56:52 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 08:56:52 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 08:56:52 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 08:56:52 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 08:56:52 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 08:56:52 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 08:56:52 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 08:56:52 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 08:56:52 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 08:56:52 -Neo4jMappingContext initialisation completed
2018-04-27 08:56:52 -Neo4jMappingContext initialisation completed
2018-04-27 08:56:53 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 08:56:53 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 08:56:53 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 08:56:53 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 08:56:53 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 08:56:53 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 08:56:53 -Opened connection [connectionId{localValue:1, serverValue:1}] to 192.168.71.151:27017
2018-04-27 08:56:53 -Checking status of 192.168.71.151:27017
2018-04-27 08:56:53 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5335561}
2018-04-27 08:56:54 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.3 ms, state=CONNECTED}]
2018-04-27 08:56:54 -Opened connection [connectionId{localValue:2, serverValue:2}] to 192.168.71.151:27017
2018-04-27 08:56:54 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:2}] to server 192.168.71.151:27017
2018-04-27 08:56:54 -Command execution completed
2018-04-27 08:56:54 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 08:56:54 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 08:56:54 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 08:56:54 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 08:56:54 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 08:56:54 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 08:56:54 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 08:56:54 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 08:56:54 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 08:56:54 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 08:56:54 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 08:56:54 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 08:56:54 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 08:56:54 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 08:56:54 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 08:56:54 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 08:56:54 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 08:56:54 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 08:56:54 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 08:56:54 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 08:56:54 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 08:56:54 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 08:56:54 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 08:56:54 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 08:56:54 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 08:56:54 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 08:56:54 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 08:56:54 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 08:56:54 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 08:56:54 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 08:56:54 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 08:56:54 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 08:56:54 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 08:56:54 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 08:56:54 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 08:56:54 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 08:56:54 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:56:54 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 08:56:54 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 08:56:54 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 08:56:54 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 08:56:54 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 08:56:54 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 08:56:54 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 08:56:54 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 08:56:54 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 08:56:54 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 08:56:54 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 08:56:54 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 08:56:54 -init trackerLocator [192.168.71.161:22122]
2018-04-27 08:56:55 -Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6fefc5ea, org.springframework.security.web.context.SecurityContextPersistenceFilter@4efed0e0, org.springframework.security.web.header.HeaderWriterFilter@6d842877, org.springframework.security.web.csrf.CsrfFilter@3063be68, org.springframework.security.web.authentication.logout.LogoutFilter@4bf10fe1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2d2af12e, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4910afdf, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4544ab46, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c7c75fb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@514dc5f4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6159fb3c, org.springframework.security.web.session.SessionManagementFilter@3835d3fd, org.springframework.security.web.access.ExceptionTranslationFilter@5dba3fdc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6d5508a5]
2018-04-27 08:56:55 -Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6fefc5ea, org.springframework.security.web.context.SecurityContextPersistenceFilter@4efed0e0, org.springframework.security.web.header.HeaderWriterFilter@6d842877, org.springframework.security.web.csrf.CsrfFilter@3063be68, org.springframework.security.web.authentication.logout.LogoutFilter@4bf10fe1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2d2af12e, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4910afdf, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4544ab46, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c7c75fb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@514dc5f4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6159fb3c, org.springframework.security.web.session.SessionManagementFilter@3835d3fd, org.springframework.security.web.access.ExceptionTranslationFilter@5dba3fdc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6d5508a5]
2018-04-27 08:56:55 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 08:56:55 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 08:56:55 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 08:56:55 -Loaded expression factory via original TCCL
2018-04-27 08:56:55 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 08:56:55 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 08:56:55 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 08:56:55 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 08:56:55 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 08:56:55 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 08:56:55 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 08:56:55 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 08:56:55 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 08:56:55 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 08:56:55 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 08:56:55 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 08:56:55 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 08:56:55 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 08:56:55 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 08:56:55 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 08:56:56 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74fe5c40: startup date [Fri Apr 27 08:56:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 08:56:56 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74fe5c40: startup date [Fri Apr 27 08:56:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 08:56:56 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:56:56 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:56:56 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:56:56 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:56:56 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 08:56:56 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 08:56:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:56:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:56:56 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 08:56:56 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 08:56:57 -Registering beans for JMX exposure on startup
2018-04-27 08:56:57 -Registering beans for JMX exposure on startup
2018-04-27 08:56:57 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 08:56:57 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 08:56:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 08:56:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 08:56:57 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 08:56:57 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 08:56:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 08:56:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 08:56:57 -Starting beans in phase 2147483647
2018-04-27 08:56:57 -Starting beans in phase 2147483647
2018-04-27 08:56:57 -Context refreshed
2018-04-27 08:56:57 -Context refreshed
2018-04-27 08:56:57 -Found 1 custom documentation plugin(s)
2018-04-27 08:56:57 -Found 1 custom documentation plugin(s)
2018-04-27 08:56:57 -Scanning for api listing references
2018-04-27 08:56:57 -Scanning for api listing references
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: updateUsingPOST_1
2018-04-27 08:56:57 -Generating unique operation named: updateUsingPOST_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: createUsingGET_1
2018-04-27 08:56:57 -Generating unique operation named: createUsingGET_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: createUsingHEAD_1
2018-04-27 08:56:57 -Generating unique operation named: createUsingHEAD_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: createUsingPOST_1
2018-04-27 08:56:57 -Generating unique operation named: createUsingPOST_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: createUsingPUT_1
2018-04-27 08:56:57 -Generating unique operation named: createUsingPUT_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: createUsingPATCH_1
2018-04-27 08:56:57 -Generating unique operation named: createUsingPATCH_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: createUsingDELETE_1
2018-04-27 08:56:57 -Generating unique operation named: createUsingDELETE_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 08:56:57 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: createUsingTRACE_1
2018-04-27 08:56:57 -Generating unique operation named: createUsingTRACE_1
2018-04-27 08:56:57 -Generating unique operation named: deleteUsingGET_1
2018-04-27 08:56:57 -Generating unique operation named: deleteUsingGET_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingGET_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingGET_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingHEAD_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingHEAD_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingPOST_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingPOST_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingPUT_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingPUT_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingPATCH_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingPATCH_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingDELETE_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingDELETE_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingTRACE_1
2018-04-27 08:56:57 -Generating unique operation named: listUsingTRACE_1
2018-04-27 08:56:57 -Generating unique operation named: saveUsingPOST_1
2018-04-27 08:56:57 -Generating unique operation named: saveUsingPOST_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: showUsingGET_1
2018-04-27 08:56:57 -Generating unique operation named: showUsingGET_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: showUsingHEAD_1
2018-04-27 08:56:57 -Generating unique operation named: showUsingHEAD_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: showUsingPOST_1
2018-04-27 08:56:57 -Generating unique operation named: showUsingPOST_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: showUsingPUT_1
2018-04-27 08:56:57 -Generating unique operation named: showUsingPUT_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: showUsingPATCH_1
2018-04-27 08:56:57 -Generating unique operation named: showUsingPATCH_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: showUsingDELETE_1
2018-04-27 08:56:57 -Generating unique operation named: showUsingDELETE_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 08:56:57 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: showUsingTRACE_1
2018-04-27 08:56:57 -Generating unique operation named: showUsingTRACE_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: updateUsingGET_1
2018-04-27 08:56:57 -Generating unique operation named: updateUsingGET_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 08:56:57 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: updateUsingPOST_2
2018-04-27 08:56:57 -Generating unique operation named: updateUsingPOST_2
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: updateUsingPUT_1
2018-04-27 08:56:57 -Generating unique operation named: updateUsingPUT_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 08:56:57 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 08:56:57 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 08:56:57 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:56:57 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 08:56:57 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 08:56:57 -Generating unique operation named: updateUsingPOST_3
2018-04-27 08:56:57 -Generating unique operation named: updateUsingPOST_3
2018-04-27 08:56:57 -Starting ProtocolHandler ["http-nio-8080"]
2018-04-27 08:56:57 -Using a shared selector for servlet write/read
2018-04-27 08:56:57 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 08:56:57 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 08:56:57 -Started DemoApplication in 19.399 seconds (JVM running for 21.734)
2018-04-27 08:57:04 -Checking status of 192.168.71.151:27017
2018-04-27 08:57:04 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.6 ms, state=CONNECTED}]
2018-04-27 08:57:14 -Checking status of 192.168.71.151:27017
2018-04-27 08:57:14 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.9 ms, state=CONNECTED}]
2018-04-27 08:57:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-27 08:57:18 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 08:57:18 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 08:57:19 -FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2018-04-27 08:57:19 -FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2018-04-27 08:57:22 -用户名：admin
2018-04-27 08:57:22 -加密密码：$2a$10$5N5uxq04oK.iVAe./v7sKebeSbiSfQfMFLqY3GMi.HKaXBZMNUJr2
2018-04-27 08:57:23 -BookBean{name='红楼梦', author='曹雪芹', price='28'}
2018-04-27 08:57:24 -Checking status of 192.168.71.151:27017
2018-04-27 08:57:24 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.8 ms, state=CONNECTED}]
2018-04-27 08:57:34 -Checking status of 192.168.71.151:27017
2018-04-27 08:57:34 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.2 ms, state=CONNECTED}]
2018-04-27 08:57:44 -Checking status of 192.168.71.151:27017
2018-04-27 08:57:44 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.0 ms, state=CONNECTED}]
2018-04-27 08:57:54 -Checking status of 192.168.71.151:27017
2018-04-27 08:57:54 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.8 ms, state=CONNECTED}]
2018-04-27 08:58:04 -Checking status of 192.168.71.151:27017
2018-04-27 08:58:04 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=10.9 ms, state=CONNECTED}]
2018-04-27 08:58:14 -Checking status of 192.168.71.151:27017
2018-04-27 08:58:14 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=9.1 ms, state=CONNECTED}]
2018-04-27 08:58:24 -Checking status of 192.168.71.151:27017
2018-04-27 08:58:24 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=7.7 ms, state=CONNECTED}]
2018-04-27 08:58:34 -Checking status of 192.168.71.151:27017
2018-04-27 08:58:34 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.4 ms, state=CONNECTED}]
2018-04-27 08:58:44 -Checking status of 192.168.71.151:27017
2018-04-27 08:58:44 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.4 ms, state=CONNECTED}]
2018-04-27 08:58:54 -Checking status of 192.168.71.151:27017
2018-04-27 08:58:54 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.6 ms, state=CONNECTED}]
2018-04-27 08:59:04 -Checking status of 192.168.71.151:27017
2018-04-27 08:59:04 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.9 ms, state=CONNECTED}]
2018-04-27 08:59:14 -Checking status of 192.168.71.151:27017
2018-04-27 08:59:14 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.4 ms, state=CONNECTED}]
2018-04-27 08:59:23 -Starting DemoApplication on DESKTOP-4VE2VST with PID 1108 (Y:\MyGit\demo\target\classes started by Qiang in Y:\MyGit\demo)
2018-04-27 08:59:23 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 08:59:23 -The following profiles are active: dev
2018-04-27 08:59:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23202fce: startup date [Fri Apr 27 08:59:24 GMT+08:00 2018]; root of context hierarchy
2018-04-27 08:59:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23202fce: startup date [Fri Apr 27 08:59:24 GMT+08:00 2018]; root of context hierarchy
2018-04-27 08:59:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:59:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:59:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:59:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:59:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:59:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:59:25 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 08:59:25 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 08:59:25 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 08:59:25 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 08:59:25 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 08:59:25 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 08:59:25 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 08:59:25 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 08:59:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:59:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 08:59:25 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 08:59:26 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 08:59:26 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 08:59:26 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 08:59:26 -Loaded expression factory via original TCCL
2018-04-27 08:59:26 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 08:59:26 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 08:59:26 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 08:59:26 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 08:59:26 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 08:59:26 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 08:59:26 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 08:59:26 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 08:59:26 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 08:59:26 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 08:59:26 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 08:59:26 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 08:59:26 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 08:59:26 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 08:59:26 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 08:59:26 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 08:59:26 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$e7992689] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$e7992689] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$481bf0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$481bf0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$d85c1219] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$d85c1219] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 08:59:26 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 08:59:26 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 08:59:26 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 08:59:26 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 08:59:26 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 08:59:26 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 08:59:26 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 08:59:26 -Starting Post-processing phase
2018-04-27 08:59:26 -Building annotation class map
2018-04-27 08:59:26 -Building interface class map for 8 classes
2018-04-27 08:59:26 - - Actor implements 0 interfaces
2018-04-27 08:59:26 - - Role implements 1 interfaces
2018-04-27 08:59:26 -   - java.io.Serializable
2018-04-27 08:59:26 - - MongoUser implements 0 interfaces
2018-04-27 08:59:26 - - Role implements 0 interfaces
2018-04-27 08:59:26 - - Movie implements 0 interfaces
2018-04-27 08:59:26 - - Department implements 0 interfaces
2018-04-27 08:59:26 - - BookBean implements 0 interfaces
2018-04-27 08:59:26 - - User implements 1 interfaces
2018-04-27 08:59:26 -   - java.io.Serializable
2018-04-27 08:59:26 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 08:59:26 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 08:59:26 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 08:59:26 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 08:59:26 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 08:59:26 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 08:59:26 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 08:59:26 -Post-processing: com.example.ren.model.BookBean
2018-04-27 08:59:26 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 08:59:26 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 08:59:26 -Checking for @Transient classes....
2018-04-27 08:59:26 -Registering converters and deregistering transient fields and methods....
2018-04-27 08:59:26 -Post-processing complete
2018-04-27 08:59:26 -Building Index Metadata.
2018-04-27 08:59:26 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:26 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 08:59:27 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 08:59:27 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 08:59:27 -Initializing ProtocolHandler ["http-nio-8080"]
2018-04-27 08:59:27 -Starting service [Tomcat]
2018-04-27 08:59:27 -Starting Servlet Engine: Apache Tomcat/8.5.28
2018-04-27 08:59:27 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;.]
2018-04-27 08:59:27 -Initializing Spring embedded WebApplicationContext
2018-04-27 08:59:27 -Root WebApplicationContext: initialization completed in 3514 ms
2018-04-27 08:59:27 -Root WebApplicationContext: initialization completed in 3514 ms
2018-04-27 08:59:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 08:59:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 08:59:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 08:59:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 08:59:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 08:59:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 08:59:27 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 08:59:27 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 08:59:27 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-27 08:59:27 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-27 08:59:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 08:59:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 08:59:27 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 08:59:27 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 08:59:27 -Servlet dispatcherServlet mapped to [/]
2018-04-27 08:59:27 -Servlet dispatcherServlet mapped to [/]
2018-04-27 08:59:28 -{dataSource-1} inited
2018-04-27 08:59:28 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 08:59:28 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 08:59:28 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 08:59:27",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:10288247, ConnectTime:"2018-04-27 08:59:28", UseCount:1, LastActiveTime:"2018-04-27 08:59:28"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 08:59:28 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 08:59:28 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 08:59:28 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 08:59:28 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 08:59:28 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 08:59:28 -HHH000206: hibernate.properties not found
2018-04-27 08:59:28 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 08:59:28 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 08:59:28 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 08:59:28 -Adding type registration boolean -> org.hibernate.type.BooleanType@64279ab
2018-04-27 08:59:28 -Adding type registration boolean -> org.hibernate.type.BooleanType@64279ab
2018-04-27 08:59:28 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@64279ab
2018-04-27 08:59:28 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48e41b5d
2018-04-27 08:59:28 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@5fd43e58
2018-04-27 08:59:28 -Adding type registration yes_no -> org.hibernate.type.YesNoType@2e952845
2018-04-27 08:59:28 -Adding type registration byte -> org.hibernate.type.ByteType@49232c6f
2018-04-27 08:59:28 -Adding type registration byte -> org.hibernate.type.ByteType@49232c6f
2018-04-27 08:59:28 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@49232c6f
2018-04-27 08:59:28 -Adding type registration character -> org.hibernate.type.CharacterType@15d236fd
2018-04-27 08:59:28 -Adding type registration char -> org.hibernate.type.CharacterType@15d236fd
2018-04-27 08:59:28 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@15d236fd
2018-04-27 08:59:28 -Adding type registration short -> org.hibernate.type.ShortType@5ca4dce5
2018-04-27 08:59:28 -Adding type registration short -> org.hibernate.type.ShortType@5ca4dce5
2018-04-27 08:59:28 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ca4dce5
2018-04-27 08:59:28 -Adding type registration integer -> org.hibernate.type.IntegerType@5fb54740
2018-04-27 08:59:28 -Adding type registration int -> org.hibernate.type.IntegerType@5fb54740
2018-04-27 08:59:28 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5fb54740
2018-04-27 08:59:28 -Adding type registration long -> org.hibernate.type.LongType@6885ed19
2018-04-27 08:59:28 -Adding type registration long -> org.hibernate.type.LongType@6885ed19
2018-04-27 08:59:28 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@6885ed19
2018-04-27 08:59:28 -Adding type registration float -> org.hibernate.type.FloatType@1e2445f6
2018-04-27 08:59:28 -Adding type registration float -> org.hibernate.type.FloatType@1e2445f6
2018-04-27 08:59:28 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e2445f6
2018-04-27 08:59:28 -Adding type registration double -> org.hibernate.type.DoubleType@42a0786f
2018-04-27 08:59:28 -Adding type registration double -> org.hibernate.type.DoubleType@42a0786f
2018-04-27 08:59:28 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@42a0786f
2018-04-27 08:59:28 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@723742b2
2018-04-27 08:59:28 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@723742b2
2018-04-27 08:59:28 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@404ced67
2018-04-27 08:59:28 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@404ced67
2018-04-27 08:59:28 -Adding type registration string -> org.hibernate.type.StringType@1c3b6963
2018-04-27 08:59:28 -Adding type registration java.lang.String -> org.hibernate.type.StringType@1c3b6963
2018-04-27 08:59:28 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@106c988
2018-04-27 08:59:28 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@115c946b
2018-04-27 08:59:28 -Adding type registration url -> org.hibernate.type.UrlType@70c29356
2018-04-27 08:59:28 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@70c29356
2018-04-27 08:59:28 -Adding type registration Duration -> org.hibernate.type.DurationType@6238d5e0
2018-04-27 08:59:28 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6238d5e0
2018-04-27 08:59:28 -Adding type registration Instant -> org.hibernate.type.InstantType@3f048c86
2018-04-27 08:59:28 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3f048c86
2018-04-27 08:59:28 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@e3899fd
2018-04-27 08:59:28 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@e3899fd
2018-04-27 08:59:28 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@26b3c9a2
2018-04-27 08:59:28 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@26b3c9a2
2018-04-27 08:59:28 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@19a5b637
2018-04-27 08:59:28 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@19a5b637
2018-04-27 08:59:28 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@34c62fdf
2018-04-27 08:59:28 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@34c62fdf
2018-04-27 08:59:28 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@67c6f4d8
2018-04-27 08:59:28 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@67c6f4d8
2018-04-27 08:59:28 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ecf0ac6
2018-04-27 08:59:28 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ecf0ac6
2018-04-27 08:59:28 -Adding type registration date -> org.hibernate.type.DateType@1e495414
2018-04-27 08:59:28 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e495414
2018-04-27 08:59:28 -Adding type registration time -> org.hibernate.type.TimeType@13f40d71
2018-04-27 08:59:28 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@13f40d71
2018-04-27 08:59:28 -Adding type registration timestamp -> org.hibernate.type.TimestampType@7911cc15
2018-04-27 08:59:28 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7911cc15
2018-04-27 08:59:28 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7911cc15
2018-04-27 08:59:28 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5329f6b3
2018-04-27 08:59:28 -Adding type registration calendar -> org.hibernate.type.CalendarType@37ca3ca8
2018-04-27 08:59:28 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@37ca3ca8
2018-04-27 08:59:28 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@37ca3ca8
2018-04-27 08:59:28 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b7554d4
2018-04-27 08:59:28 -Adding type registration locale -> org.hibernate.type.LocaleType@16f7f59f
2018-04-27 08:59:28 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@16f7f59f
2018-04-27 08:59:28 -Adding type registration currency -> org.hibernate.type.CurrencyType@6dd79214
2018-04-27 08:59:28 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6dd79214
2018-04-27 08:59:28 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@9b2dc56
2018-04-27 08:59:28 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@9b2dc56
2018-04-27 08:59:28 -Adding type registration class -> org.hibernate.type.ClassType@48f2054d
2018-04-27 08:59:28 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48f2054d
2018-04-27 08:59:28 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f811029
2018-04-27 08:59:28 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f811029
2018-04-27 08:59:28 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11e71181
2018-04-27 08:59:28 -Adding type registration binary -> org.hibernate.type.BinaryType@2abc55c4
2018-04-27 08:59:28 -Adding type registration byte[] -> org.hibernate.type.BinaryType@2abc55c4
2018-04-27 08:59:28 -Adding type registration [B -> org.hibernate.type.BinaryType@2abc55c4
2018-04-27 08:59:28 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@25ce435
2018-04-27 08:59:28 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@25ce435
2018-04-27 08:59:28 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@25ce435
2018-04-27 08:59:28 -Adding type registration row_version -> org.hibernate.type.RowVersionType@7ec3a8bd
2018-04-27 08:59:28 -Adding type registration image -> org.hibernate.type.ImageType@47fb7ec9
2018-04-27 08:59:28 -Adding type registration characters -> org.hibernate.type.CharArrayType@3be3e76c
2018-04-27 08:59:28 -Adding type registration char[] -> org.hibernate.type.CharArrayType@3be3e76c
2018-04-27 08:59:28 -Adding type registration [C -> org.hibernate.type.CharArrayType@3be3e76c
2018-04-27 08:59:28 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7faa0680
2018-04-27 08:59:28 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7faa0680
2018-04-27 08:59:28 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7faa0680
2018-04-27 08:59:28 -Adding type registration text -> org.hibernate.type.TextType@489110c2
2018-04-27 08:59:28 -Adding type registration ntext -> org.hibernate.type.NTextType@77c66a4f
2018-04-27 08:59:28 -Adding type registration blob -> org.hibernate.type.BlobType@3404e5c4
2018-04-27 08:59:28 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3404e5c4
2018-04-27 08:59:28 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@582a3b19
2018-04-27 08:59:28 -Adding type registration clob -> org.hibernate.type.ClobType@36510e73
2018-04-27 08:59:28 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36510e73
2018-04-27 08:59:28 -Adding type registration nclob -> org.hibernate.type.NClobType@437281c5
2018-04-27 08:59:28 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@437281c5
2018-04-27 08:59:28 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70f148dc
2018-04-27 08:59:28 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@9a9aa68
2018-04-27 08:59:28 -Adding type registration serializable -> org.hibernate.type.SerializableType@1068176
2018-04-27 08:59:28 -Adding type registration object -> org.hibernate.type.ObjectType@5c1b89ac
2018-04-27 08:59:28 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5c1b89ac
2018-04-27 08:59:28 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2baf72d5
2018-04-27 08:59:28 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66756662
2018-04-27 08:59:28 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d14e99e
2018-04-27 08:59:28 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@38cfecf3
2018-04-27 08:59:28 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@682618e5
2018-04-27 08:59:28 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@25ad25f5
2018-04-27 08:59:28 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f0f70c7
2018-04-27 08:59:28 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1860a7a1
2018-04-27 08:59:28 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 08:59:28 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 08:59:28 -JDBC version : 4.0
2018-04-27 08:59:28 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 08:59:28 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 08:59:28 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 08:59:28 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 08:59:28 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 08:59:28 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 08:59:28 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 08:59:28 -Import with entity name Role
2018-04-27 08:59:28 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -MetadataSourceProcessor property id with lazy=false
2018-04-27 08:59:29 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 08:59:29 -building SimpleValue for id
2018-04-27 08:59:29 -Building property id
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -MetadataSourceProcessor property name with lazy=false
2018-04-27 08:59:29 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 08:59:29 -building SimpleValue for name
2018-04-27 08:59:29 -Building property name
2018-04-27 08:59:29 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 08:59:29 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 08:59:29 -Import with entity name Department
2018-04-27 08:59:29 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -MetadataSourceProcessor property id with lazy=false
2018-04-27 08:59:29 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 08:59:29 -building SimpleValue for id
2018-04-27 08:59:29 -Building property id
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -MetadataSourceProcessor property name with lazy=false
2018-04-27 08:59:29 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 08:59:29 -building SimpleValue for name
2018-04-27 08:59:29 -Building property name
2018-04-27 08:59:29 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 08:59:29 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 08:59:29 -Import with entity name User
2018-04-27 08:59:29 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -MetadataSourceProcessor property id with lazy=false
2018-04-27 08:59:29 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 08:59:29 -building SimpleValue for id
2018-04-27 08:59:29 -Building property id
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 08:59:29 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 08:59:29 -building SimpleValue for createDate
2018-04-27 08:59:29 -Building property createDate
2018-04-27 08:59:29 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -Building property department
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -MetadataSourceProcessor property email with lazy=false
2018-04-27 08:59:29 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 08:59:29 -building SimpleValue for email
2018-04-27 08:59:29 -Building property email
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -MetadataSourceProcessor property name with lazy=false
2018-04-27 08:59:29 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 08:59:29 -building SimpleValue for name
2018-04-27 08:59:29 -Building property name
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -MetadataSourceProcessor property password with lazy=false
2018-04-27 08:59:29 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 08:59:29 -building SimpleValue for password
2018-04-27 08:59:29 -Building property password
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 08:59:29 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 08:59:29 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 08:59:29 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 08:59:29 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 08:59:29 -Building property roles
2018-04-27 08:59:29 -Starting fillSimpleValue for id
2018-04-27 08:59:29 -Starting fillSimpleValue for name
2018-04-27 08:59:29 -Starting fillSimpleValue for id
2018-04-27 08:59:29 -Starting fillSimpleValue for name
2018-04-27 08:59:29 -Starting fillSimpleValue for id
2018-04-27 08:59:29 -Starting fillSimpleValue for createDate
2018-04-27 08:59:29 -Starting fillSimpleValue for email
2018-04-27 08:59:29 -Starting fillSimpleValue for name
2018-04-27 08:59:29 -Starting fillSimpleValue for password
2018-04-27 08:59:29 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 08:59:29 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 08:59:29 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 08:59:29 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 08:59:29 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 08:59:29 -Mapped collection key: user_id, element: role_id
2018-04-27 08:59:29 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 08:59:29 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 08:59:29 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 08:59:29 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 08:59:29 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 08:59:29 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 08:59:29 -Building session factory
2018-04-27 08:59:29 -SessionFactory name : null
2018-04-27 08:59:29 -Automatic flush during beforeCompletion(): enabled
2018-04-27 08:59:29 -Automatic session close at end of transaction: disabled
2018-04-27 08:59:29 -Statistics: disabled
2018-04-27 08:59:29 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 08:59:29 -Default entity-mode: pojo
2018-04-27 08:59:29 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 08:59:29 -Allow initialization of lazy state outside session : disabled
2018-04-27 08:59:29 -Using BatchFetchStyle : LEGACY
2018-04-27 08:59:29 -Default batch fetch size: -1
2018-04-27 08:59:29 -Maximum outer join fetch depth: 2
2018-04-27 08:59:29 -Default null ordering: NONE
2018-04-27 08:59:29 -Order SQL updates by primary key: disabled
2018-04-27 08:59:29 -Order SQL inserts for batching: disabled
2018-04-27 08:59:29 -multi-tenancy strategy : NONE
2018-04-27 08:59:29 -JTA Track by Thread: enabled
2018-04-27 08:59:29 -Query language substitutions: {}
2018-04-27 08:59:29 -JPA query language strict compliance: disabled
2018-04-27 08:59:29 -Named query checking : enabled
2018-04-27 08:59:29 -Second-level cache: enabled
2018-04-27 08:59:29 -Second-level query cache: disabled
2018-04-27 08:59:29 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@d62472f
2018-04-27 08:59:29 -Second-level cache region prefix: null
2018-04-27 08:59:29 -Optimize second-level cache for minimal puts: disabled
2018-04-27 08:59:29 -Structured second-level cache entries: disabled
2018-04-27 08:59:29 -Second-level cache direct-reference entries: disabled
2018-04-27 08:59:29 -Automatic eviction of collection cache: disabled
2018-04-27 08:59:29 -JDBC batch size: 15
2018-04-27 08:59:29 -JDBC batch updates for versioned data: enabled
2018-04-27 08:59:29 -Scrollable result sets: enabled
2018-04-27 08:59:29 -Wrap result sets: disabled
2018-04-27 08:59:29 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 08:59:29 -JDBC result set fetch size: null
2018-04-27 08:59:29 -Connection release mode: ON_CLOSE
2018-04-27 08:59:29 -Generate SQL with comments: disabled
2018-04-27 08:59:29 -Session factory constructed with filter configurations : {}
2018-04-27 08:59:29 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-security\2.0.0.RELEASE\spring-boot-starter-security-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-config\5.0.3.RELEASE\spring-security-config-5.0.3.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-core\5.0.3.RELEASE\spring-security-core-5.0.3.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-web\5.0.3.RELEASE\spring-security-web-5.0.3.RELEASE.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.example.ren.DemoApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4b691611, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, spring.output.ansi.enabled=always, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, catalina.home=C:\Users\Qiang\AppData\Local\Temp\tomcat.5180025243454150477.8080, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=1108, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\Qiang\AppData\Local\Temp\tomcat.5180025243454150477.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@395a573c, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 08:59:27",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:10288247, ConnectTime:"2018-04-27 08:59:28", UseCount:2, LastActiveTime:"2018-04-27 08:59:28"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 08:59:29 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 08:59:29 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 08:59:29 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 08:59:29 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 08:59:29 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 08:59:29 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 08:59:29 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 08:59:29 -Loaded expression factory via original TCCL
2018-04-27 08:59:29 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 08:59:29 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 08:59:29 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 08:59:29 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 08:59:29 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 08:59:29 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 08:59:29 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 08:59:29 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 08:59:29 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 08:59:29 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 08:59:29 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 08:59:29 -Skipping JACC integration as it was not enabled
2018-04-27 08:59:29 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 08:59:29 -Instantiated session factory
2018-04-27 08:59:29 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 08:59:29 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 08:59:29 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 08:59:29 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 08:59:29 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 08:59:29 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 08:59:29 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 08:59:29 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 08:59:29 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 08:59:29 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 08:59:29 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 08:59:29 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 08:59:29 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 08:59:29 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 08:59:29 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 08:59:29 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 08:59:29 - One-shot delete: delete from user_role where user_id=?
2018-04-27 08:59:29 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 08:59:29 - Version select: select id from role where id =?
2018-04-27 08:59:29 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 08:59:29 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 08:59:29 - Update 0: update role set name=? where id=?
2018-04-27 08:59:29 - Delete 0: delete from role where id=?
2018-04-27 08:59:29 - Identity insert: insert into role (name) values (?)
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ee12d58]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7da77305]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a1ddbf1]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@581918f6]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d8e4250]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c67395]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a47036]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ab9ae9]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26865b57]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@596afb2f]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6df2a206]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:59:29 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:59:29 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 08:59:29 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 08:59:29 - Version select: select id from department where id =?
2018-04-27 08:59:29 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 08:59:29 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 08:59:29 - Update 0: update department set name=? where id=?
2018-04-27 08:59:29 - Delete 0: delete from department where id=?
2018-04-27 08:59:29 - Identity insert: insert into department (name) values (?)
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@342a1f84]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70b196d3]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fc1abf]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e7b0bec]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d90644f]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59f3426f]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cc8adff]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@280d5a82]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@333a44f2]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6efd0a6e]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30228de7]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:59:29 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:59:29 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 08:59:29 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 08:59:29 - Version select: select id from user where id =?
2018-04-27 08:59:29 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 08:59:29 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 08:59:29 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 08:59:29 - Delete 0: delete from user where id=?
2018-04-27 08:59:29 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e159116]
2018-04-27 08:59:29 -Visiting attribute path : createDate
2018-04-27 08:59:29 -Visiting attribute path : department
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a9f95b]
2018-04-27 08:59:29 -Visiting attribute path : department.name
2018-04-27 08:59:29 -Visiting attribute path : email
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Visiting attribute path : password
2018-04-27 08:59:29 -Visiting attribute path : roles
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e49437]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24eecabf]
2018-04-27 08:59:29 -Visiting attribute path : roles.name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af38a4a]
2018-04-27 08:59:29 -Visiting attribute path : createDate
2018-04-27 08:59:29 -Visiting attribute path : department
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ca0b9b1]
2018-04-27 08:59:29 -Visiting attribute path : department.name
2018-04-27 08:59:29 -Visiting attribute path : email
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Visiting attribute path : password
2018-04-27 08:59:29 -Visiting attribute path : roles
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1be77a76]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@315cf170]
2018-04-27 08:59:29 -Visiting attribute path : roles.name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@563263a]
2018-04-27 08:59:29 -Visiting attribute path : createDate
2018-04-27 08:59:29 -Visiting attribute path : department
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e794f53]
2018-04-27 08:59:29 -Visiting attribute path : email
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Visiting attribute path : password
2018-04-27 08:59:29 -Visiting attribute path : roles
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75f4d8a8]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69ba72da]
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1ba142]
2018-04-27 08:59:29 -Visiting attribute path : createDate
2018-04-27 08:59:29 -Visiting attribute path : department
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@595ec862]
2018-04-27 08:59:29 -Visiting attribute path : email
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Visiting attribute path : password
2018-04-27 08:59:29 -Visiting attribute path : roles
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63c84d31]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@102af1bb]
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@797f97e3]
2018-04-27 08:59:29 -Visiting attribute path : createDate
2018-04-27 08:59:29 -Visiting attribute path : department
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77cd235b]
2018-04-27 08:59:29 -Visiting attribute path : email
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Visiting attribute path : password
2018-04-27 08:59:29 -Visiting attribute path : roles
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@302da330]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3568ea59]
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f2376f]
2018-04-27 08:59:29 -Visiting attribute path : createDate
2018-04-27 08:59:29 -Visiting attribute path : department
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a520f05]
2018-04-27 08:59:29 -Visiting attribute path : email
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Visiting attribute path : password
2018-04-27 08:59:29 -Visiting attribute path : roles
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@389a1e34]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@204b0f07]
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f68756d]
2018-04-27 08:59:29 -Visiting attribute path : createDate
2018-04-27 08:59:29 -Visiting attribute path : department
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d9bb69b]
2018-04-27 08:59:29 -Visiting attribute path : email
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Visiting attribute path : password
2018-04-27 08:59:29 -Visiting attribute path : roles
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25d0b918]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9bf63d2]
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ffcb232]
2018-04-27 08:59:29 -Visiting attribute path : createDate
2018-04-27 08:59:29 -Visiting attribute path : department
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5feb82b3]
2018-04-27 08:59:29 -Visiting attribute path : email
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Visiting attribute path : password
2018-04-27 08:59:29 -Visiting attribute path : roles
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2d38db6f]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cf91d8]
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@571d0925]
2018-04-27 08:59:29 -Visiting attribute path : createDate
2018-04-27 08:59:29 -Visiting attribute path : department
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fe8ad3f]
2018-04-27 08:59:29 -Visiting attribute path : email
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Visiting attribute path : password
2018-04-27 08:59:29 -Visiting attribute path : roles
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7462ba4b]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b09d1c3]
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18811c42]
2018-04-27 08:59:29 -Visiting attribute path : createDate
2018-04-27 08:59:29 -Visiting attribute path : department
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b95de]
2018-04-27 08:59:29 -Visiting attribute path : email
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Visiting attribute path : password
2018-04-27 08:59:29 -Visiting attribute path : roles
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@629cbb1]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@165aa43a]
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22cd8ec2]
2018-04-27 08:59:29 -Visiting attribute path : createDate
2018-04-27 08:59:29 -Visiting attribute path : department
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35ab4260]
2018-04-27 08:59:29 -Visiting attribute path : email
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Visiting attribute path : password
2018-04-27 08:59:29 -Visiting attribute path : roles
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76134b9b]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38667005]
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 08:59:29 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 08:59:29 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 08:59:29 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f3c5308]
2018-04-27 08:59:29 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b31d46]
2018-04-27 08:59:29 -Visiting attribute path : name
2018-04-27 08:59:29 -Building LoadPlan...
2018-04-27 08:59:29 -processing queryspace <gen:0>
2018-04-27 08:59:29 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 08:59:29 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 08:59:29 -No alter strings for table : department
2018-04-27 08:59:29 -No alter strings for table : role
2018-04-27 08:59:29 -No alter strings for table : user
2018-04-27 08:59:29 -No alter strings for table : user_role
2018-04-27 08:59:29 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 08:59:29 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 08:59:29 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 08:59:29 -Checking 0 named HQL queries
2018-04-27 08:59:29 -Checking 0 named SQL queries
2018-04-27 08:59:29 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@25e6c22a
2018-04-27 08:59:29 -Registering SessionFactory: deeab1b0-485d-48a1-b9e7-628514728559 (<unnamed>)
2018-04-27 08:59:29 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 08:59:29 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 08:59:29 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 08:59:30 -Statistics initialized [enabled=false]
2018-04-27 08:59:30 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@71eff6a3
2018-04-27 08:59:30 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 08:59:30 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 08:59:30 -throwQueryException() : no errors
2018-04-27 08:59:30 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 08:59:30 -select << begin [level=1, statement=select]
2018-04-27 08:59:30 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 08:59:30 -Resolved : t -> user0_.id
2018-04-27 08:59:30 -Resolved : t -> user0_.id
2018-04-27 08:59:30 -getDataType() : name -> org.hibernate.type.StringType@1c3b6963
2018-04-27 08:59:30 -Resolved : t.name -> user0_.name
2018-04-27 08:59:30 -select : finishing up [level=1, statement=select]
2018-04-27 08:59:30 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 08:59:30 -Using FROM fragment [user user0_]
2018-04-27 08:59:30 -select >> end [level=1, statement=select]
2018-04-27 08:59:30 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@1c3b6963}

2018-04-27 08:59:30 -throwQueryException() : no errors
2018-04-27 08:59:30 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 08:59:30 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 08:59:30 -throwQueryException() : no errors
2018-04-27 08:59:30 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 08:59:30 -throwQueryException() : no errors
2018-04-27 08:59:30 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 08:59:30 -select << begin [level=1, statement=select]
2018-04-27 08:59:30 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 08:59:30 -Resolved : t -> user0_.id
2018-04-27 08:59:30 -Resolved : t -> user0_.id
2018-04-27 08:59:30 -getDataType() : name -> org.hibernate.type.StringType@1c3b6963
2018-04-27 08:59:30 -Resolved : t.name -> user0_.name
2018-04-27 08:59:30 -Resolved : t -> user0_.id
2018-04-27 08:59:30 -getDataType() : email -> org.hibernate.type.StringType@1c3b6963
2018-04-27 08:59:30 -Resolved : t.email -> user0_.email
2018-04-27 08:59:30 -select : finishing up [level=1, statement=select]
2018-04-27 08:59:30 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 08:59:30 -Using FROM fragment [user user0_]
2018-04-27 08:59:30 -select >> end [level=1, statement=select]
2018-04-27 08:59:30 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@1c3b6963}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@1c3b6963}

2018-04-27 08:59:30 -throwQueryException() : no errors
2018-04-27 08:59:30 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 08:59:30 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 08:59:30 -throwQueryException() : no errors
2018-04-27 08:59:30 -Using SLF4J as the default logging framework
2018-04-27 08:59:30 --Dio.netty.eventLoopThreads: 4
2018-04-27 08:59:30 --Dio.netty.leakDetection.level: simple
2018-04-27 08:59:30 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 08:59:30 -Platform: Windows
2018-04-27 08:59:30 --Dio.netty.noUnsafe: false
2018-04-27 08:59:30 -Java version: 8
2018-04-27 08:59:30 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 08:59:30 -sun.misc.Unsafe.copyMemory: available
2018-04-27 08:59:30 -java.nio.Buffer.address: available
2018-04-27 08:59:30 -direct buffer constructor: available
2018-04-27 08:59:30 -java.nio.Bits.unaligned: available, true
2018-04-27 08:59:30 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 08:59:30 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 08:59:30 -sun.misc.Unsafe: available
2018-04-27 08:59:30 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 08:59:30 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 08:59:30 --Dio.netty.noPreferDirect: false
2018-04-27 08:59:30 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 08:59:30 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 08:59:30 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 08:59:30 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@60ee7a51
2018-04-27 08:59:30 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 08:59:30 -Using Slf4j logging framework
2018-04-27 08:59:30 -Starting UnsafeSupport init in Java 1.8
2018-04-27 08:59:30 -Unsafe is available
2018-04-27 08:59:30 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 08:59:30 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 08:59:30 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 08:59:30 --Dio.netty.allocator.pageSize: 8192
2018-04-27 08:59:30 --Dio.netty.allocator.maxOrder: 11
2018-04-27 08:59:30 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 08:59:30 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 08:59:30 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 08:59:30 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 08:59:30 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 08:59:30 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 08:59:30 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 08:59:30 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 08:59:30 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 08:59:31 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 08:59:31 -Neo4jMappingContext initialisation completed
2018-04-27 08:59:31 -Neo4jMappingContext initialisation completed
2018-04-27 08:59:31 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 08:59:31 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 08:59:31 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 08:59:31 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 08:59:32 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 08:59:32 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 08:59:32 -Opened connection [connectionId{localValue:1, serverValue:3}] to 192.168.71.151:27017
2018-04-27 08:59:32 -Checking status of 192.168.71.151:27017
2018-04-27 08:59:32 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3816892}
2018-04-27 08:59:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.8 ms, state=CONNECTED}]
2018-04-27 08:59:32 -Opened connection [connectionId{localValue:2, serverValue:4}] to 192.168.71.151:27017
2018-04-27 08:59:32 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:4}] to server 192.168.71.151:27017
2018-04-27 08:59:32 -Command execution completed
2018-04-27 08:59:32 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 08:59:32 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 08:59:32 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 08:59:32 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 08:59:32 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 08:59:32 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 08:59:32 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 08:59:32 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 08:59:32 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 08:59:32 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 08:59:32 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 08:59:32 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 08:59:32 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 08:59:32 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 08:59:32 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 08:59:32 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 08:59:32 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 08:59:32 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 08:59:32 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 08:59:32 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 08:59:32 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 08:59:32 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 08:59:32 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 08:59:32 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 08:59:32 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 08:59:32 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 08:59:32 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 08:59:32 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 08:59:32 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 08:59:32 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 08:59:32 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 08:59:32 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 08:59:32 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 08:59:32 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 08:59:32 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 08:59:32 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 08:59:32 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 08:59:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 08:59:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 08:59:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 08:59:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 08:59:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 08:59:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 08:59:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 08:59:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 08:59:32 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 08:59:32 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 08:59:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 08:59:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 08:59:33 -init trackerLocator [192.168.71.161:22122]
2018-04-27 08:59:33 -Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@278cbf5a, org.springframework.security.web.context.SecurityContextPersistenceFilter@744673f3, org.springframework.security.web.header.HeaderWriterFilter@5dd12c19, org.springframework.security.web.csrf.CsrfFilter@6ee07d7f, org.springframework.security.web.authentication.logout.LogoutFilter@75d0cac6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4844e24b, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4505015b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@11678469, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@553d828a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c92a59d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1c41931a, org.springframework.security.web.session.SessionManagementFilter@3ce2c5f6, org.springframework.security.web.access.ExceptionTranslationFilter@38d895e8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1f381eaf]
2018-04-27 08:59:33 -Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@278cbf5a, org.springframework.security.web.context.SecurityContextPersistenceFilter@744673f3, org.springframework.security.web.header.HeaderWriterFilter@5dd12c19, org.springframework.security.web.csrf.CsrfFilter@6ee07d7f, org.springframework.security.web.authentication.logout.LogoutFilter@75d0cac6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4844e24b, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4505015b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@11678469, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@553d828a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c92a59d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1c41931a, org.springframework.security.web.session.SessionManagementFilter@3ce2c5f6, org.springframework.security.web.access.ExceptionTranslationFilter@38d895e8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1f381eaf]
2018-04-27 08:59:33 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 08:59:33 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 08:59:33 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 08:59:33 -Loaded expression factory via original TCCL
2018-04-27 08:59:33 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 08:59:33 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 08:59:33 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 08:59:33 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 08:59:33 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 08:59:33 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 08:59:33 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 08:59:33 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 08:59:33 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 08:59:33 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 08:59:33 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 08:59:33 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 08:59:33 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 08:59:33 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 08:59:33 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 08:59:33 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 08:59:33 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23202fce: startup date [Fri Apr 27 08:59:24 GMT+08:00 2018]; root of context hierarchy
2018-04-27 08:59:33 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23202fce: startup date [Fri Apr 27 08:59:24 GMT+08:00 2018]; root of context hierarchy
2018-04-27 08:59:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:59:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:59:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:59:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:59:34 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 08:59:34 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 08:59:34 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:59:34 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 08:59:34 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 08:59:34 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 08:59:34 -Registering beans for JMX exposure on startup
2018-04-27 08:59:34 -Registering beans for JMX exposure on startup
2018-04-27 08:59:34 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 08:59:34 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 08:59:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 08:59:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 08:59:34 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 08:59:34 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 08:59:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 08:59:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 08:59:34 -Starting beans in phase 2147483647
2018-04-27 08:59:34 -Starting beans in phase 2147483647
2018-04-27 08:59:34 -Context refreshed
2018-04-27 08:59:34 -Context refreshed
2018-04-27 08:59:34 -Found 1 custom documentation plugin(s)
2018-04-27 08:59:34 -Found 1 custom documentation plugin(s)
2018-04-27 08:59:34 -Scanning for api listing references
2018-04-27 08:59:34 -Scanning for api listing references
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: updateUsingPOST_1
2018-04-27 08:59:35 -Generating unique operation named: updateUsingPOST_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: createUsingGET_1
2018-04-27 08:59:35 -Generating unique operation named: createUsingGET_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: createUsingHEAD_1
2018-04-27 08:59:35 -Generating unique operation named: createUsingHEAD_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: createUsingPOST_1
2018-04-27 08:59:35 -Generating unique operation named: createUsingPOST_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: createUsingPUT_1
2018-04-27 08:59:35 -Generating unique operation named: createUsingPUT_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: createUsingPATCH_1
2018-04-27 08:59:35 -Generating unique operation named: createUsingPATCH_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: createUsingDELETE_1
2018-04-27 08:59:35 -Generating unique operation named: createUsingDELETE_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 08:59:35 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: createUsingTRACE_1
2018-04-27 08:59:35 -Generating unique operation named: createUsingTRACE_1
2018-04-27 08:59:35 -Generating unique operation named: deleteUsingGET_1
2018-04-27 08:59:35 -Generating unique operation named: deleteUsingGET_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingGET_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingGET_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingHEAD_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingHEAD_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingPOST_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingPOST_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingPUT_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingPUT_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingPATCH_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingPATCH_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingDELETE_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingDELETE_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingTRACE_1
2018-04-27 08:59:35 -Generating unique operation named: listUsingTRACE_1
2018-04-27 08:59:35 -Generating unique operation named: saveUsingPOST_1
2018-04-27 08:59:35 -Generating unique operation named: saveUsingPOST_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: showUsingGET_1
2018-04-27 08:59:35 -Generating unique operation named: showUsingGET_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: showUsingHEAD_1
2018-04-27 08:59:35 -Generating unique operation named: showUsingHEAD_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: showUsingPOST_1
2018-04-27 08:59:35 -Generating unique operation named: showUsingPOST_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: showUsingPUT_1
2018-04-27 08:59:35 -Generating unique operation named: showUsingPUT_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: showUsingPATCH_1
2018-04-27 08:59:35 -Generating unique operation named: showUsingPATCH_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: showUsingDELETE_1
2018-04-27 08:59:35 -Generating unique operation named: showUsingDELETE_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 08:59:35 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: showUsingTRACE_1
2018-04-27 08:59:35 -Generating unique operation named: showUsingTRACE_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: updateUsingGET_1
2018-04-27 08:59:35 -Generating unique operation named: updateUsingGET_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 08:59:35 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: updateUsingPOST_2
2018-04-27 08:59:35 -Generating unique operation named: updateUsingPOST_2
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: updateUsingPUT_1
2018-04-27 08:59:35 -Generating unique operation named: updateUsingPUT_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 08:59:35 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 08:59:35 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 08:59:35 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 08:59:35 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 08:59:35 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 08:59:35 -Generating unique operation named: updateUsingPOST_3
2018-04-27 08:59:35 -Generating unique operation named: updateUsingPOST_3
2018-04-27 08:59:35 -Starting ProtocolHandler ["http-nio-8080"]
2018-04-27 08:59:35 -Using a shared selector for servlet write/read
2018-04-27 08:59:35 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 08:59:35 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 08:59:35 -Started DemoApplication in 12.517 seconds (JVM running for 14.214)
2018-04-27 08:59:42 -Checking status of 192.168.71.151:27017
2018-04-27 08:59:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.4 ms, state=CONNECTED}]
2018-04-27 08:59:52 -Checking status of 192.168.71.151:27017
2018-04-27 08:59:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2018-04-27 09:00:02 -Checking status of 192.168.71.151:27017
2018-04-27 09:00:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.7 ms, state=CONNECTED}]
2018-04-27 09:00:12 -Checking status of 192.168.71.151:27017
2018-04-27 09:00:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 09:00:22 -Checking status of 192.168.71.151:27017
2018-04-27 09:00:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 09:00:32 -Checking status of 192.168.71.151:27017
2018-04-27 09:00:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 09:00:42 -Checking status of 192.168.71.151:27017
2018-04-27 09:00:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 09:00:52 -Checking status of 192.168.71.151:27017
2018-04-27 09:00:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 09:01:02 -Checking status of 192.168.71.151:27017
2018-04-27 09:01:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 09:01:12 -Checking status of 192.168.71.151:27017
2018-04-27 09:01:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:01:16 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-27 09:01:16 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:01:16 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:01:16 -FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-04-27 09:01:16 -FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-04-27 09:01:21 -用户名：admin
2018-04-27 09:01:21 -加密密码：$2a$10$vNAi3ZfTnPiaPEm50tC8mOoDs6y1ORm7jADVBr4yrU.WZs0uRYhei
2018-04-27 09:01:21 -BookBean{name='红楼梦', author='曹雪芹', price='28'}
2018-04-27 09:01:22 -Checking status of 192.168.71.151:27017
2018-04-27 09:01:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:01:32 -Checking status of 192.168.71.151:27017
2018-04-27 09:01:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:01:42 -Checking status of 192.168.71.151:27017
2018-04-27 09:01:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:01:52 -Checking status of 192.168.71.151:27017
2018-04-27 09:01:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:02:02 -Checking status of 192.168.71.151:27017
2018-04-27 09:02:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:02:12 -Checking status of 192.168.71.151:27017
2018-04-27 09:02:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:02:22 -Checking status of 192.168.71.151:27017
2018-04-27 09:02:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:02:32 -Checking status of 192.168.71.151:27017
2018-04-27 09:02:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:02:42 -Checking status of 192.168.71.151:27017
2018-04-27 09:02:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:02:52 -Checking status of 192.168.71.151:27017
2018-04-27 09:02:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:03:02 -Checking status of 192.168.71.151:27017
2018-04-27 09:03:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:03:12 -Checking status of 192.168.71.151:27017
2018-04-27 09:03:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 09:03:22 -Checking status of 192.168.71.151:27017
2018-04-27 09:03:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:03:32 -Checking status of 192.168.71.151:27017
2018-04-27 09:03:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:03:42 -Checking status of 192.168.71.151:27017
2018-04-27 09:03:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:03:52 -Checking status of 192.168.71.151:27017
2018-04-27 09:03:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:04:02 -Checking status of 192.168.71.151:27017
2018-04-27 09:04:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.8 ms, state=CONNECTED}]
2018-04-27 09:04:12 -Checking status of 192.168.71.151:27017
2018-04-27 09:04:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.6 ms, state=CONNECTED}]
2018-04-27 09:04:22 -Checking status of 192.168.71.151:27017
2018-04-27 09:04:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.7 ms, state=CONNECTED}]
2018-04-27 09:04:29 -Starting DemoApplication on DESKTOP-4VE2VST with PID 13816 (Y:\MyGit\demo\target\classes started by Qiang in Y:\MyGit\demo)
2018-04-27 09:04:29 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 09:04:29 -The following profiles are active: dev
2018-04-27 09:04:29 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15a04efb: startup date [Fri Apr 27 09:04:29 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:04:29 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15a04efb: startup date [Fri Apr 27 09:04:29 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:04:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:04:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:04:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:04:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:04:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:04:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:04:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:04:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:04:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:04:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:04:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:04:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:04:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:04:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:04:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:04:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:04:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:04:31 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:04:31 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:04:31 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:04:31 -Loaded expression factory via original TCCL
2018-04-27 09:04:31 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:04:31 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:04:31 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:04:31 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:04:31 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:04:31 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:04:31 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:04:31 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:04:31 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:04:31 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:04:31 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:04:31 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:04:31 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:04:31 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:04:31 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:04:31 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:04:31 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$611cc1b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$611cc1b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7e055a39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7e055a39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$51dfad45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$51dfad45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 09:04:31 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 09:04:31 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 09:04:31 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 09:04:31 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 09:04:31 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 09:04:31 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 09:04:31 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 09:04:31 -Starting Post-processing phase
2018-04-27 09:04:31 -Building annotation class map
2018-04-27 09:04:31 -Building interface class map for 8 classes
2018-04-27 09:04:31 - - Actor implements 0 interfaces
2018-04-27 09:04:31 - - Role implements 1 interfaces
2018-04-27 09:04:31 -   - java.io.Serializable
2018-04-27 09:04:31 - - MongoUser implements 0 interfaces
2018-04-27 09:04:31 - - Role implements 0 interfaces
2018-04-27 09:04:31 - - Movie implements 0 interfaces
2018-04-27 09:04:31 - - Department implements 0 interfaces
2018-04-27 09:04:31 - - BookBean implements 0 interfaces
2018-04-27 09:04:31 - - User implements 1 interfaces
2018-04-27 09:04:31 -   - java.io.Serializable
2018-04-27 09:04:31 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 09:04:31 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 09:04:31 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:04:31 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 09:04:31 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 09:04:31 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 09:04:31 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 09:04:31 -Post-processing: com.example.ren.model.BookBean
2018-04-27 09:04:31 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 09:04:31 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:04:31 -Checking for @Transient classes....
2018-04-27 09:04:31 -Registering converters and deregistering transient fields and methods....
2018-04-27 09:04:31 -Post-processing complete
2018-04-27 09:04:31 -Building Index Metadata.
2018-04-27 09:04:31 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:31 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:04:32 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:04:32 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:04:32 -Initializing ProtocolHandler ["http-nio-8080"]
2018-04-27 09:04:32 -Starting service [Tomcat]
2018-04-27 09:04:32 -Starting Servlet Engine: Apache Tomcat/8.5.28
2018-04-27 09:04:32 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;.]
2018-04-27 09:04:32 -Initializing Spring embedded WebApplicationContext
2018-04-27 09:04:32 -Root WebApplicationContext: initialization completed in 3289 ms
2018-04-27 09:04:32 -Root WebApplicationContext: initialization completed in 3289 ms
2018-04-27 09:04:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:04:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:04:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:04:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:04:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:04:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:04:32 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:04:32 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:04:32 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-27 09:04:32 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-27 09:04:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:04:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:04:32 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:04:32 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:04:32 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:04:32 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:04:33 -{dataSource-1} inited
2018-04-27 09:04:33 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:04:33 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:04:33 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 09:04:33",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:948451889, ConnectTime:"2018-04-27 09:04:33", UseCount:1, LastActiveTime:"2018-04-27 09:04:33"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 09:04:33 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 09:04:33 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 09:04:33 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 09:04:33 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 09:04:33 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 09:04:33 -HHH000206: hibernate.properties not found
2018-04-27 09:04:33 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 09:04:33 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 09:04:33 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 09:04:33 -Adding type registration boolean -> org.hibernate.type.BooleanType@58a7dc4
2018-04-27 09:04:33 -Adding type registration boolean -> org.hibernate.type.BooleanType@58a7dc4
2018-04-27 09:04:33 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@58a7dc4
2018-04-27 09:04:33 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fb57fb3
2018-04-27 09:04:33 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@7e191fda
2018-04-27 09:04:33 -Adding type registration yes_no -> org.hibernate.type.YesNoType@e3899fd
2018-04-27 09:04:33 -Adding type registration byte -> org.hibernate.type.ByteType@5384ce66
2018-04-27 09:04:33 -Adding type registration byte -> org.hibernate.type.ByteType@5384ce66
2018-04-27 09:04:33 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5384ce66
2018-04-27 09:04:33 -Adding type registration character -> org.hibernate.type.CharacterType@19a5b637
2018-04-27 09:04:33 -Adding type registration char -> org.hibernate.type.CharacterType@19a5b637
2018-04-27 09:04:33 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@19a5b637
2018-04-27 09:04:33 -Adding type registration short -> org.hibernate.type.ShortType@ca7e37f
2018-04-27 09:04:33 -Adding type registration short -> org.hibernate.type.ShortType@ca7e37f
2018-04-27 09:04:33 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@ca7e37f
2018-04-27 09:04:33 -Adding type registration integer -> org.hibernate.type.IntegerType@56fda064
2018-04-27 09:04:33 -Adding type registration int -> org.hibernate.type.IntegerType@56fda064
2018-04-27 09:04:33 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56fda064
2018-04-27 09:04:33 -Adding type registration long -> org.hibernate.type.LongType@447521e
2018-04-27 09:04:33 -Adding type registration long -> org.hibernate.type.LongType@447521e
2018-04-27 09:04:33 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@447521e
2018-04-27 09:04:33 -Adding type registration float -> org.hibernate.type.FloatType@22a4ca4a
2018-04-27 09:04:33 -Adding type registration float -> org.hibernate.type.FloatType@22a4ca4a
2018-04-27 09:04:33 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22a4ca4a
2018-04-27 09:04:33 -Adding type registration double -> org.hibernate.type.DoubleType@1bee0085
2018-04-27 09:04:33 -Adding type registration double -> org.hibernate.type.DoubleType@1bee0085
2018-04-27 09:04:33 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1bee0085
2018-04-27 09:04:33 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4409cae6
2018-04-27 09:04:33 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4409cae6
2018-04-27 09:04:33 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@307cf964
2018-04-27 09:04:33 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@307cf964
2018-04-27 09:04:33 -Adding type registration string -> org.hibernate.type.StringType@191ec193
2018-04-27 09:04:33 -Adding type registration java.lang.String -> org.hibernate.type.StringType@191ec193
2018-04-27 09:04:33 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57ce2898
2018-04-27 09:04:33 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ee8051c
2018-04-27 09:04:33 -Adding type registration url -> org.hibernate.type.UrlType@ef86c72
2018-04-27 09:04:33 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@ef86c72
2018-04-27 09:04:33 -Adding type registration Duration -> org.hibernate.type.DurationType@621f23ac
2018-04-27 09:04:33 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@621f23ac
2018-04-27 09:04:33 -Adding type registration Instant -> org.hibernate.type.InstantType@774d8276
2018-04-27 09:04:33 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@774d8276
2018-04-27 09:04:33 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3f68a7f8
2018-04-27 09:04:33 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3f68a7f8
2018-04-27 09:04:33 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f0d8eff
2018-04-27 09:04:33 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f0d8eff
2018-04-27 09:04:33 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@73e1ecd0
2018-04-27 09:04:33 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@73e1ecd0
2018-04-27 09:04:33 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19cdc217
2018-04-27 09:04:33 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19cdc217
2018-04-27 09:04:33 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1a2e563e
2018-04-27 09:04:33 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1a2e563e
2018-04-27 09:04:33 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@72af90e8
2018-04-27 09:04:33 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@72af90e8
2018-04-27 09:04:33 -Adding type registration date -> org.hibernate.type.DateType@55d8c2c4
2018-04-27 09:04:33 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@55d8c2c4
2018-04-27 09:04:33 -Adding type registration time -> org.hibernate.type.TimeType@51b87df7
2018-04-27 09:04:33 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51b87df7
2018-04-27 09:04:33 -Adding type registration timestamp -> org.hibernate.type.TimestampType@62cf6a84
2018-04-27 09:04:33 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@62cf6a84
2018-04-27 09:04:33 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@62cf6a84
2018-04-27 09:04:33 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@49491770
2018-04-27 09:04:33 -Adding type registration calendar -> org.hibernate.type.CalendarType@2616b618
2018-04-27 09:04:33 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2616b618
2018-04-27 09:04:33 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2616b618
2018-04-27 09:04:33 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b46392c
2018-04-27 09:04:33 -Adding type registration locale -> org.hibernate.type.LocaleType@2becfd4c
2018-04-27 09:04:33 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2becfd4c
2018-04-27 09:04:33 -Adding type registration currency -> org.hibernate.type.CurrencyType@79e10fb4
2018-04-27 09:04:33 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@79e10fb4
2018-04-27 09:04:33 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@74697863
2018-04-27 09:04:33 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74697863
2018-04-27 09:04:33 -Adding type registration class -> org.hibernate.type.ClassType@626c569b
2018-04-27 09:04:33 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@626c569b
2018-04-27 09:04:33 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27da994b
2018-04-27 09:04:33 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27da994b
2018-04-27 09:04:33 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@73e4bb60
2018-04-27 09:04:33 -Adding type registration binary -> org.hibernate.type.BinaryType@4dd2ef54
2018-04-27 09:04:33 -Adding type registration byte[] -> org.hibernate.type.BinaryType@4dd2ef54
2018-04-27 09:04:33 -Adding type registration [B -> org.hibernate.type.BinaryType@4dd2ef54
2018-04-27 09:04:33 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@165614f5
2018-04-27 09:04:33 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@165614f5
2018-04-27 09:04:33 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@165614f5
2018-04-27 09:04:33 -Adding type registration row_version -> org.hibernate.type.RowVersionType@7d25913
2018-04-27 09:04:33 -Adding type registration image -> org.hibernate.type.ImageType@175581eb
2018-04-27 09:04:33 -Adding type registration characters -> org.hibernate.type.CharArrayType@25ad25f5
2018-04-27 09:04:33 -Adding type registration char[] -> org.hibernate.type.CharArrayType@25ad25f5
2018-04-27 09:04:33 -Adding type registration [C -> org.hibernate.type.CharArrayType@25ad25f5
2018-04-27 09:04:33 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e03046d
2018-04-27 09:04:33 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e03046d
2018-04-27 09:04:33 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e03046d
2018-04-27 09:04:33 -Adding type registration text -> org.hibernate.type.TextType@69f080ad
2018-04-27 09:04:33 -Adding type registration ntext -> org.hibernate.type.NTextType@569348e1
2018-04-27 09:04:33 -Adding type registration blob -> org.hibernate.type.BlobType@3dfd7eaa
2018-04-27 09:04:33 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3dfd7eaa
2018-04-27 09:04:33 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7cfb8e98
2018-04-27 09:04:33 -Adding type registration clob -> org.hibernate.type.ClobType@22f8adc2
2018-04-27 09:04:33 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@22f8adc2
2018-04-27 09:04:33 -Adding type registration nclob -> org.hibernate.type.NClobType@18cf5c52
2018-04-27 09:04:33 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@18cf5c52
2018-04-27 09:04:33 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@426c0486
2018-04-27 09:04:33 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4d7cac24
2018-04-27 09:04:33 -Adding type registration serializable -> org.hibernate.type.SerializableType@59918c8f
2018-04-27 09:04:33 -Adding type registration object -> org.hibernate.type.ObjectType@52621501
2018-04-27 09:04:33 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@52621501
2018-04-27 09:04:33 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5ac044ef
2018-04-27 09:04:33 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6afbe6a1
2018-04-27 09:04:33 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@14457a95
2018-04-27 09:04:33 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48567727
2018-04-27 09:04:33 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10e9a5fe
2018-04-27 09:04:33 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@259287ac
2018-04-27 09:04:33 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1abcd059
2018-04-27 09:04:33 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61a87366
2018-04-27 09:04:33 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 09:04:33 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 09:04:33 -JDBC version : 4.0
2018-04-27 09:04:33 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 09:04:33 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 09:04:33 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:04:33 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 09:04:33 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 09:04:33 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 09:04:33 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:04:33 -Import with entity name Role
2018-04-27 09:04:33 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:04:34 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 09:04:34 -building SimpleValue for id
2018-04-27 09:04:34 -Building property id
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:04:34 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 09:04:34 -building SimpleValue for name
2018-04-27 09:04:34 -Building property name
2018-04-27 09:04:34 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 09:04:34 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:04:34 -Import with entity name Department
2018-04-27 09:04:34 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:04:34 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 09:04:34 -building SimpleValue for id
2018-04-27 09:04:34 -Building property id
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:04:34 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 09:04:34 -building SimpleValue for name
2018-04-27 09:04:34 -Building property name
2018-04-27 09:04:34 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 09:04:34 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:04:34 -Import with entity name User
2018-04-27 09:04:34 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:04:34 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 09:04:34 -building SimpleValue for id
2018-04-27 09:04:34 -Building property id
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 09:04:34 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 09:04:34 -building SimpleValue for createDate
2018-04-27 09:04:34 -Building property createDate
2018-04-27 09:04:34 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -Building property department
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -MetadataSourceProcessor property email with lazy=false
2018-04-27 09:04:34 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 09:04:34 -building SimpleValue for email
2018-04-27 09:04:34 -Building property email
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:04:34 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 09:04:34 -building SimpleValue for name
2018-04-27 09:04:34 -Building property name
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -MetadataSourceProcessor property password with lazy=false
2018-04-27 09:04:34 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 09:04:34 -building SimpleValue for password
2018-04-27 09:04:34 -Building property password
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 09:04:34 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 09:04:34 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 09:04:34 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 09:04:34 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 09:04:34 -Building property roles
2018-04-27 09:04:34 -Starting fillSimpleValue for id
2018-04-27 09:04:34 -Starting fillSimpleValue for name
2018-04-27 09:04:34 -Starting fillSimpleValue for id
2018-04-27 09:04:34 -Starting fillSimpleValue for name
2018-04-27 09:04:34 -Starting fillSimpleValue for id
2018-04-27 09:04:34 -Starting fillSimpleValue for createDate
2018-04-27 09:04:34 -Starting fillSimpleValue for email
2018-04-27 09:04:34 -Starting fillSimpleValue for name
2018-04-27 09:04:34 -Starting fillSimpleValue for password
2018-04-27 09:04:34 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 09:04:34 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 09:04:34 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 09:04:34 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:04:34 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 09:04:34 -Mapped collection key: user_id, element: role_id
2018-04-27 09:04:34 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:04:34 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:04:34 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:04:34 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:04:34 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:04:34 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:04:34 -Building session factory
2018-04-27 09:04:34 -SessionFactory name : null
2018-04-27 09:04:34 -Automatic flush during beforeCompletion(): enabled
2018-04-27 09:04:34 -Automatic session close at end of transaction: disabled
2018-04-27 09:04:34 -Statistics: disabled
2018-04-27 09:04:34 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 09:04:34 -Default entity-mode: pojo
2018-04-27 09:04:34 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 09:04:34 -Allow initialization of lazy state outside session : disabled
2018-04-27 09:04:34 -Using BatchFetchStyle : LEGACY
2018-04-27 09:04:34 -Default batch fetch size: -1
2018-04-27 09:04:34 -Maximum outer join fetch depth: 2
2018-04-27 09:04:34 -Default null ordering: NONE
2018-04-27 09:04:34 -Order SQL updates by primary key: disabled
2018-04-27 09:04:34 -Order SQL inserts for batching: disabled
2018-04-27 09:04:34 -multi-tenancy strategy : NONE
2018-04-27 09:04:34 -JTA Track by Thread: enabled
2018-04-27 09:04:34 -Query language substitutions: {}
2018-04-27 09:04:34 -JPA query language strict compliance: disabled
2018-04-27 09:04:34 -Named query checking : enabled
2018-04-27 09:04:34 -Second-level cache: enabled
2018-04-27 09:04:34 -Second-level query cache: disabled
2018-04-27 09:04:34 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4e2cdc51
2018-04-27 09:04:34 -Second-level cache region prefix: null
2018-04-27 09:04:34 -Optimize second-level cache for minimal puts: disabled
2018-04-27 09:04:34 -Structured second-level cache entries: disabled
2018-04-27 09:04:34 -Second-level cache direct-reference entries: disabled
2018-04-27 09:04:34 -Automatic eviction of collection cache: disabled
2018-04-27 09:04:34 -JDBC batch size: 15
2018-04-27 09:04:34 -JDBC batch updates for versioned data: enabled
2018-04-27 09:04:34 -Scrollable result sets: enabled
2018-04-27 09:04:34 -Wrap result sets: disabled
2018-04-27 09:04:34 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 09:04:34 -JDBC result set fetch size: null
2018-04-27 09:04:34 -Connection release mode: ON_CLOSE
2018-04-27 09:04:34 -Generate SQL with comments: disabled
2018-04-27 09:04:34 -Session factory constructed with filter configurations : {}
2018-04-27 09:04:34 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-security\2.0.0.RELEASE\spring-boot-starter-security-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-config\5.0.3.RELEASE\spring-security-config-5.0.3.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-core\5.0.3.RELEASE\spring-security-core-5.0.3.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-web\5.0.3.RELEASE\spring-security-web-5.0.3.RELEASE.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.example.ren.DemoApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@577f9dfd, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, spring.output.ansi.enabled=always, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, catalina.home=C:\Users\Qiang\AppData\Local\Temp\tomcat.3328130614306153390.8080, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=13816, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\Qiang\AppData\Local\Temp\tomcat.3328130614306153390.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@520a95ff, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 09:04:33",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:948451889, ConnectTime:"2018-04-27 09:04:33", UseCount:2, LastActiveTime:"2018-04-27 09:04:33"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 09:04:34 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:04:34 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:04:34 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:04:34 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:04:34 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:04:34 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:04:34 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:04:34 -Loaded expression factory via original TCCL
2018-04-27 09:04:34 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:04:34 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:04:34 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:04:34 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:04:34 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:04:34 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:04:34 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:04:34 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:04:34 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:04:34 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:04:34 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:04:34 -Skipping JACC integration as it was not enabled
2018-04-27 09:04:34 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 09:04:34 -Instantiated session factory
2018-04-27 09:04:34 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:04:34 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:04:34 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:04:34 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:04:34 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:04:34 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:04:34 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:04:34 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:04:34 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:04:34 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:04:34 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:04:34 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:04:34 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:04:34 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 09:04:34 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 09:04:34 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 09:04:34 - One-shot delete: delete from user_role where user_id=?
2018-04-27 09:04:34 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 09:04:34 - Version select: select id from role where id =?
2018-04-27 09:04:34 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 09:04:34 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 09:04:34 - Update 0: update role set name=? where id=?
2018-04-27 09:04:34 - Delete 0: delete from role where id=?
2018-04-27 09:04:34 - Identity insert: insert into role (name) values (?)
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cdfbbef]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64c95480]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3451fc88]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3041beb3]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e40fdbd]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19647566]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@527d48db]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2335aef2]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f038d3c]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39a8e2fa]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c43df76]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:04:34 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:04:34 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:04:34 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 09:04:34 - Version select: select id from department where id =?
2018-04-27 09:04:34 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 09:04:34 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 09:04:34 - Update 0: update department set name=? where id=?
2018-04-27 09:04:34 - Delete 0: delete from department where id=?
2018-04-27 09:04:34 - Identity insert: insert into department (name) values (?)
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@248d3a]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@636e4bf8]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1a9173]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d800a56]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@315cf170]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25f7cc38]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53e28097]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f4d8a8]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1ba142]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@595ec862]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@102af1bb]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:04:34 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:04:34 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:04:34 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 09:04:34 - Version select: select id from user where id =?
2018-04-27 09:04:34 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 09:04:34 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 09:04:34 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 09:04:34 - Delete 0: delete from user where id=?
2018-04-27 09:04:34 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56cd5d76]
2018-04-27 09:04:34 -Visiting attribute path : createDate
2018-04-27 09:04:34 -Visiting attribute path : department
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76134b9b]
2018-04-27 09:04:34 -Visiting attribute path : department.name
2018-04-27 09:04:34 -Visiting attribute path : email
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Visiting attribute path : password
2018-04-27 09:04:34 -Visiting attribute path : roles
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fc1e4fb]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@97b5e6a]
2018-04-27 09:04:34 -Visiting attribute path : roles.name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38cb1606]
2018-04-27 09:04:34 -Visiting attribute path : createDate
2018-04-27 09:04:34 -Visiting attribute path : department
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655909e2]
2018-04-27 09:04:34 -Visiting attribute path : department.name
2018-04-27 09:04:34 -Visiting attribute path : email
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Visiting attribute path : password
2018-04-27 09:04:34 -Visiting attribute path : roles
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1171ba7e]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56872fcb]
2018-04-27 09:04:34 -Visiting attribute path : roles.name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41059616]
2018-04-27 09:04:34 -Visiting attribute path : createDate
2018-04-27 09:04:34 -Visiting attribute path : department
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34e25492]
2018-04-27 09:04:34 -Visiting attribute path : email
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Visiting attribute path : password
2018-04-27 09:04:34 -Visiting attribute path : roles
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32f308c6]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f2b9da8]
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@698ac187]
2018-04-27 09:04:34 -Visiting attribute path : createDate
2018-04-27 09:04:34 -Visiting attribute path : department
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f5cae3]
2018-04-27 09:04:34 -Visiting attribute path : email
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Visiting attribute path : password
2018-04-27 09:04:34 -Visiting attribute path : roles
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6630dd28]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5909ae90]
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4489f60f]
2018-04-27 09:04:34 -Visiting attribute path : createDate
2018-04-27 09:04:34 -Visiting attribute path : department
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fd9dbe6]
2018-04-27 09:04:34 -Visiting attribute path : email
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Visiting attribute path : password
2018-04-27 09:04:34 -Visiting attribute path : roles
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7b3085a3]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70022d44]
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b1c501d]
2018-04-27 09:04:34 -Visiting attribute path : createDate
2018-04-27 09:04:34 -Visiting attribute path : department
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25d9291a]
2018-04-27 09:04:34 -Visiting attribute path : email
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Visiting attribute path : password
2018-04-27 09:04:34 -Visiting attribute path : roles
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@445058e8]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d5574c7]
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a7a6d34]
2018-04-27 09:04:34 -Visiting attribute path : createDate
2018-04-27 09:04:34 -Visiting attribute path : department
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70d687b8]
2018-04-27 09:04:34 -Visiting attribute path : email
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Visiting attribute path : password
2018-04-27 09:04:34 -Visiting attribute path : roles
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6533629]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f49e81a]
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b444b5]
2018-04-27 09:04:34 -Visiting attribute path : createDate
2018-04-27 09:04:34 -Visiting attribute path : department
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ae66c98]
2018-04-27 09:04:34 -Visiting attribute path : email
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Visiting attribute path : password
2018-04-27 09:04:34 -Visiting attribute path : roles
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1aaf46e6]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@391d28ea]
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23df7fad]
2018-04-27 09:04:34 -Visiting attribute path : createDate
2018-04-27 09:04:34 -Visiting attribute path : department
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2acca224]
2018-04-27 09:04:34 -Visiting attribute path : email
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Visiting attribute path : password
2018-04-27 09:04:34 -Visiting attribute path : roles
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ac685ef]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@223cbf0d]
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a4ff5ed]
2018-04-27 09:04:34 -Visiting attribute path : createDate
2018-04-27 09:04:34 -Visiting attribute path : department
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b7ab7ab]
2018-04-27 09:04:34 -Visiting attribute path : email
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Visiting attribute path : password
2018-04-27 09:04:34 -Visiting attribute path : roles
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cf9bd1e]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39acd1f1]
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51813065]
2018-04-27 09:04:34 -Visiting attribute path : createDate
2018-04-27 09:04:34 -Visiting attribute path : department
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e0847a9]
2018-04-27 09:04:34 -Visiting attribute path : email
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Visiting attribute path : password
2018-04-27 09:04:34 -Visiting attribute path : roles
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51743cc0]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@92e2c93]
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:04:34 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:04:34 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:04:34 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@523abba9]
2018-04-27 09:04:34 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e090aaa]
2018-04-27 09:04:34 -Visiting attribute path : name
2018-04-27 09:04:34 -Building LoadPlan...
2018-04-27 09:04:34 -processing queryspace <gen:0>
2018-04-27 09:04:34 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 09:04:34 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 09:04:34 -No alter strings for table : department
2018-04-27 09:04:34 -No alter strings for table : role
2018-04-27 09:04:34 -No alter strings for table : user
2018-04-27 09:04:34 -No alter strings for table : user_role
2018-04-27 09:04:34 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 09:04:34 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 09:04:34 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 09:04:34 -Checking 0 named HQL queries
2018-04-27 09:04:34 -Checking 0 named SQL queries
2018-04-27 09:04:34 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a730479
2018-04-27 09:04:34 -Registering SessionFactory: a6d6bad3-3fa0-416e-b4c4-1359e37d5c3d (<unnamed>)
2018-04-27 09:04:34 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 09:04:34 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:04:34 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:04:35 -Statistics initialized [enabled=false]
2018-04-27 09:04:35 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@35d4035f
2018-04-27 09:04:35 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 09:04:35 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:04:35 -throwQueryException() : no errors
2018-04-27 09:04:35 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 09:04:35 -select << begin [level=1, statement=select]
2018-04-27 09:04:35 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:04:35 -Resolved : t -> user0_.id
2018-04-27 09:04:35 -Resolved : t -> user0_.id
2018-04-27 09:04:35 -getDataType() : name -> org.hibernate.type.StringType@191ec193
2018-04-27 09:04:35 -Resolved : t.name -> user0_.name
2018-04-27 09:04:35 -select : finishing up [level=1, statement=select]
2018-04-27 09:04:35 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 09:04:35 -Using FROM fragment [user user0_]
2018-04-27 09:04:35 -select >> end [level=1, statement=select]
2018-04-27 09:04:35 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@191ec193}

2018-04-27 09:04:35 -throwQueryException() : no errors
2018-04-27 09:04:35 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:04:35 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 09:04:35 -throwQueryException() : no errors
2018-04-27 09:04:35 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:04:35 -throwQueryException() : no errors
2018-04-27 09:04:35 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 09:04:35 -select << begin [level=1, statement=select]
2018-04-27 09:04:35 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:04:35 -Resolved : t -> user0_.id
2018-04-27 09:04:35 -Resolved : t -> user0_.id
2018-04-27 09:04:35 -getDataType() : name -> org.hibernate.type.StringType@191ec193
2018-04-27 09:04:35 -Resolved : t.name -> user0_.name
2018-04-27 09:04:35 -Resolved : t -> user0_.id
2018-04-27 09:04:35 -getDataType() : email -> org.hibernate.type.StringType@191ec193
2018-04-27 09:04:35 -Resolved : t.email -> user0_.email
2018-04-27 09:04:35 -select : finishing up [level=1, statement=select]
2018-04-27 09:04:35 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 09:04:35 -Using FROM fragment [user user0_]
2018-04-27 09:04:35 -select >> end [level=1, statement=select]
2018-04-27 09:04:35 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@191ec193}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@191ec193}

2018-04-27 09:04:35 -throwQueryException() : no errors
2018-04-27 09:04:35 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:04:35 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 09:04:35 -throwQueryException() : no errors
2018-04-27 09:04:35 -Using SLF4J as the default logging framework
2018-04-27 09:04:35 --Dio.netty.eventLoopThreads: 4
2018-04-27 09:04:35 --Dio.netty.leakDetection.level: simple
2018-04-27 09:04:35 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 09:04:35 -Platform: Windows
2018-04-27 09:04:35 --Dio.netty.noUnsafe: false
2018-04-27 09:04:35 -Java version: 8
2018-04-27 09:04:35 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 09:04:35 -sun.misc.Unsafe.copyMemory: available
2018-04-27 09:04:35 -java.nio.Buffer.address: available
2018-04-27 09:04:35 -direct buffer constructor: available
2018-04-27 09:04:35 -java.nio.Bits.unaligned: available, true
2018-04-27 09:04:35 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 09:04:35 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 09:04:35 -sun.misc.Unsafe: available
2018-04-27 09:04:35 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 09:04:35 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 09:04:35 --Dio.netty.noPreferDirect: false
2018-04-27 09:04:35 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 09:04:35 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 09:04:35 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 09:04:35 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@61d6c8c4
2018-04-27 09:04:35 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 09:04:35 -Using Slf4j logging framework
2018-04-27 09:04:35 -Starting UnsafeSupport init in Java 1.8
2018-04-27 09:04:35 -Unsafe is available
2018-04-27 09:04:35 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 09:04:35 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 09:04:35 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 09:04:35 --Dio.netty.allocator.pageSize: 8192
2018-04-27 09:04:35 --Dio.netty.allocator.maxOrder: 11
2018-04-27 09:04:35 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 09:04:35 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 09:04:35 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 09:04:35 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 09:04:35 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 09:04:35 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 09:04:35 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 09:04:35 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 09:04:35 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:04:35 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:04:35 -Neo4jMappingContext initialisation completed
2018-04-27 09:04:35 -Neo4jMappingContext initialisation completed
2018-04-27 09:04:36 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:04:36 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:04:36 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:04:36 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:04:36 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 09:04:36 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 09:04:36 -Opened connection [connectionId{localValue:1, serverValue:5}] to 192.168.71.151:27017
2018-04-27 09:04:36 -Checking status of 192.168.71.151:27017
2018-04-27 09:04:36 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3516892}
2018-04-27 09:04:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.5 ms, state=CONNECTED}]
2018-04-27 09:04:37 -Opened connection [connectionId{localValue:2, serverValue:6}] to 192.168.71.151:27017
2018-04-27 09:04:37 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:6}] to server 192.168.71.151:27017
2018-04-27 09:04:37 -Command execution completed
2018-04-27 09:04:37 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:04:37 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:04:37 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:04:37 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:04:37 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:04:37 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:04:37 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:04:37 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:04:37 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:04:37 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:04:37 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:04:37 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:04:37 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:04:37 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:04:37 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:04:37 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:04:37 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:04:37 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:04:37 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:04:37 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:04:37 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:04:37 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:04:37 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:04:37 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:04:37 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:04:37 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:04:37 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:04:37 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:04:37 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:04:37 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:04:37 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:04:37 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:04:37 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:04:37 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:04:37 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:04:37 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:04:37 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:04:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:04:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:04:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:04:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:04:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:04:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:04:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:04:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:04:37 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:04:37 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:04:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:04:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:04:37 -init trackerLocator [192.168.71.161:22122]
2018-04-27 09:04:38 -Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@749ffdc7, org.springframework.security.web.context.SecurityContextPersistenceFilter@1c41931a, org.springframework.security.web.header.HeaderWriterFilter@4844e24b, org.springframework.security.web.authentication.logout.LogoutFilter@1e6e29d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7db70494, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61c0fb12, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@690e7b89, org.springframework.security.web.session.SessionManagementFilter@241abc2, org.springframework.security.web.access.ExceptionTranslationFilter@5cff6d1d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@49741e80]
2018-04-27 09:04:38 -Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@749ffdc7, org.springframework.security.web.context.SecurityContextPersistenceFilter@1c41931a, org.springframework.security.web.header.HeaderWriterFilter@4844e24b, org.springframework.security.web.authentication.logout.LogoutFilter@1e6e29d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7db70494, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@61c0fb12, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@690e7b89, org.springframework.security.web.session.SessionManagementFilter@241abc2, org.springframework.security.web.access.ExceptionTranslationFilter@5cff6d1d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@49741e80]
2018-04-27 09:04:38 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:04:38 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:04:38 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:04:38 -Loaded expression factory via original TCCL
2018-04-27 09:04:38 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:04:38 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:04:38 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:04:38 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:04:38 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:04:38 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:04:38 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:04:38 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:04:38 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:04:38 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:04:38 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:04:38 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:04:38 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:04:38 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:04:38 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:04:38 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:04:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15a04efb: startup date [Fri Apr 27 09:04:29 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:04:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@15a04efb: startup date [Fri Apr 27 09:04:29 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:04:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:04:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:04:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:04:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:04:38 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:04:38 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:04:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:04:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:04:39 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:04:39 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:04:39 -Registering beans for JMX exposure on startup
2018-04-27 09:04:39 -Registering beans for JMX exposure on startup
2018-04-27 09:04:39 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:04:39 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:04:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:04:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:04:39 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:04:39 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:04:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:04:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:04:39 -Starting beans in phase 2147483647
2018-04-27 09:04:39 -Starting beans in phase 2147483647
2018-04-27 09:04:39 -Context refreshed
2018-04-27 09:04:39 -Context refreshed
2018-04-27 09:04:39 -Found 1 custom documentation plugin(s)
2018-04-27 09:04:39 -Found 1 custom documentation plugin(s)
2018-04-27 09:04:39 -Scanning for api listing references
2018-04-27 09:04:39 -Scanning for api listing references
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:39 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:04:39 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: createUsingGET_1
2018-04-27 09:04:40 -Generating unique operation named: createUsingGET_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:04:40 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:04:40 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:04:40 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:04:40 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:04:40 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:04:40 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:04:40 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:04:40 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:04:40 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingGET_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingGET_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:04:40 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:04:40 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:04:40 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: showUsingGET_1
2018-04-27 09:04:40 -Generating unique operation named: showUsingGET_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:04:40 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:04:40 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:04:40 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:04:40 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:04:40 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:04:40 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:04:40 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:04:40 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:04:40 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:04:40 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:04:40 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:04:40 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:04:40 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:04:40 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:04:40 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:04:40 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:04:40 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:04:40 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:04:40 -Starting ProtocolHandler ["http-nio-8080"]
2018-04-27 09:04:40 -Using a shared selector for servlet write/read
2018-04-27 09:04:40 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:04:40 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:04:40 -Started DemoApplication in 11.727 seconds (JVM running for 12.713)
2018-04-27 09:04:46 -Checking status of 192.168.71.151:27017
2018-04-27 09:04:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2018-04-27 09:04:56 -Checking status of 192.168.71.151:27017
2018-04-27 09:04:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.7 ms, state=CONNECTED}]
2018-04-27 09:05:06 -Checking status of 192.168.71.151:27017
2018-04-27 09:05:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 09:05:16 -Checking status of 192.168.71.151:27017
2018-04-27 09:05:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 09:05:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-27 09:05:18 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:05:18 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:05:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-04-27 09:05:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2018-04-27 09:05:26 -Checking status of 192.168.71.151:27017
2018-04-27 09:05:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 09:05:36 -Checking status of 192.168.71.151:27017
2018-04-27 09:05:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 09:05:46 -Checking status of 192.168.71.151:27017
2018-04-27 09:05:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 09:05:58 -Starting DemoApplication on DESKTOP-4VE2VST with PID 7172 (Y:\MyGit\demo\target\classes started by Qiang in Y:\MyGit\demo)
2018-04-27 09:05:58 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 09:05:58 -The following profiles are active: dev
2018-04-27 09:05:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b367418: startup date [Fri Apr 27 09:05:58 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:05:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b367418: startup date [Fri Apr 27 09:05:58 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:05:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:05:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:06:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:06:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:06:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:06:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:06:00 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:06:00 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:06:00 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:06:00 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:06:00 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:06:00 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:06:00 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:06:00 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:06:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:06:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:06:00 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:06:00 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:06:00 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:06:00 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:06:00 -Loaded expression factory via original TCCL
2018-04-27 09:06:00 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:06:00 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:06:00 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:06:00 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:06:00 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:06:00 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:06:00 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:06:00 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:06:00 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:06:00 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:06:00 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:06:00 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:06:00 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:06:00 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:06:00 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:06:00 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:06:00 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$33cc4bf8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:00 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$33cc4bf8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$50b4e47c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$50b4e47c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:00 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$248f3788] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:00 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$248f3788] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:00 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:00 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:00 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:00 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:00 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:00 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:01 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 09:06:01 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 09:06:01 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 09:06:01 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 09:06:01 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 09:06:01 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 09:06:01 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 09:06:01 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 09:06:01 -Starting Post-processing phase
2018-04-27 09:06:01 -Building annotation class map
2018-04-27 09:06:01 -Building interface class map for 8 classes
2018-04-27 09:06:01 - - Actor implements 0 interfaces
2018-04-27 09:06:01 - - Role implements 1 interfaces
2018-04-27 09:06:01 -   - java.io.Serializable
2018-04-27 09:06:01 - - MongoUser implements 0 interfaces
2018-04-27 09:06:01 - - Role implements 0 interfaces
2018-04-27 09:06:01 - - Movie implements 0 interfaces
2018-04-27 09:06:01 - - Department implements 0 interfaces
2018-04-27 09:06:01 - - BookBean implements 0 interfaces
2018-04-27 09:06:01 - - User implements 1 interfaces
2018-04-27 09:06:01 -   - java.io.Serializable
2018-04-27 09:06:01 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 09:06:01 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 09:06:01 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:06:01 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 09:06:01 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 09:06:01 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 09:06:01 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 09:06:01 -Post-processing: com.example.ren.model.BookBean
2018-04-27 09:06:01 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 09:06:01 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:06:01 -Checking for @Transient classes....
2018-04-27 09:06:01 -Registering converters and deregistering transient fields and methods....
2018-04-27 09:06:01 -Post-processing complete
2018-04-27 09:06:01 -Building Index Metadata.
2018-04-27 09:06:01 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:01 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:06:01 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:06:01 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:06:01 -Initializing ProtocolHandler ["http-nio-8080"]
2018-04-27 09:06:01 -Starting service [Tomcat]
2018-04-27 09:06:01 -Starting Servlet Engine: Apache Tomcat/8.5.28
2018-04-27 09:06:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;.]
2018-04-27 09:06:02 -Initializing Spring embedded WebApplicationContext
2018-04-27 09:06:02 -Root WebApplicationContext: initialization completed in 3207 ms
2018-04-27 09:06:02 -Root WebApplicationContext: initialization completed in 3207 ms
2018-04-27 09:06:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:06:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:06:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:06:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:06:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:06:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:06:02 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:06:02 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:06:02 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-27 09:06:02 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2018-04-27 09:06:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:06:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:06:02 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:06:02 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:06:02 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:06:02 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:06:02 -{dataSource-1} inited
2018-04-27 09:06:02 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:06:02 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:06:02 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 09:06:02",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:1413473944, ConnectTime:"2018-04-27 09:06:02", UseCount:1, LastActiveTime:"2018-04-27 09:06:02"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 09:06:02 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 09:06:02 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 09:06:02 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 09:06:02 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 09:06:03 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 09:06:03 -HHH000206: hibernate.properties not found
2018-04-27 09:06:03 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 09:06:03 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 09:06:03 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 09:06:03 -Adding type registration boolean -> org.hibernate.type.BooleanType@5c234920
2018-04-27 09:06:03 -Adding type registration boolean -> org.hibernate.type.BooleanType@5c234920
2018-04-27 09:06:03 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5c234920
2018-04-27 09:06:03 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5a4464c5
2018-04-27 09:06:03 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@250967f1
2018-04-27 09:06:03 -Adding type registration yes_no -> org.hibernate.type.YesNoType@15a8cebd
2018-04-27 09:06:03 -Adding type registration byte -> org.hibernate.type.ByteType@44faa4f2
2018-04-27 09:06:03 -Adding type registration byte -> org.hibernate.type.ByteType@44faa4f2
2018-04-27 09:06:03 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@44faa4f2
2018-04-27 09:06:03 -Adding type registration character -> org.hibernate.type.CharacterType@76a6f045
2018-04-27 09:06:03 -Adding type registration char -> org.hibernate.type.CharacterType@76a6f045
2018-04-27 09:06:03 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@76a6f045
2018-04-27 09:06:03 -Adding type registration short -> org.hibernate.type.ShortType@6bf570c
2018-04-27 09:06:03 -Adding type registration short -> org.hibernate.type.ShortType@6bf570c
2018-04-27 09:06:03 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6bf570c
2018-04-27 09:06:03 -Adding type registration integer -> org.hibernate.type.IntegerType@200d1a3d
2018-04-27 09:06:03 -Adding type registration int -> org.hibernate.type.IntegerType@200d1a3d
2018-04-27 09:06:03 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@200d1a3d
2018-04-27 09:06:03 -Adding type registration long -> org.hibernate.type.LongType@23b1aa9
2018-04-27 09:06:03 -Adding type registration long -> org.hibernate.type.LongType@23b1aa9
2018-04-27 09:06:03 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@23b1aa9
2018-04-27 09:06:03 -Adding type registration float -> org.hibernate.type.FloatType@6d969330
2018-04-27 09:06:03 -Adding type registration float -> org.hibernate.type.FloatType@6d969330
2018-04-27 09:06:03 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d969330
2018-04-27 09:06:03 -Adding type registration double -> org.hibernate.type.DoubleType@3a2546d6
2018-04-27 09:06:03 -Adding type registration double -> org.hibernate.type.DoubleType@3a2546d6
2018-04-27 09:06:03 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a2546d6
2018-04-27 09:06:03 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3e38c472
2018-04-27 09:06:03 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3e38c472
2018-04-27 09:06:03 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@66020d69
2018-04-27 09:06:03 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@66020d69
2018-04-27 09:06:03 -Adding type registration string -> org.hibernate.type.StringType@55421b8d
2018-04-27 09:06:03 -Adding type registration java.lang.String -> org.hibernate.type.StringType@55421b8d
2018-04-27 09:06:03 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13e00016
2018-04-27 09:06:03 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@57b9389f
2018-04-27 09:06:03 -Adding type registration url -> org.hibernate.type.UrlType@56b1e527
2018-04-27 09:06:03 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@56b1e527
2018-04-27 09:06:03 -Adding type registration Duration -> org.hibernate.type.DurationType@1aedf08d
2018-04-27 09:06:03 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1aedf08d
2018-04-27 09:06:03 -Adding type registration Instant -> org.hibernate.type.InstantType@3b28b7b0
2018-04-27 09:06:03 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3b28b7b0
2018-04-27 09:06:03 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@374c3975
2018-04-27 09:06:03 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@374c3975
2018-04-27 09:06:03 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@615b5480
2018-04-27 09:06:03 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@615b5480
2018-04-27 09:06:03 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@46cf8c07
2018-04-27 09:06:03 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@46cf8c07
2018-04-27 09:06:03 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b01cb8d
2018-04-27 09:06:03 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b01cb8d
2018-04-27 09:06:03 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@179ee36b
2018-04-27 09:06:03 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@179ee36b
2018-04-27 09:06:03 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@25533bba
2018-04-27 09:06:03 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@25533bba
2018-04-27 09:06:03 -Adding type registration date -> org.hibernate.type.DateType@5f6494c0
2018-04-27 09:06:03 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f6494c0
2018-04-27 09:06:03 -Adding type registration time -> org.hibernate.type.TimeType@33de7f3d
2018-04-27 09:06:03 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@33de7f3d
2018-04-27 09:06:03 -Adding type registration timestamp -> org.hibernate.type.TimestampType@ac4915e
2018-04-27 09:06:03 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@ac4915e
2018-04-27 09:06:03 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@ac4915e
2018-04-27 09:06:03 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23648d2d
2018-04-27 09:06:03 -Adding type registration calendar -> org.hibernate.type.CalendarType@221ca495
2018-04-27 09:06:03 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@221ca495
2018-04-27 09:06:03 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@221ca495
2018-04-27 09:06:03 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3ec9f8d
2018-04-27 09:06:03 -Adding type registration locale -> org.hibernate.type.LocaleType@51424203
2018-04-27 09:06:03 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51424203
2018-04-27 09:06:03 -Adding type registration currency -> org.hibernate.type.CurrencyType@721bf7ad
2018-04-27 09:06:03 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@721bf7ad
2018-04-27 09:06:03 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@3962ec84
2018-04-27 09:06:03 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3962ec84
2018-04-27 09:06:03 -Adding type registration class -> org.hibernate.type.ClassType@639c7f9c
2018-04-27 09:06:03 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@639c7f9c
2018-04-27 09:06:03 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3855d9b2
2018-04-27 09:06:03 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3855d9b2
2018-04-27 09:06:03 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2cae5fa7
2018-04-27 09:06:03 -Adding type registration binary -> org.hibernate.type.BinaryType@2f4d01b6
2018-04-27 09:06:03 -Adding type registration byte[] -> org.hibernate.type.BinaryType@2f4d01b6
2018-04-27 09:06:03 -Adding type registration [B -> org.hibernate.type.BinaryType@2f4d01b6
2018-04-27 09:06:03 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@661e279d
2018-04-27 09:06:03 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@661e279d
2018-04-27 09:06:03 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@661e279d
2018-04-27 09:06:03 -Adding type registration row_version -> org.hibernate.type.RowVersionType@32e5af53
2018-04-27 09:06:03 -Adding type registration image -> org.hibernate.type.ImageType@27bcb4ad
2018-04-27 09:06:03 -Adding type registration characters -> org.hibernate.type.CharArrayType@1e191150
2018-04-27 09:06:03 -Adding type registration char[] -> org.hibernate.type.CharArrayType@1e191150
2018-04-27 09:06:03 -Adding type registration [C -> org.hibernate.type.CharArrayType@1e191150
2018-04-27 09:06:03 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@aca3c85
2018-04-27 09:06:03 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@aca3c85
2018-04-27 09:06:03 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@aca3c85
2018-04-27 09:06:03 -Adding type registration text -> org.hibernate.type.TextType@69a373fd
2018-04-27 09:06:03 -Adding type registration ntext -> org.hibernate.type.NTextType@6df11e91
2018-04-27 09:06:03 -Adding type registration blob -> org.hibernate.type.BlobType@77fc19cf
2018-04-27 09:06:03 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@77fc19cf
2018-04-27 09:06:03 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c16528d
2018-04-27 09:06:03 -Adding type registration clob -> org.hibernate.type.ClobType@27bc1d44
2018-04-27 09:06:03 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@27bc1d44
2018-04-27 09:06:03 -Adding type registration nclob -> org.hibernate.type.NClobType@2035d65b
2018-04-27 09:06:03 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2035d65b
2018-04-27 09:06:03 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d1a859c
2018-04-27 09:06:03 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3070f3e6
2018-04-27 09:06:03 -Adding type registration serializable -> org.hibernate.type.SerializableType@5cce40d7
2018-04-27 09:06:03 -Adding type registration object -> org.hibernate.type.ObjectType@b7d2d51
2018-04-27 09:06:03 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@b7d2d51
2018-04-27 09:06:03 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@66b0e207
2018-04-27 09:06:03 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74a58a06
2018-04-27 09:06:03 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7308c820
2018-04-27 09:06:03 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d601832
2018-04-27 09:06:03 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ca17943
2018-04-27 09:06:03 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@640c216b
2018-04-27 09:06:03 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5170bc02
2018-04-27 09:06:03 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c0c8f96
2018-04-27 09:06:03 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 09:06:03 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 09:06:03 -JDBC version : 4.0
2018-04-27 09:06:03 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 09:06:03 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 09:06:03 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:06:03 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 09:06:03 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 09:06:03 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 09:06:03 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:06:03 -Import with entity name Role
2018-04-27 09:06:03 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:06:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 09:06:03 -building SimpleValue for id
2018-04-27 09:06:03 -Building property id
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:06:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 09:06:03 -building SimpleValue for name
2018-04-27 09:06:03 -Building property name
2018-04-27 09:06:03 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 09:06:03 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:06:03 -Import with entity name Department
2018-04-27 09:06:03 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:06:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 09:06:03 -building SimpleValue for id
2018-04-27 09:06:03 -Building property id
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:06:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 09:06:03 -building SimpleValue for name
2018-04-27 09:06:03 -Building property name
2018-04-27 09:06:03 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 09:06:03 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:06:03 -Import with entity name User
2018-04-27 09:06:03 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:06:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 09:06:03 -building SimpleValue for id
2018-04-27 09:06:03 -Building property id
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 09:06:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 09:06:03 -building SimpleValue for createDate
2018-04-27 09:06:03 -Building property createDate
2018-04-27 09:06:03 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -Building property department
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -MetadataSourceProcessor property email with lazy=false
2018-04-27 09:06:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 09:06:03 -building SimpleValue for email
2018-04-27 09:06:03 -Building property email
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:06:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 09:06:03 -building SimpleValue for name
2018-04-27 09:06:03 -Building property name
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -MetadataSourceProcessor property password with lazy=false
2018-04-27 09:06:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 09:06:03 -building SimpleValue for password
2018-04-27 09:06:03 -Building property password
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 09:06:03 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 09:06:03 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 09:06:03 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 09:06:03 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 09:06:03 -Building property roles
2018-04-27 09:06:03 -Starting fillSimpleValue for id
2018-04-27 09:06:03 -Starting fillSimpleValue for name
2018-04-27 09:06:03 -Starting fillSimpleValue for id
2018-04-27 09:06:03 -Starting fillSimpleValue for name
2018-04-27 09:06:03 -Starting fillSimpleValue for id
2018-04-27 09:06:03 -Starting fillSimpleValue for createDate
2018-04-27 09:06:03 -Starting fillSimpleValue for email
2018-04-27 09:06:03 -Starting fillSimpleValue for name
2018-04-27 09:06:03 -Starting fillSimpleValue for password
2018-04-27 09:06:03 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 09:06:03 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 09:06:03 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 09:06:03 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:06:03 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 09:06:03 -Mapped collection key: user_id, element: role_id
2018-04-27 09:06:03 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:06:03 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:06:03 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:06:03 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:06:03 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:06:03 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:06:03 -Building session factory
2018-04-27 09:06:03 -SessionFactory name : null
2018-04-27 09:06:03 -Automatic flush during beforeCompletion(): enabled
2018-04-27 09:06:03 -Automatic session close at end of transaction: disabled
2018-04-27 09:06:03 -Statistics: disabled
2018-04-27 09:06:03 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 09:06:03 -Default entity-mode: pojo
2018-04-27 09:06:03 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 09:06:03 -Allow initialization of lazy state outside session : disabled
2018-04-27 09:06:03 -Using BatchFetchStyle : LEGACY
2018-04-27 09:06:03 -Default batch fetch size: -1
2018-04-27 09:06:03 -Maximum outer join fetch depth: 2
2018-04-27 09:06:03 -Default null ordering: NONE
2018-04-27 09:06:03 -Order SQL updates by primary key: disabled
2018-04-27 09:06:03 -Order SQL inserts for batching: disabled
2018-04-27 09:06:03 -multi-tenancy strategy : NONE
2018-04-27 09:06:03 -JTA Track by Thread: enabled
2018-04-27 09:06:03 -Query language substitutions: {}
2018-04-27 09:06:03 -JPA query language strict compliance: disabled
2018-04-27 09:06:03 -Named query checking : enabled
2018-04-27 09:06:03 -Second-level cache: enabled
2018-04-27 09:06:03 -Second-level query cache: disabled
2018-04-27 09:06:03 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@8851ec
2018-04-27 09:06:03 -Second-level cache region prefix: null
2018-04-27 09:06:03 -Optimize second-level cache for minimal puts: disabled
2018-04-27 09:06:03 -Structured second-level cache entries: disabled
2018-04-27 09:06:03 -Second-level cache direct-reference entries: disabled
2018-04-27 09:06:03 -Automatic eviction of collection cache: disabled
2018-04-27 09:06:03 -JDBC batch size: 15
2018-04-27 09:06:03 -JDBC batch updates for versioned data: enabled
2018-04-27 09:06:03 -Scrollable result sets: enabled
2018-04-27 09:06:03 -Wrap result sets: disabled
2018-04-27 09:06:03 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 09:06:03 -JDBC result set fetch size: null
2018-04-27 09:06:03 -Connection release mode: ON_CLOSE
2018-04-27 09:06:03 -Generate SQL with comments: disabled
2018-04-27 09:06:03 -Session factory constructed with filter configurations : {}
2018-04-27 09:06:03 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-security\2.0.0.RELEASE\spring-boot-starter-security-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-config\5.0.3.RELEASE\spring-security-config-5.0.3.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-core\5.0.3.RELEASE\spring-security-core-5.0.3.RELEASE.jar;X:\Maven\repository\org\springframework\security\spring-security-web\5.0.3.RELEASE\spring-security-web-5.0.3.RELEASE.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.example.ren.DemoApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7019d619, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, spring.output.ansi.enabled=always, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, catalina.home=C:\Users\Qiang\AppData\Local\Temp\tomcat.8400041956709082952.8080, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=7172, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\Qiang\AppData\Local\Temp\tomcat.8400041956709082952.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2a5c6b76, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 09:06:02",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:1413473944, ConnectTime:"2018-04-27 09:06:02", UseCount:2, LastActiveTime:"2018-04-27 09:06:03"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 09:06:03 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:06:03 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:06:03 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:06:03 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:06:03 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:06:03 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:06:03 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:06:03 -Loaded expression factory via original TCCL
2018-04-27 09:06:03 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:06:03 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:06:03 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:06:03 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:06:03 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:06:03 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:06:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:06:03 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:06:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:06:03 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:06:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:06:03 -Skipping JACC integration as it was not enabled
2018-04-27 09:06:03 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 09:06:03 -Instantiated session factory
2018-04-27 09:06:03 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:06:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:06:03 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:06:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:06:03 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:06:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:06:03 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:06:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:06:03 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:06:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:06:03 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:06:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:06:03 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:06:03 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 09:06:03 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 09:06:03 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 09:06:03 - One-shot delete: delete from user_role where user_id=?
2018-04-27 09:06:03 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 09:06:03 - Version select: select id from role where id =?
2018-04-27 09:06:03 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 09:06:03 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 09:06:03 - Update 0: update role set name=? where id=?
2018-04-27 09:06:03 - Delete 0: delete from role where id=?
2018-04-27 09:06:03 - Identity insert: insert into role (name) values (?)
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@173a5fad]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb99d1d]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fd37449]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43445fc6]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17befef0]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3129299f]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fdac2a7]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c31b17]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5950054d]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cf230bf]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64665781]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:06:03 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:06:03 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:06:03 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 09:06:03 - Version select: select id from department where id =?
2018-04-27 09:06:03 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 09:06:03 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 09:06:03 - Update 0: update department set name=? where id=?
2018-04-27 09:06:03 - Delete 0: delete from department where id=?
2018-04-27 09:06:03 - Identity insert: insert into department (name) values (?)
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40738846]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1686ed85]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc3529]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@192f5f39]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2965dd88]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51141f64]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35ceec81]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8df667]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@be616f0]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cf08c97]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ca2be53]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:06:03 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:06:03 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:06:03 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 09:06:03 - Version select: select id from user where id =?
2018-04-27 09:06:03 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 09:06:03 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 09:06:03 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 09:06:03 - Delete 0: delete from user where id=?
2018-04-27 09:06:03 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70697478]
2018-04-27 09:06:03 -Visiting attribute path : createDate
2018-04-27 09:06:03 -Visiting attribute path : department
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d4b573]
2018-04-27 09:06:03 -Visiting attribute path : department.name
2018-04-27 09:06:03 -Visiting attribute path : email
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Visiting attribute path : password
2018-04-27 09:06:03 -Visiting attribute path : roles
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79e2606f]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5604b85]
2018-04-27 09:06:03 -Visiting attribute path : roles.name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73dbe25]
2018-04-27 09:06:03 -Visiting attribute path : createDate
2018-04-27 09:06:03 -Visiting attribute path : department
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bfdaa7a]
2018-04-27 09:06:03 -Visiting attribute path : department.name
2018-04-27 09:06:03 -Visiting attribute path : email
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Visiting attribute path : password
2018-04-27 09:06:03 -Visiting attribute path : roles
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@149b53fa]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73be4cdd]
2018-04-27 09:06:03 -Visiting attribute path : roles.name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dc3ece8]
2018-04-27 09:06:03 -Visiting attribute path : createDate
2018-04-27 09:06:03 -Visiting attribute path : department
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d7865d6]
2018-04-27 09:06:03 -Visiting attribute path : email
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Visiting attribute path : password
2018-04-27 09:06:03 -Visiting attribute path : roles
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45e639ee]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77f03916]
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fbbd90c]
2018-04-27 09:06:03 -Visiting attribute path : createDate
2018-04-27 09:06:03 -Visiting attribute path : department
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559e3f67]
2018-04-27 09:06:03 -Visiting attribute path : email
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Visiting attribute path : password
2018-04-27 09:06:03 -Visiting attribute path : roles
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23d0944b]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72f24a84]
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d543a9]
2018-04-27 09:06:03 -Visiting attribute path : createDate
2018-04-27 09:06:03 -Visiting attribute path : department
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ac19bc6]
2018-04-27 09:06:03 -Visiting attribute path : email
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Visiting attribute path : password
2018-04-27 09:06:03 -Visiting attribute path : roles
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a075e70]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@492c9892]
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@533e2f4]
2018-04-27 09:06:03 -Visiting attribute path : createDate
2018-04-27 09:06:03 -Visiting attribute path : department
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@538e74fc]
2018-04-27 09:06:03 -Visiting attribute path : email
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Visiting attribute path : password
2018-04-27 09:06:03 -Visiting attribute path : roles
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ecb9e17]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6475e778]
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75bf9e67]
2018-04-27 09:06:03 -Visiting attribute path : createDate
2018-04-27 09:06:03 -Visiting attribute path : department
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@772f3a3f]
2018-04-27 09:06:03 -Visiting attribute path : email
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Visiting attribute path : password
2018-04-27 09:06:03 -Visiting attribute path : roles
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3caa4d85]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@356fa0d1]
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51508029]
2018-04-27 09:06:03 -Visiting attribute path : createDate
2018-04-27 09:06:03 -Visiting attribute path : department
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31880efa]
2018-04-27 09:06:03 -Visiting attribute path : email
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Visiting attribute path : password
2018-04-27 09:06:03 -Visiting attribute path : roles
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79295932]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cadcff6]
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e00bdb]
2018-04-27 09:06:03 -Visiting attribute path : createDate
2018-04-27 09:06:03 -Visiting attribute path : department
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@343d1d25]
2018-04-27 09:06:03 -Visiting attribute path : email
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Visiting attribute path : password
2018-04-27 09:06:03 -Visiting attribute path : roles
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@762da62b]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5c5e6]
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76dc36e5]
2018-04-27 09:06:03 -Visiting attribute path : createDate
2018-04-27 09:06:03 -Visiting attribute path : department
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31533eb1]
2018-04-27 09:06:03 -Visiting attribute path : email
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Visiting attribute path : password
2018-04-27 09:06:03 -Visiting attribute path : roles
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1fb71788]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8cb7185]
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dac40b]
2018-04-27 09:06:03 -Visiting attribute path : createDate
2018-04-27 09:06:03 -Visiting attribute path : department
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b788dc2]
2018-04-27 09:06:03 -Visiting attribute path : email
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Visiting attribute path : password
2018-04-27 09:06:03 -Visiting attribute path : roles
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58ec8271]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a44effb]
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:06:03 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:06:03 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:06:03 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@578b2dec]
2018-04-27 09:06:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66863941]
2018-04-27 09:06:03 -Visiting attribute path : name
2018-04-27 09:06:03 -Building LoadPlan...
2018-04-27 09:06:03 -processing queryspace <gen:0>
2018-04-27 09:06:03 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 09:06:03 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 09:06:04 -No alter strings for table : department
2018-04-27 09:06:04 -No alter strings for table : role
2018-04-27 09:06:04 -No alter strings for table : user
2018-04-27 09:06:04 -No alter strings for table : user_role
2018-04-27 09:06:04 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 09:06:04 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 09:06:04 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 09:06:04 -Checking 0 named HQL queries
2018-04-27 09:06:04 -Checking 0 named SQL queries
2018-04-27 09:06:04 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7497a554
2018-04-27 09:06:04 -Registering SessionFactory: 3cd87ab8-24ed-4107-8d3a-3c1822de57ee (<unnamed>)
2018-04-27 09:06:04 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 09:06:04 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:06:04 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:06:04 -Statistics initialized [enabled=false]
2018-04-27 09:06:04 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@390a7532
2018-04-27 09:06:04 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 09:06:04 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:06:04 -throwQueryException() : no errors
2018-04-27 09:06:04 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 09:06:04 -select << begin [level=1, statement=select]
2018-04-27 09:06:04 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:06:04 -Resolved : t -> user0_.id
2018-04-27 09:06:04 -Resolved : t -> user0_.id
2018-04-27 09:06:04 -getDataType() : name -> org.hibernate.type.StringType@55421b8d
2018-04-27 09:06:04 -Resolved : t.name -> user0_.name
2018-04-27 09:06:04 -select : finishing up [level=1, statement=select]
2018-04-27 09:06:04 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 09:06:04 -Using FROM fragment [user user0_]
2018-04-27 09:06:04 -select >> end [level=1, statement=select]
2018-04-27 09:06:04 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@55421b8d}

2018-04-27 09:06:04 -throwQueryException() : no errors
2018-04-27 09:06:04 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:06:04 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 09:06:04 -throwQueryException() : no errors
2018-04-27 09:06:04 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:06:04 -throwQueryException() : no errors
2018-04-27 09:06:04 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 09:06:04 -select << begin [level=1, statement=select]
2018-04-27 09:06:04 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:06:04 -Resolved : t -> user0_.id
2018-04-27 09:06:04 -Resolved : t -> user0_.id
2018-04-27 09:06:04 -getDataType() : name -> org.hibernate.type.StringType@55421b8d
2018-04-27 09:06:04 -Resolved : t.name -> user0_.name
2018-04-27 09:06:04 -Resolved : t -> user0_.id
2018-04-27 09:06:04 -getDataType() : email -> org.hibernate.type.StringType@55421b8d
2018-04-27 09:06:04 -Resolved : t.email -> user0_.email
2018-04-27 09:06:04 -select : finishing up [level=1, statement=select]
2018-04-27 09:06:04 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 09:06:04 -Using FROM fragment [user user0_]
2018-04-27 09:06:04 -select >> end [level=1, statement=select]
2018-04-27 09:06:04 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@55421b8d}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@55421b8d}

2018-04-27 09:06:04 -throwQueryException() : no errors
2018-04-27 09:06:04 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:06:04 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 09:06:04 -throwQueryException() : no errors
2018-04-27 09:06:04 -Using SLF4J as the default logging framework
2018-04-27 09:06:04 --Dio.netty.eventLoopThreads: 4
2018-04-27 09:06:04 --Dio.netty.leakDetection.level: simple
2018-04-27 09:06:04 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 09:06:04 -Platform: Windows
2018-04-27 09:06:04 --Dio.netty.noUnsafe: false
2018-04-27 09:06:04 -Java version: 8
2018-04-27 09:06:04 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 09:06:04 -sun.misc.Unsafe.copyMemory: available
2018-04-27 09:06:04 -java.nio.Buffer.address: available
2018-04-27 09:06:04 -direct buffer constructor: available
2018-04-27 09:06:04 -java.nio.Bits.unaligned: available, true
2018-04-27 09:06:04 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 09:06:04 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 09:06:04 -sun.misc.Unsafe: available
2018-04-27 09:06:04 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 09:06:04 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 09:06:04 --Dio.netty.noPreferDirect: false
2018-04-27 09:06:04 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 09:06:04 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 09:06:04 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 09:06:04 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@13047d3d
2018-04-27 09:06:04 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 09:06:04 -Using Slf4j logging framework
2018-04-27 09:06:05 -Starting UnsafeSupport init in Java 1.8
2018-04-27 09:06:05 -Unsafe is available
2018-04-27 09:06:05 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 09:06:05 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 09:06:05 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 09:06:05 --Dio.netty.allocator.pageSize: 8192
2018-04-27 09:06:05 --Dio.netty.allocator.maxOrder: 11
2018-04-27 09:06:05 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 09:06:05 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 09:06:05 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 09:06:05 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 09:06:05 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 09:06:05 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 09:06:05 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 09:06:05 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 09:06:05 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:06:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:06:05 -Neo4jMappingContext initialisation completed
2018-04-27 09:06:05 -Neo4jMappingContext initialisation completed
2018-04-27 09:06:05 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:06:05 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:06:05 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:06:05 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:06:06 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 09:06:06 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 09:06:06 -Opened connection [connectionId{localValue:1, serverValue:7}] to 192.168.71.151:27017
2018-04-27 09:06:06 -Checking status of 192.168.71.151:27017
2018-04-27 09:06:06 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3497337}
2018-04-27 09:06:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.5 ms, state=CONNECTED}]
2018-04-27 09:06:06 -Opened connection [connectionId{localValue:2, serverValue:8}] to 192.168.71.151:27017
2018-04-27 09:06:06 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:8}] to server 192.168.71.151:27017
2018-04-27 09:06:06 -Command execution completed
2018-04-27 09:06:06 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:06:06 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:06:06 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:06:06 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:06:06 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:06:06 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:06:06 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:06:06 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:06:06 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:06:06 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:06:06 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:06:06 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:06:06 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:06:06 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:06:06 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:06:06 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:06:06 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:06:06 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:06:06 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:06:06 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:06:06 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:06:06 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:06:06 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:06:06 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:06:06 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:06:06 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:06:06 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:06:06 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:06:06 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:06:06 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:06:06 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:06:06 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:06:06 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:06:06 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:06:06 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:06:06 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:06:06 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:06:06 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:06:06 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:06:06 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:06:06 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:06:06 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:06:06 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:06:06 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:06:06 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:06:06 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:06:06 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:06:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:06:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:06:07 -init trackerLocator [192.168.71.161:22122]
2018-04-27 09:06:07 -Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36ae17ef, org.springframework.security.web.context.SecurityContextPersistenceFilter@8de8b07, org.springframework.security.web.header.HeaderWriterFilter@59509393, org.springframework.security.web.csrf.CsrfFilter@188b9a1e, org.springframework.security.web.authentication.logout.LogoutFilter@63e40188, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3fc7abf6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b64921f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f919230, org.springframework.security.web.session.SessionManagementFilter@7ec75228, org.springframework.security.web.access.ExceptionTranslationFilter@345af277]
2018-04-27 09:06:07 -Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36ae17ef, org.springframework.security.web.context.SecurityContextPersistenceFilter@8de8b07, org.springframework.security.web.header.HeaderWriterFilter@59509393, org.springframework.security.web.csrf.CsrfFilter@188b9a1e, org.springframework.security.web.authentication.logout.LogoutFilter@63e40188, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3fc7abf6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b64921f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f919230, org.springframework.security.web.session.SessionManagementFilter@7ec75228, org.springframework.security.web.access.ExceptionTranslationFilter@345af277]
2018-04-27 09:06:07 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:06:07 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:06:07 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:06:07 -Loaded expression factory via original TCCL
2018-04-27 09:06:07 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:06:07 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:06:07 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:06:07 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:06:07 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:06:07 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:06:07 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:06:07 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:06:07 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:06:07 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:06:07 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:06:07 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:06:07 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:06:07 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:06:07 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:06:07 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:06:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b367418: startup date [Fri Apr 27 09:05:58 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:06:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b367418: startup date [Fri Apr 27 09:05:58 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:06:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:06:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:06:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:06:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:06:08 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:06:08 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:06:08 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:06:08 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:06:08 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:06:08 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:06:08 -Registering beans for JMX exposure on startup
2018-04-27 09:06:08 -Registering beans for JMX exposure on startup
2018-04-27 09:06:08 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:06:08 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:06:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:06:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:06:08 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:06:08 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:06:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:06:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:06:08 -Starting beans in phase 2147483647
2018-04-27 09:06:08 -Starting beans in phase 2147483647
2018-04-27 09:06:08 -Context refreshed
2018-04-27 09:06:08 -Context refreshed
2018-04-27 09:06:08 -Found 1 custom documentation plugin(s)
2018-04-27 09:06:08 -Found 1 custom documentation plugin(s)
2018-04-27 09:06:08 -Scanning for api listing references
2018-04-27 09:06:08 -Scanning for api listing references
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:06:09 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: createUsingGET_1
2018-04-27 09:06:09 -Generating unique operation named: createUsingGET_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:06:09 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:06:09 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:06:09 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:06:09 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:06:09 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:06:09 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:06:09 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:06:09 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:06:09 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingGET_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingGET_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:06:09 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:06:09 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:06:09 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: showUsingGET_1
2018-04-27 09:06:09 -Generating unique operation named: showUsingGET_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:06:09 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:06:09 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:06:09 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:06:09 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:06:09 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:06:09 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:06:09 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:06:09 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:06:09 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:06:09 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:06:09 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:06:09 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:06:09 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:06:09 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:06:09 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:06:09 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:06:09 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:06:09 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:06:09 -Starting ProtocolHandler ["http-nio-8080"]
2018-04-27 09:06:09 -Using a shared selector for servlet write/read
2018-04-27 09:06:09 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:06:09 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:06:09 -Started DemoApplication in 11.553 seconds (JVM running for 12.409)
2018-04-27 09:06:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-27 09:06:15 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:06:15 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:06:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-04-27 09:06:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-04-27 09:06:15 -BookBean{name='红楼梦', author='曹雪芹', price='28'}
2018-04-27 09:06:16 -Checking status of 192.168.71.151:27017
2018-04-27 09:06:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.0 ms, state=CONNECTED}]
2018-04-27 09:06:18 -BookBean{name='红楼梦', author='曹雪芹', price='28'}
2018-04-27 09:06:19 -BookBean{name='红楼梦', author='曹雪芹', price='28'}
2018-04-27 09:06:26 -Checking status of 192.168.71.151:27017
2018-04-27 09:06:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.7 ms, state=CONNECTED}]
2018-04-27 09:06:36 -Checking status of 192.168.71.151:27017
2018-04-27 09:06:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 09:06:46 -Checking status of 192.168.71.151:27017
2018-04-27 09:06:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 09:06:56 -Checking status of 192.168.71.151:27017
2018-04-27 09:06:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 09:07:06 -Checking status of 192.168.71.151:27017
2018-04-27 09:07:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:07:16 -Checking status of 192.168.71.151:27017
2018-04-27 09:07:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:07:26 -Checking status of 192.168.71.151:27017
2018-04-27 09:07:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:07:36 -Checking status of 192.168.71.151:27017
2018-04-27 09:07:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:07:46 -Checking status of 192.168.71.151:27017
2018-04-27 09:07:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:07:56 -Checking status of 192.168.71.151:27017
2018-04-27 09:07:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:08:06 -Checking status of 192.168.71.151:27017
2018-04-27 09:08:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:08:16 -Checking status of 192.168.71.151:27017
2018-04-27 09:08:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:08:26 -Checking status of 192.168.71.151:27017
2018-04-27 09:08:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:08:36 -Checking status of 192.168.71.151:27017
2018-04-27 09:08:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:08:46 -Checking status of 192.168.71.151:27017
2018-04-27 09:08:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:08:56 -Checking status of 192.168.71.151:27017
2018-04-27 09:08:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:09:06 -Checking status of 192.168.71.151:27017
2018-04-27 09:09:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:09:16 -Checking status of 192.168.71.151:27017
2018-04-27 09:09:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:09:26 -Checking status of 192.168.71.151:27017
2018-04-27 09:09:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:09:36 -Checking status of 192.168.71.151:27017
2018-04-27 09:09:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:09:46 -Checking status of 192.168.71.151:27017
2018-04-27 09:09:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:09:56 -Checking status of 192.168.71.151:27017
2018-04-27 09:09:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:10:06 -Checking status of 192.168.71.151:27017
2018-04-27 09:10:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=10.3 ms, state=CONNECTED}]
2018-04-27 09:10:16 -Checking status of 192.168.71.151:27017
2018-04-27 09:10:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=8.4 ms, state=CONNECTED}]
2018-04-27 09:10:26 -Checking status of 192.168.71.151:27017
2018-04-27 09:10:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=7.1 ms, state=CONNECTED}]
2018-04-27 09:10:36 -Checking status of 192.168.71.151:27017
2018-04-27 09:10:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.9 ms, state=CONNECTED}]
2018-04-27 09:10:46 -Checking status of 192.168.71.151:27017
2018-04-27 09:10:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.9 ms, state=CONNECTED}]
2018-04-27 09:13:41 -Starting DemoApplication on DESKTOP-4VE2VST with PID 11876 (Y:\MyGit\demo\target\classes started by Qiang in Y:\MyGit\demo)
2018-04-27 09:13:41 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 09:13:41 -The following profiles are active: dev
2018-04-27 09:13:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b367418: startup date [Fri Apr 27 09:13:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:13:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b367418: startup date [Fri Apr 27 09:13:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:13:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:13:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:13:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:13:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:13:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:13:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:13:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:13:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:13:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:13:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:13:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:13:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:13:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:13:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:13:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:13:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:13:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:13:43 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:13:43 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:13:43 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:13:43 -Loaded expression factory via original TCCL
2018-04-27 09:13:43 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:13:43 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:13:43 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:13:43 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:13:43 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:13:43 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:13:43 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:13:43 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:13:43 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:13:43 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:13:43 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:13:43 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:13:43 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:13:43 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:13:43 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:13:43 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:13:43 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$ec8d871] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:43 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$ec8d871] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2bb170f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2bb170f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:43 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$ff8bc401] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:43 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$ff8bc401] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:43 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:43 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:43 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:43 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:43 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:43 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:44 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 09:13:44 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 09:13:44 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 09:13:44 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 09:13:44 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 09:13:44 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 09:13:44 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 09:13:44 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 09:13:44 -Starting Post-processing phase
2018-04-27 09:13:44 -Building annotation class map
2018-04-27 09:13:44 -Building interface class map for 8 classes
2018-04-27 09:13:44 - - Actor implements 0 interfaces
2018-04-27 09:13:44 - - Role implements 1 interfaces
2018-04-27 09:13:44 -   - java.io.Serializable
2018-04-27 09:13:44 - - MongoUser implements 0 interfaces
2018-04-27 09:13:44 - - Role implements 0 interfaces
2018-04-27 09:13:44 - - Movie implements 0 interfaces
2018-04-27 09:13:44 - - Department implements 0 interfaces
2018-04-27 09:13:44 - - BookBean implements 0 interfaces
2018-04-27 09:13:44 - - User implements 1 interfaces
2018-04-27 09:13:44 -   - java.io.Serializable
2018-04-27 09:13:44 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 09:13:44 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 09:13:44 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:13:44 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 09:13:44 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 09:13:44 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 09:13:44 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 09:13:44 -Post-processing: com.example.ren.model.BookBean
2018-04-27 09:13:44 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 09:13:44 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:13:44 -Checking for @Transient classes....
2018-04-27 09:13:44 -Registering converters and deregistering transient fields and methods....
2018-04-27 09:13:44 -Post-processing complete
2018-04-27 09:13:44 -Building Index Metadata.
2018-04-27 09:13:44 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:44 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:13:44 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:13:44 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:13:44 -Initializing ProtocolHandler ["http-nio-8080"]
2018-04-27 09:13:44 -Starting service [Tomcat]
2018-04-27 09:13:44 -Starting Servlet Engine: Apache Tomcat/8.5.28
2018-04-27 09:13:44 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;.]
2018-04-27 09:13:44 -Initializing Spring embedded WebApplicationContext
2018-04-27 09:13:44 -Root WebApplicationContext: initialization completed in 3735 ms
2018-04-27 09:13:44 -Root WebApplicationContext: initialization completed in 3735 ms
2018-04-27 09:13:45 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:13:45 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:13:45 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:13:45 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:13:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:13:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:13:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:13:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:13:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:13:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:13:45 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:13:45 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:13:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:13:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:13:45 -{dataSource-1} inited
2018-04-27 09:13:45 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:13:45 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:13:45 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 09:13:45",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:925131177, ConnectTime:"2018-04-27 09:13:45", UseCount:1, LastActiveTime:"2018-04-27 09:13:45"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 09:13:45 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 09:13:45 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 09:13:45 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 09:13:45 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 09:13:45 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 09:13:45 -HHH000206: hibernate.properties not found
2018-04-27 09:13:45 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 09:13:45 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 09:13:45 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 09:13:45 -Adding type registration boolean -> org.hibernate.type.BooleanType@7bd38fed
2018-04-27 09:13:45 -Adding type registration boolean -> org.hibernate.type.BooleanType@7bd38fed
2018-04-27 09:13:45 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7bd38fed
2018-04-27 09:13:45 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5763a655
2018-04-27 09:13:46 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@34c76167
2018-04-27 09:13:46 -Adding type registration yes_no -> org.hibernate.type.YesNoType@6e95973c
2018-04-27 09:13:46 -Adding type registration byte -> org.hibernate.type.ByteType@ceb7701
2018-04-27 09:13:46 -Adding type registration byte -> org.hibernate.type.ByteType@ceb7701
2018-04-27 09:13:46 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@ceb7701
2018-04-27 09:13:46 -Adding type registration character -> org.hibernate.type.CharacterType@4d4c1ba9
2018-04-27 09:13:46 -Adding type registration char -> org.hibernate.type.CharacterType@4d4c1ba9
2018-04-27 09:13:46 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d4c1ba9
2018-04-27 09:13:46 -Adding type registration short -> org.hibernate.type.ShortType@5122e4bf
2018-04-27 09:13:46 -Adding type registration short -> org.hibernate.type.ShortType@5122e4bf
2018-04-27 09:13:46 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5122e4bf
2018-04-27 09:13:46 -Adding type registration integer -> org.hibernate.type.IntegerType@336f49a1
2018-04-27 09:13:46 -Adding type registration int -> org.hibernate.type.IntegerType@336f49a1
2018-04-27 09:13:46 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@336f49a1
2018-04-27 09:13:46 -Adding type registration long -> org.hibernate.type.LongType@255d9277
2018-04-27 09:13:46 -Adding type registration long -> org.hibernate.type.LongType@255d9277
2018-04-27 09:13:46 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@255d9277
2018-04-27 09:13:46 -Adding type registration float -> org.hibernate.type.FloatType@53ea380b
2018-04-27 09:13:46 -Adding type registration float -> org.hibernate.type.FloatType@53ea380b
2018-04-27 09:13:46 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53ea380b
2018-04-27 09:13:46 -Adding type registration double -> org.hibernate.type.DoubleType@c9b5a99
2018-04-27 09:13:46 -Adding type registration double -> org.hibernate.type.DoubleType@c9b5a99
2018-04-27 09:13:46 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@c9b5a99
2018-04-27 09:13:46 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@ca7e37f
2018-04-27 09:13:46 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@ca7e37f
2018-04-27 09:13:46 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@56fda064
2018-04-27 09:13:46 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@56fda064
2018-04-27 09:13:46 -Adding type registration string -> org.hibernate.type.StringType@1e56bc9b
2018-04-27 09:13:46 -Adding type registration java.lang.String -> org.hibernate.type.StringType@1e56bc9b
2018-04-27 09:13:46 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7be94cd6
2018-04-27 09:13:46 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f22687e
2018-04-27 09:13:46 -Adding type registration url -> org.hibernate.type.UrlType@646d810b
2018-04-27 09:13:46 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@646d810b
2018-04-27 09:13:46 -Adding type registration Duration -> org.hibernate.type.DurationType@13f40d71
2018-04-27 09:13:46 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13f40d71
2018-04-27 09:13:46 -Adding type registration Instant -> org.hibernate.type.InstantType@7911cc15
2018-04-27 09:13:46 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7911cc15
2018-04-27 09:13:46 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c7c0e36
2018-04-27 09:13:46 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c7c0e36
2018-04-27 09:13:46 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1c7f9861
2018-04-27 09:13:46 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1c7f9861
2018-04-27 09:13:46 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6e3dd5ce
2018-04-27 09:13:46 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6e3dd5ce
2018-04-27 09:13:46 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35563e4c
2018-04-27 09:13:46 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35563e4c
2018-04-27 09:13:46 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@54ccb3
2018-04-27 09:13:46 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@54ccb3
2018-04-27 09:13:46 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d6cd1e0
2018-04-27 09:13:46 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6d6cd1e0
2018-04-27 09:13:46 -Adding type registration date -> org.hibernate.type.DateType@56cfe6be
2018-04-27 09:13:46 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@56cfe6be
2018-04-27 09:13:46 -Adding type registration time -> org.hibernate.type.TimeType@3bbb8c16
2018-04-27 09:13:46 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3bbb8c16
2018-04-27 09:13:46 -Adding type registration timestamp -> org.hibernate.type.TimestampType@2d22d3b1
2018-04-27 09:13:46 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2d22d3b1
2018-04-27 09:13:46 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2d22d3b1
2018-04-27 09:13:46 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79cb8ffa
2018-04-27 09:13:46 -Adding type registration calendar -> org.hibernate.type.CalendarType@79add732
2018-04-27 09:13:46 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@79add732
2018-04-27 09:13:46 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@79add732
2018-04-27 09:13:46 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@aa1bb14
2018-04-27 09:13:46 -Adding type registration locale -> org.hibernate.type.LocaleType@53982523
2018-04-27 09:13:46 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53982523
2018-04-27 09:13:46 -Adding type registration currency -> org.hibernate.type.CurrencyType@1c1fa494
2018-04-27 09:13:46 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c1fa494
2018-04-27 09:13:46 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@632cf7d3
2018-04-27 09:13:46 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@632cf7d3
2018-04-27 09:13:46 -Adding type registration class -> org.hibernate.type.ClassType@6dae70f9
2018-04-27 09:13:46 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6dae70f9
2018-04-27 09:13:46 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@47569167
2018-04-27 09:13:46 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@47569167
2018-04-27 09:13:46 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b0454d2
2018-04-27 09:13:46 -Adding type registration binary -> org.hibernate.type.BinaryType@6f15f52a
2018-04-27 09:13:46 -Adding type registration byte[] -> org.hibernate.type.BinaryType@6f15f52a
2018-04-27 09:13:46 -Adding type registration [B -> org.hibernate.type.BinaryType@6f15f52a
2018-04-27 09:13:46 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4cc8d70d
2018-04-27 09:13:46 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4cc8d70d
2018-04-27 09:13:46 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4cc8d70d
2018-04-27 09:13:46 -Adding type registration row_version -> org.hibernate.type.RowVersionType@36510e73
2018-04-27 09:13:46 -Adding type registration image -> org.hibernate.type.ImageType@2bba35ef
2018-04-27 09:13:46 -Adding type registration characters -> org.hibernate.type.CharArrayType@65593327
2018-04-27 09:13:46 -Adding type registration char[] -> org.hibernate.type.CharArrayType@65593327
2018-04-27 09:13:46 -Adding type registration [C -> org.hibernate.type.CharArrayType@65593327
2018-04-27 09:13:46 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d69d288
2018-04-27 09:13:46 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d69d288
2018-04-27 09:13:46 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d69d288
2018-04-27 09:13:46 -Adding type registration text -> org.hibernate.type.TextType@77aea
2018-04-27 09:13:46 -Adding type registration ntext -> org.hibernate.type.NTextType@6ddc67d0
2018-04-27 09:13:46 -Adding type registration blob -> org.hibernate.type.BlobType@175581eb
2018-04-27 09:13:46 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@175581eb
2018-04-27 09:13:46 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d14e99e
2018-04-27 09:13:46 -Adding type registration clob -> org.hibernate.type.ClobType@7db5b890
2018-04-27 09:13:46 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7db5b890
2018-04-27 09:13:46 -Adding type registration nclob -> org.hibernate.type.NClobType@21f9c6ea
2018-04-27 09:13:46 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@21f9c6ea
2018-04-27 09:13:46 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@133aacbe
2018-04-27 09:13:46 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19002b34
2018-04-27 09:13:46 -Adding type registration serializable -> org.hibernate.type.SerializableType@68aec50
2018-04-27 09:13:46 -Adding type registration object -> org.hibernate.type.ObjectType@722531ab
2018-04-27 09:13:46 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@722531ab
2018-04-27 09:13:46 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3db6dd52
2018-04-27 09:13:46 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e92c3b6
2018-04-27 09:13:46 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6ef4cbe1
2018-04-27 09:13:46 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@207dd1b7
2018-04-27 09:13:46 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2baac4a7
2018-04-27 09:13:46 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@23ad2d17
2018-04-27 09:13:46 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6bce4140
2018-04-27 09:13:46 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25f0c5e7
2018-04-27 09:13:46 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 09:13:46 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 09:13:46 -JDBC version : 4.0
2018-04-27 09:13:46 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 09:13:46 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 09:13:46 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:13:46 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 09:13:46 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 09:13:46 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 09:13:46 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:13:46 -Import with entity name Role
2018-04-27 09:13:46 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:13:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 09:13:46 -building SimpleValue for id
2018-04-27 09:13:46 -Building property id
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:13:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 09:13:46 -building SimpleValue for name
2018-04-27 09:13:46 -Building property name
2018-04-27 09:13:46 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 09:13:46 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:13:46 -Import with entity name Department
2018-04-27 09:13:46 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:13:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 09:13:46 -building SimpleValue for id
2018-04-27 09:13:46 -Building property id
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:13:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 09:13:46 -building SimpleValue for name
2018-04-27 09:13:46 -Building property name
2018-04-27 09:13:46 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 09:13:46 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:13:46 -Import with entity name User
2018-04-27 09:13:46 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:13:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 09:13:46 -building SimpleValue for id
2018-04-27 09:13:46 -Building property id
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 09:13:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 09:13:46 -building SimpleValue for createDate
2018-04-27 09:13:46 -Building property createDate
2018-04-27 09:13:46 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -Building property department
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -MetadataSourceProcessor property email with lazy=false
2018-04-27 09:13:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 09:13:46 -building SimpleValue for email
2018-04-27 09:13:46 -Building property email
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:13:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 09:13:46 -building SimpleValue for name
2018-04-27 09:13:46 -Building property name
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -MetadataSourceProcessor property password with lazy=false
2018-04-27 09:13:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 09:13:46 -building SimpleValue for password
2018-04-27 09:13:46 -Building property password
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 09:13:46 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 09:13:46 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 09:13:46 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 09:13:46 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 09:13:46 -Building property roles
2018-04-27 09:13:46 -Starting fillSimpleValue for id
2018-04-27 09:13:46 -Starting fillSimpleValue for name
2018-04-27 09:13:46 -Starting fillSimpleValue for id
2018-04-27 09:13:46 -Starting fillSimpleValue for name
2018-04-27 09:13:46 -Starting fillSimpleValue for id
2018-04-27 09:13:46 -Starting fillSimpleValue for createDate
2018-04-27 09:13:46 -Starting fillSimpleValue for email
2018-04-27 09:13:46 -Starting fillSimpleValue for name
2018-04-27 09:13:46 -Starting fillSimpleValue for password
2018-04-27 09:13:46 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 09:13:46 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 09:13:46 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 09:13:46 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:13:46 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 09:13:46 -Mapped collection key: user_id, element: role_id
2018-04-27 09:13:46 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:13:46 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:13:46 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:13:46 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:13:46 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:13:46 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:13:46 -Building session factory
2018-04-27 09:13:46 -SessionFactory name : null
2018-04-27 09:13:46 -Automatic flush during beforeCompletion(): enabled
2018-04-27 09:13:46 -Automatic session close at end of transaction: disabled
2018-04-27 09:13:46 -Statistics: disabled
2018-04-27 09:13:46 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 09:13:46 -Default entity-mode: pojo
2018-04-27 09:13:46 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 09:13:46 -Allow initialization of lazy state outside session : disabled
2018-04-27 09:13:46 -Using BatchFetchStyle : LEGACY
2018-04-27 09:13:46 -Default batch fetch size: -1
2018-04-27 09:13:46 -Maximum outer join fetch depth: 2
2018-04-27 09:13:46 -Default null ordering: NONE
2018-04-27 09:13:46 -Order SQL updates by primary key: disabled
2018-04-27 09:13:46 -Order SQL inserts for batching: disabled
2018-04-27 09:13:46 -multi-tenancy strategy : NONE
2018-04-27 09:13:46 -JTA Track by Thread: enabled
2018-04-27 09:13:46 -Query language substitutions: {}
2018-04-27 09:13:46 -JPA query language strict compliance: disabled
2018-04-27 09:13:46 -Named query checking : enabled
2018-04-27 09:13:46 -Second-level cache: enabled
2018-04-27 09:13:46 -Second-level query cache: disabled
2018-04-27 09:13:46 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4fad51a3
2018-04-27 09:13:46 -Second-level cache region prefix: null
2018-04-27 09:13:46 -Optimize second-level cache for minimal puts: disabled
2018-04-27 09:13:46 -Structured second-level cache entries: disabled
2018-04-27 09:13:46 -Second-level cache direct-reference entries: disabled
2018-04-27 09:13:46 -Automatic eviction of collection cache: disabled
2018-04-27 09:13:46 -JDBC batch size: 15
2018-04-27 09:13:46 -JDBC batch updates for versioned data: enabled
2018-04-27 09:13:46 -Scrollable result sets: enabled
2018-04-27 09:13:46 -Wrap result sets: disabled
2018-04-27 09:13:46 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 09:13:46 -JDBC result set fetch size: null
2018-04-27 09:13:46 -Connection release mode: ON_CLOSE
2018-04-27 09:13:46 -Generate SQL with comments: disabled
2018-04-27 09:13:46 -Session factory constructed with filter configurations : {}
2018-04-27 09:13:46 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.example.ren.DemoApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5aab5b31, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, spring.output.ansi.enabled=always, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, catalina.home=C:\Users\Qiang\AppData\Local\Temp\tomcat.3487343036004670891.8080, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=11876, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\Qiang\AppData\Local\Temp\tomcat.3487343036004670891.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5408d4b3, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 09:13:45",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:925131177, ConnectTime:"2018-04-27 09:13:45", UseCount:2, LastActiveTime:"2018-04-27 09:13:46"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 09:13:46 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:13:46 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:13:46 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:13:46 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:13:46 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:13:46 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:13:46 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:13:46 -Loaded expression factory via original TCCL
2018-04-27 09:13:46 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:13:46 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:13:46 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:13:46 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:13:46 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:13:46 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:13:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:13:46 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:13:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:13:46 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:13:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:13:46 -Skipping JACC integration as it was not enabled
2018-04-27 09:13:46 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 09:13:46 -Instantiated session factory
2018-04-27 09:13:46 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:13:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:13:46 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:13:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:13:46 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:13:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:13:46 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:13:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:13:46 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:13:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:13:46 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:13:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:13:46 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:13:46 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 09:13:46 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 09:13:46 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 09:13:46 - One-shot delete: delete from user_role where user_id=?
2018-04-27 09:13:46 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 09:13:46 - Version select: select id from role where id =?
2018-04-27 09:13:46 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 09:13:46 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 09:13:46 - Update 0: update role set name=? where id=?
2018-04-27 09:13:46 - Delete 0: delete from role where id=?
2018-04-27 09:13:46 - Identity insert: insert into role (name) values (?)
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4404a6b]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e5aacd9]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f810c18]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@120411ec]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b2e9db2]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a34a51e]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c668c2a]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51de5efa]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28bd5015]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d1f23a0]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b091a92]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:13:46 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:13:46 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:13:46 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 09:13:46 - Version select: select id from department where id =?
2018-04-27 09:13:46 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 09:13:46 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 09:13:46 - Update 0: update department set name=? where id=?
2018-04-27 09:13:46 - Delete 0: delete from department where id=?
2018-04-27 09:13:46 - Identity insert: insert into department (name) values (?)
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e49437]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c50cd7d]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a4930cf]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75a226ea]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a1a20ae]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@186481d4]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ffa91dc]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448086ab]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6de610c6]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@631944d4]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60ae7cf2]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:13:46 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:13:46 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:13:46 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 09:13:46 - Version select: select id from user where id =?
2018-04-27 09:13:46 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 09:13:46 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 09:13:46 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 09:13:46 - Delete 0: delete from user where id=?
2018-04-27 09:13:46 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bc8d68b]
2018-04-27 09:13:46 -Visiting attribute path : createDate
2018-04-27 09:13:46 -Visiting attribute path : department
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af38a4a]
2018-04-27 09:13:46 -Visiting attribute path : department.name
2018-04-27 09:13:46 -Visiting attribute path : email
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Visiting attribute path : password
2018-04-27 09:13:46 -Visiting attribute path : roles
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37cf91d8]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22cd8ec2]
2018-04-27 09:13:46 -Visiting attribute path : roles.name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c519e47]
2018-04-27 09:13:46 -Visiting attribute path : createDate
2018-04-27 09:13:46 -Visiting attribute path : department
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4768b95c]
2018-04-27 09:13:46 -Visiting attribute path : department.name
2018-04-27 09:13:46 -Visiting attribute path : email
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Visiting attribute path : password
2018-04-27 09:13:46 -Visiting attribute path : roles
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7573c7b5]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73da7f08]
2018-04-27 09:13:46 -Visiting attribute path : roles.name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@97b5e6a]
2018-04-27 09:13:46 -Visiting attribute path : createDate
2018-04-27 09:13:46 -Visiting attribute path : department
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c754401]
2018-04-27 09:13:46 -Visiting attribute path : email
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Visiting attribute path : password
2018-04-27 09:13:46 -Visiting attribute path : roles
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1da53f4f]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e7eba9f]
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df71be0]
2018-04-27 09:13:46 -Visiting attribute path : createDate
2018-04-27 09:13:46 -Visiting attribute path : department
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fef1e6b]
2018-04-27 09:13:46 -Visiting attribute path : email
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Visiting attribute path : password
2018-04-27 09:13:46 -Visiting attribute path : roles
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fee14b]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11c3d22f]
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a54638b]
2018-04-27 09:13:46 -Visiting attribute path : createDate
2018-04-27 09:13:46 -Visiting attribute path : department
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e886caf]
2018-04-27 09:13:46 -Visiting attribute path : email
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Visiting attribute path : password
2018-04-27 09:13:46 -Visiting attribute path : roles
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d585fb]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1884e671]
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c7843c3]
2018-04-27 09:13:46 -Visiting attribute path : createDate
2018-04-27 09:13:46 -Visiting attribute path : department
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8f047a]
2018-04-27 09:13:46 -Visiting attribute path : email
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Visiting attribute path : password
2018-04-27 09:13:46 -Visiting attribute path : roles
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4387d2f4]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dbff71c]
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@93ce24d]
2018-04-27 09:13:46 -Visiting attribute path : createDate
2018-04-27 09:13:46 -Visiting attribute path : department
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7079f8f0]
2018-04-27 09:13:46 -Visiting attribute path : email
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Visiting attribute path : password
2018-04-27 09:13:46 -Visiting attribute path : roles
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@121cf6f4]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cdc4070]
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@553fbe94]
2018-04-27 09:13:46 -Visiting attribute path : createDate
2018-04-27 09:13:46 -Visiting attribute path : department
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f60824e]
2018-04-27 09:13:46 -Visiting attribute path : email
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Visiting attribute path : password
2018-04-27 09:13:46 -Visiting attribute path : roles
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1218e12]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29c25bbc]
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30704f85]
2018-04-27 09:13:46 -Visiting attribute path : createDate
2018-04-27 09:13:46 -Visiting attribute path : department
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26c59348]
2018-04-27 09:13:46 -Visiting attribute path : email
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Visiting attribute path : password
2018-04-27 09:13:46 -Visiting attribute path : roles
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1de12397]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f5f5bc9]
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aeaff64]
2018-04-27 09:13:46 -Visiting attribute path : createDate
2018-04-27 09:13:46 -Visiting attribute path : department
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@545604a9]
2018-04-27 09:13:46 -Visiting attribute path : email
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Visiting attribute path : password
2018-04-27 09:13:46 -Visiting attribute path : roles
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1029cf9]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c0e4262]
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27dfd12b]
2018-04-27 09:13:46 -Visiting attribute path : createDate
2018-04-27 09:13:46 -Visiting attribute path : department
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@563843f1]
2018-04-27 09:13:46 -Visiting attribute path : email
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Visiting attribute path : password
2018-04-27 09:13:46 -Visiting attribute path : roles
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38cb1606]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c4cebd]
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:13:46 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:13:46 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:13:46 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6533629]
2018-04-27 09:13:46 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f49e81a]
2018-04-27 09:13:46 -Visiting attribute path : name
2018-04-27 09:13:46 -Building LoadPlan...
2018-04-27 09:13:46 -processing queryspace <gen:0>
2018-04-27 09:13:46 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 09:13:46 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 09:13:46 -No alter strings for table : department
2018-04-27 09:13:46 -No alter strings for table : role
2018-04-27 09:13:46 -No alter strings for table : user
2018-04-27 09:13:46 -No alter strings for table : user_role
2018-04-27 09:13:46 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 09:13:46 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 09:13:46 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 09:13:46 -Checking 0 named HQL queries
2018-04-27 09:13:46 -Checking 0 named SQL queries
2018-04-27 09:13:46 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@24b3f778
2018-04-27 09:13:46 -Registering SessionFactory: 194973d8-16df-4043-97dd-0b0bb101f877 (<unnamed>)
2018-04-27 09:13:46 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 09:13:46 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:13:46 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:13:47 -Statistics initialized [enabled=false]
2018-04-27 09:13:47 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@773c7147
2018-04-27 09:13:47 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 09:13:47 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:13:47 -throwQueryException() : no errors
2018-04-27 09:13:47 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 09:13:47 -select << begin [level=1, statement=select]
2018-04-27 09:13:47 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:13:47 -Resolved : t -> user0_.id
2018-04-27 09:13:47 -Resolved : t -> user0_.id
2018-04-27 09:13:47 -getDataType() : name -> org.hibernate.type.StringType@1e56bc9b
2018-04-27 09:13:47 -Resolved : t.name -> user0_.name
2018-04-27 09:13:47 -select : finishing up [level=1, statement=select]
2018-04-27 09:13:47 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 09:13:47 -Using FROM fragment [user user0_]
2018-04-27 09:13:47 -select >> end [level=1, statement=select]
2018-04-27 09:13:47 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@1e56bc9b}

2018-04-27 09:13:47 -throwQueryException() : no errors
2018-04-27 09:13:47 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:13:47 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 09:13:47 -throwQueryException() : no errors
2018-04-27 09:13:47 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:13:47 -throwQueryException() : no errors
2018-04-27 09:13:47 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 09:13:47 -select << begin [level=1, statement=select]
2018-04-27 09:13:47 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:13:47 -Resolved : t -> user0_.id
2018-04-27 09:13:47 -Resolved : t -> user0_.id
2018-04-27 09:13:47 -getDataType() : name -> org.hibernate.type.StringType@1e56bc9b
2018-04-27 09:13:47 -Resolved : t.name -> user0_.name
2018-04-27 09:13:47 -Resolved : t -> user0_.id
2018-04-27 09:13:47 -getDataType() : email -> org.hibernate.type.StringType@1e56bc9b
2018-04-27 09:13:47 -Resolved : t.email -> user0_.email
2018-04-27 09:13:47 -select : finishing up [level=1, statement=select]
2018-04-27 09:13:47 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 09:13:47 -Using FROM fragment [user user0_]
2018-04-27 09:13:47 -select >> end [level=1, statement=select]
2018-04-27 09:13:47 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@1e56bc9b}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@1e56bc9b}

2018-04-27 09:13:47 -throwQueryException() : no errors
2018-04-27 09:13:47 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:13:47 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 09:13:47 -throwQueryException() : no errors
2018-04-27 09:13:47 -Using SLF4J as the default logging framework
2018-04-27 09:13:47 --Dio.netty.eventLoopThreads: 4
2018-04-27 09:13:47 --Dio.netty.leakDetection.level: simple
2018-04-27 09:13:47 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 09:13:47 -Platform: Windows
2018-04-27 09:13:47 --Dio.netty.noUnsafe: false
2018-04-27 09:13:47 -Java version: 8
2018-04-27 09:13:47 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 09:13:47 -sun.misc.Unsafe.copyMemory: available
2018-04-27 09:13:47 -java.nio.Buffer.address: available
2018-04-27 09:13:47 -direct buffer constructor: available
2018-04-27 09:13:47 -java.nio.Bits.unaligned: available, true
2018-04-27 09:13:47 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 09:13:47 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 09:13:47 -sun.misc.Unsafe: available
2018-04-27 09:13:47 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 09:13:47 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 09:13:47 --Dio.netty.noPreferDirect: false
2018-04-27 09:13:47 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 09:13:47 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 09:13:47 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 09:13:47 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@37c74e4e
2018-04-27 09:13:47 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 09:13:47 -Using Slf4j logging framework
2018-04-27 09:13:47 -Starting UnsafeSupport init in Java 1.8
2018-04-27 09:13:47 -Unsafe is available
2018-04-27 09:13:47 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 09:13:47 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 09:13:47 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 09:13:47 --Dio.netty.allocator.pageSize: 8192
2018-04-27 09:13:47 --Dio.netty.allocator.maxOrder: 11
2018-04-27 09:13:47 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 09:13:47 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 09:13:47 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 09:13:47 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 09:13:47 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 09:13:47 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 09:13:47 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 09:13:47 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 09:13:47 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:13:47 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:13:47 -Neo4jMappingContext initialisation completed
2018-04-27 09:13:47 -Neo4jMappingContext initialisation completed
2018-04-27 09:13:48 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:13:48 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:13:48 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:13:48 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:13:48 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 09:13:48 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 09:13:48 -Opened connection [connectionId{localValue:1, serverValue:9}] to 192.168.71.151:27017
2018-04-27 09:13:48 -Checking status of 192.168.71.151:27017
2018-04-27 09:13:48 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3120003}
2018-04-27 09:13:48 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2018-04-27 09:13:49 -Opened connection [connectionId{localValue:2, serverValue:10}] to 192.168.71.151:27017
2018-04-27 09:13:49 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:10}] to server 192.168.71.151:27017
2018-04-27 09:13:49 -Command execution completed
2018-04-27 09:13:49 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:13:49 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:13:49 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:13:49 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:13:49 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:13:49 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:13:49 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:13:49 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:13:49 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:13:49 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:13:49 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:13:49 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:13:49 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:13:49 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:13:49 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:13:49 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:13:49 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:13:49 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:13:49 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:13:49 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:13:49 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:13:49 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:13:49 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:13:49 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:13:49 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:13:49 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:13:49 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:13:49 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:13:49 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:13:49 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:13:49 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:13:49 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:13:49 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:13:49 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:13:49 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:13:49 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:13:49 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:13:49 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:13:49 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:13:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:13:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:13:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:13:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:13:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:13:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:13:49 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:13:49 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:13:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:13:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:13:49 -init trackerLocator [192.168.71.161:22122]
2018-04-27 09:13:49 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:13:49 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:13:49 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:13:49 -Loaded expression factory via original TCCL
2018-04-27 09:13:49 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:13:49 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:13:49 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:13:49 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:13:49 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:13:49 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:13:49 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:13:49 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:13:49 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:13:49 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:13:49 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:13:49 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:13:49 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:13:49 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:13:49 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:13:49 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:13:50 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b367418: startup date [Fri Apr 27 09:13:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:13:50 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b367418: startup date [Fri Apr 27 09:13:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:13:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:13:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:13:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:13:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:13:50 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:13:50 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:13:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:13:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:13:50 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:13:50 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:13:51 -Registering beans for JMX exposure on startup
2018-04-27 09:13:51 -Registering beans for JMX exposure on startup
2018-04-27 09:13:51 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:13:51 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:13:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:13:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:13:51 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:13:51 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:13:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:13:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:13:51 -Starting beans in phase 2147483647
2018-04-27 09:13:51 -Starting beans in phase 2147483647
2018-04-27 09:13:51 -Context refreshed
2018-04-27 09:13:51 -Context refreshed
2018-04-27 09:13:51 -Found 1 custom documentation plugin(s)
2018-04-27 09:13:51 -Found 1 custom documentation plugin(s)
2018-04-27 09:13:51 -Scanning for api listing references
2018-04-27 09:13:51 -Scanning for api listing references
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:13:51 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: createUsingGET_1
2018-04-27 09:13:51 -Generating unique operation named: createUsingGET_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:13:51 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:13:51 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:13:51 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:13:51 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:13:51 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:13:51 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:13:51 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:13:51 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:13:51 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingGET_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingGET_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:13:51 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:13:51 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:13:51 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: showUsingGET_1
2018-04-27 09:13:51 -Generating unique operation named: showUsingGET_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:13:51 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:13:51 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:13:51 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:13:51 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:13:51 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:13:51 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:13:51 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:13:51 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:13:51 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:13:51 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:13:51 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:13:51 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:13:51 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:13:51 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:13:51 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:13:51 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:13:51 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:13:51 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:13:51 -Starting ProtocolHandler ["http-nio-8080"]
2018-04-27 09:13:51 -Using a shared selector for servlet write/read
2018-04-27 09:13:51 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:13:51 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:13:51 -Started DemoApplication in 11.157 seconds (JVM running for 11.898)
2018-04-27 09:13:58 -Checking status of 192.168.71.151:27017
2018-04-27 09:13:58 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.7 ms, state=CONNECTED}]
2018-04-27 09:14:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-27 09:14:02 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:14:02 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:14:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-04-27 09:14:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-04-27 09:14:02 -BookBean{name='红楼梦', author='曹雪芹', price='28'}
2018-04-27 09:14:08 -Checking status of 192.168.71.151:27017
2018-04-27 09:14:08 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.3 ms, state=CONNECTED}]
2018-04-27 09:14:15 -null
java.lang.NullPointerException: null
	at com.example.ren.utils.FastdfsClient.uploadFile(FastdfsClient.java:25)
	at com.example.ren.controller.fastdfs.FastdfsController.upload(FastdfsController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-27 09:14:18 -Checking status of 192.168.71.151:27017
2018-04-27 09:14:18 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.7 ms, state=CONNECTED}]
2018-04-27 09:14:28 -Checking status of 192.168.71.151:27017
2018-04-27 09:14:28 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.2 ms, state=CONNECTED}]
2018-04-27 09:14:38 -Checking status of 192.168.71.151:27017
2018-04-27 09:14:38 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 09:14:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:14:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.8 ms, state=CONNECTED}]
2018-04-27 09:14:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:14:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.7 ms, state=CONNECTED}]
2018-04-27 09:15:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:15:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.6 ms, state=CONNECTED}]
2018-04-27 09:15:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:15:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 09:15:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:15:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 09:15:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:15:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 09:15:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:15:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:15:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:15:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:16:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:16:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 09:16:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:16:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 09:16:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:16:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 09:16:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:16:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 09:16:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:16:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 09:16:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:16:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:17:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:17:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:17:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:17:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:17:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:17:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:17:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:17:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:17:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:17:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:17:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:17:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:18:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:18:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:18:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:18:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:18:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:18:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:18:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:18:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:18:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:18:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:18:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:18:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:19:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:19:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:19:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:19:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:19:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:19:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:19:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:19:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:19:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:19:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:19:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:19:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:20:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:20:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:20:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:20:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:20:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:20:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:20:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:20:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:20:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:20:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:20:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:20:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 09:21:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:21:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 09:21:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:21:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 09:21:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:21:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 09:21:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:21:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 09:21:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:21:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:21:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:21:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:22:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:22:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:22:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:22:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 09:22:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:22:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:22:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:22:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:22:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:22:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 09:22:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:22:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 09:23:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:23:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:23:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:23:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:23:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:23:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:23:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:23:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:23:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:23:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:23:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:23:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:24:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:24:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:24:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:24:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:24:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:24:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:24:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:24:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:24:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:24:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:24:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:24:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:25:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:25:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:25:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:25:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:25:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:25:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:25:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:25:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:25:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:25:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:25:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:25:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:26:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:26:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:26:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:26:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:26:33 -Checking status of 192.168.71.151:27017
2018-04-27 09:26:34 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=185.9 ms, state=CONNECTED}]
2018-04-27 09:26:40 -null
java.lang.NullPointerException: null
	at com.example.ren.utils.FastdfsClient.uploadFile(FastdfsClient.java:25)
	at com.example.ren.controller.fastdfs.FastdfsController.upload(FastdfsController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-27 09:26:44 -Checking status of 192.168.71.151:27017
2018-04-27 09:26:44 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=148.9 ms, state=CONNECTED}]
2018-04-27 09:26:51 -null
java.lang.NullPointerException: null
	at com.example.ren.utils.FastdfsClient.uploadFile(FastdfsClient.java:25)
	at com.example.ren.controller.fastdfs.FastdfsController.upload(FastdfsController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-27 09:26:54 -Checking status of 192.168.71.151:27017
2018-04-27 09:26:54 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=119.6 ms, state=CONNECTED}]
2018-04-27 09:27:04 -Checking status of 192.168.71.151:27017
2018-04-27 09:27:04 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=95.9 ms, state=CONNECTED}]
2018-04-27 09:27:14 -Checking status of 192.168.71.151:27017
2018-04-27 09:27:14 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=76.9 ms, state=CONNECTED}]
2018-04-27 09:27:24 -Checking status of 192.168.71.151:27017
2018-04-27 09:27:24 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=61.7 ms, state=CONNECTED}]
2018-04-27 09:27:34 -Checking status of 192.168.71.151:27017
2018-04-27 09:27:55 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=49.6 ms, state=CONNECTED}]
2018-04-27 09:28:21 -Checking status of 192.168.71.151:27017
2018-04-27 09:28:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=40.0 ms, state=CONNECTED}]
2018-04-27 09:28:21 -null
java.lang.NullPointerException: null
	at com.example.ren.utils.FastdfsClient.uploadFile(FastdfsClient.java:25)
	at com.example.ren.controller.fastdfs.FastdfsController.upload(FastdfsController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-27 09:28:31 -Checking status of 192.168.71.151:27017
2018-04-27 09:28:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=32.2 ms, state=CONNECTED}]
2018-04-27 09:28:41 -Checking status of 192.168.71.151:27017
2018-04-27 09:28:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=26.1 ms, state=CONNECTED}]
2018-04-27 09:28:51 -Checking status of 192.168.71.151:27017
2018-04-27 09:28:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=21.0 ms, state=CONNECTED}]
2018-04-27 09:29:01 -Checking status of 192.168.71.151:27017
2018-04-27 09:29:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=17.0 ms, state=CONNECTED}]
2018-04-27 09:29:11 -Checking status of 192.168.71.151:27017
2018-04-27 09:29:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=13.7 ms, state=CONNECTED}]
2018-04-27 09:29:21 -Checking status of 192.168.71.151:27017
2018-04-27 09:29:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=11.1 ms, state=CONNECTED}]
2018-04-27 09:29:31 -Checking status of 192.168.71.151:27017
2018-04-27 09:29:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=9.1 ms, state=CONNECTED}]
2018-04-27 09:29:41 -Checking status of 192.168.71.151:27017
2018-04-27 09:29:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=7.6 ms, state=CONNECTED}]
2018-04-27 09:29:51 -Checking status of 192.168.71.151:27017
2018-04-27 09:29:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.3 ms, state=CONNECTED}]
2018-04-27 09:30:01 -Checking status of 192.168.71.151:27017
2018-04-27 09:30:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.4 ms, state=CONNECTED}]
2018-04-27 09:30:11 -Checking status of 192.168.71.151:27017
2018-04-27 09:30:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.6 ms, state=CONNECTED}]
2018-04-27 09:30:21 -Checking status of 192.168.71.151:27017
2018-04-27 09:30:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.9 ms, state=CONNECTED}]
2018-04-27 09:30:31 -Checking status of 192.168.71.151:27017
2018-04-27 09:30:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.3 ms, state=CONNECTED}]
2018-04-27 09:30:41 -Checking status of 192.168.71.151:27017
2018-04-27 09:30:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.8 ms, state=CONNECTED}]
2018-04-27 09:30:51 -Checking status of 192.168.71.151:27017
2018-04-27 09:30:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 09:31:01 -Checking status of 192.168.71.151:27017
2018-04-27 09:31:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 09:31:11 -Checking status of 192.168.71.151:27017
2018-04-27 09:31:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 09:31:21 -Checking status of 192.168.71.151:27017
2018-04-27 09:31:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 09:31:31 -Checking status of 192.168.71.151:27017
2018-04-27 09:31:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 09:31:41 -Checking status of 192.168.71.151:27017
2018-04-27 09:31:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:31:51 -Checking status of 192.168.71.151:27017
2018-04-27 09:31:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:32:01 -Checking status of 192.168.71.151:27017
2018-04-27 09:32:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:32:11 -Checking status of 192.168.71.151:27017
2018-04-27 09:32:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:32:21 -Checking status of 192.168.71.151:27017
2018-04-27 09:32:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:32:55 -Starting DemoApplication on DESKTOP-4VE2VST with PID 10928 (Y:\MyGit\demo\target\classes started by Qiang in Y:\MyGit\demo)
2018-04-27 09:32:55 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 09:32:55 -The following profiles are active: dev
2018-04-27 09:32:55 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@413f69cc: startup date [Fri Apr 27 09:32:55 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:32:55 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@413f69cc: startup date [Fri Apr 27 09:32:55 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:32:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:32:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:32:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:32:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:32:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:32:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:32:57 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:32:57 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:32:57 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:32:57 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:32:57 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:32:57 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:32:57 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:32:57 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:32:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:32:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:32:57 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:32:57 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:32:57 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:32:57 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:32:57 -Loaded expression factory via original TCCL
2018-04-27 09:32:57 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:32:57 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:32:57 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:32:57 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:32:57 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:32:57 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:32:57 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:32:57 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:32:57 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:32:57 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:32:57 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:32:57 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:32:57 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:32:57 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:32:57 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:32:57 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:32:57 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$1a93a9d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:57 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$1a93a9d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$377c425b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$377c425b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:57 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$b569567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:57 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$b569567] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:57 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:57 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:57 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:57 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:57 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:57 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:58 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 09:32:58 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 09:32:58 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 09:32:58 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 09:32:58 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 09:32:58 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 09:32:58 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 09:32:58 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 09:32:58 -Starting Post-processing phase
2018-04-27 09:32:58 -Building annotation class map
2018-04-27 09:32:58 -Building interface class map for 8 classes
2018-04-27 09:32:58 - - Actor implements 0 interfaces
2018-04-27 09:32:58 - - Role implements 1 interfaces
2018-04-27 09:32:58 -   - java.io.Serializable
2018-04-27 09:32:58 - - MongoUser implements 0 interfaces
2018-04-27 09:32:58 - - Role implements 0 interfaces
2018-04-27 09:32:58 - - Movie implements 0 interfaces
2018-04-27 09:32:58 - - Department implements 0 interfaces
2018-04-27 09:32:58 - - BookBean implements 0 interfaces
2018-04-27 09:32:58 - - User implements 1 interfaces
2018-04-27 09:32:58 -   - java.io.Serializable
2018-04-27 09:32:58 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 09:32:58 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 09:32:58 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:32:58 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 09:32:58 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 09:32:58 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 09:32:58 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 09:32:58 -Post-processing: com.example.ren.model.BookBean
2018-04-27 09:32:58 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 09:32:58 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:32:58 -Checking for @Transient classes....
2018-04-27 09:32:58 -Registering converters and deregistering transient fields and methods....
2018-04-27 09:32:58 -Post-processing complete
2018-04-27 09:32:58 -Building Index Metadata.
2018-04-27 09:32:58 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:58 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:32:58 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:32:58 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:32:58 -Initializing ProtocolHandler ["http-nio-8080"]
2018-04-27 09:32:58 -Starting service [Tomcat]
2018-04-27 09:32:58 -Starting Servlet Engine: Apache Tomcat/8.5.28
2018-04-27 09:32:58 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;.]
2018-04-27 09:32:58 -Initializing Spring embedded WebApplicationContext
2018-04-27 09:32:58 -Root WebApplicationContext: initialization completed in 2981 ms
2018-04-27 09:32:58 -Root WebApplicationContext: initialization completed in 2981 ms
2018-04-27 09:32:59 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:32:59 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:32:59 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:32:59 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:32:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:32:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:32:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:32:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:32:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:32:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:32:59 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:32:59 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:32:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:32:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:32:59 -{dataSource-1} inited
2018-04-27 09:32:59 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:32:59 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:32:59 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 09:32:59",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:529621529, ConnectTime:"2018-04-27 09:32:59", UseCount:1, LastActiveTime:"2018-04-27 09:32:59"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 09:32:59 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 09:32:59 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 09:32:59 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 09:32:59 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 09:32:59 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 09:32:59 -HHH000206: hibernate.properties not found
2018-04-27 09:32:59 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 09:32:59 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 09:32:59 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 09:32:59 -Adding type registration boolean -> org.hibernate.type.BooleanType@4662752a
2018-04-27 09:32:59 -Adding type registration boolean -> org.hibernate.type.BooleanType@4662752a
2018-04-27 09:32:59 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4662752a
2018-04-27 09:32:59 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@799f354a
2018-04-27 09:32:59 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@10a907ec
2018-04-27 09:32:59 -Adding type registration yes_no -> org.hibernate.type.YesNoType@11826398
2018-04-27 09:32:59 -Adding type registration byte -> org.hibernate.type.ByteType@a316f6b
2018-04-27 09:32:59 -Adding type registration byte -> org.hibernate.type.ByteType@a316f6b
2018-04-27 09:32:59 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@a316f6b
2018-04-27 09:32:59 -Adding type registration character -> org.hibernate.type.CharacterType@29bd85db
2018-04-27 09:32:59 -Adding type registration char -> org.hibernate.type.CharacterType@29bd85db
2018-04-27 09:32:59 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@29bd85db
2018-04-27 09:32:59 -Adding type registration short -> org.hibernate.type.ShortType@7ae590f6
2018-04-27 09:32:59 -Adding type registration short -> org.hibernate.type.ShortType@7ae590f6
2018-04-27 09:32:59 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ae590f6
2018-04-27 09:32:59 -Adding type registration integer -> org.hibernate.type.IntegerType@a056b26
2018-04-27 09:32:59 -Adding type registration int -> org.hibernate.type.IntegerType@a056b26
2018-04-27 09:32:59 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@a056b26
2018-04-27 09:32:59 -Adding type registration long -> org.hibernate.type.LongType@74c121d4
2018-04-27 09:32:59 -Adding type registration long -> org.hibernate.type.LongType@74c121d4
2018-04-27 09:32:59 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@74c121d4
2018-04-27 09:32:59 -Adding type registration float -> org.hibernate.type.FloatType@482ba4b1
2018-04-27 09:32:59 -Adding type registration float -> org.hibernate.type.FloatType@482ba4b1
2018-04-27 09:32:59 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@482ba4b1
2018-04-27 09:32:59 -Adding type registration double -> org.hibernate.type.DoubleType@23564dd2
2018-04-27 09:32:59 -Adding type registration double -> org.hibernate.type.DoubleType@23564dd2
2018-04-27 09:32:59 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@23564dd2
2018-04-27 09:32:59 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@37d699a1
2018-04-27 09:32:59 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@37d699a1
2018-04-27 09:32:59 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23b1aa9
2018-04-27 09:32:59 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23b1aa9
2018-04-27 09:32:59 -Adding type registration string -> org.hibernate.type.StringType@57a667c8
2018-04-27 09:32:59 -Adding type registration java.lang.String -> org.hibernate.type.StringType@57a667c8
2018-04-27 09:32:59 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4861cca9
2018-04-27 09:32:59 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1132baa3
2018-04-27 09:32:59 -Adding type registration url -> org.hibernate.type.UrlType@57e03347
2018-04-27 09:32:59 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@57e03347
2018-04-27 09:32:59 -Adding type registration Duration -> org.hibernate.type.DurationType@5fb8dc01
2018-04-27 09:32:59 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5fb8dc01
2018-04-27 09:32:59 -Adding type registration Instant -> org.hibernate.type.InstantType@6b832551
2018-04-27 09:32:59 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b832551
2018-04-27 09:32:59 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6615237
2018-04-27 09:32:59 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6615237
2018-04-27 09:32:59 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1ab53860
2018-04-27 09:32:59 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1ab53860
2018-04-27 09:32:59 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@68c34db2
2018-04-27 09:32:59 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@68c34db2
2018-04-27 09:32:59 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@113dcaf8
2018-04-27 09:32:59 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@113dcaf8
2018-04-27 09:32:59 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4af7dd6a
2018-04-27 09:32:59 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4af7dd6a
2018-04-27 09:32:59 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35c8be21
2018-04-27 09:32:59 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35c8be21
2018-04-27 09:32:59 -Adding type registration date -> org.hibernate.type.DateType@2e3f324e
2018-04-27 09:32:59 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@2e3f324e
2018-04-27 09:32:59 -Adding type registration time -> org.hibernate.type.TimeType@7a814310
2018-04-27 09:32:59 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7a814310
2018-04-27 09:32:59 -Adding type registration timestamp -> org.hibernate.type.TimestampType@6b16de91
2018-04-27 09:32:59 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6b16de91
2018-04-27 09:32:59 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6b16de91
2018-04-27 09:32:59 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65036e8d
2018-04-27 09:32:59 -Adding type registration calendar -> org.hibernate.type.CalendarType@76d0ecd7
2018-04-27 09:32:59 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76d0ecd7
2018-04-27 09:32:59 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76d0ecd7
2018-04-27 09:32:59 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5dcf0772
2018-04-27 09:32:59 -Adding type registration locale -> org.hibernate.type.LocaleType@5e67a490
2018-04-27 09:32:59 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5e67a490
2018-04-27 09:32:59 -Adding type registration currency -> org.hibernate.type.CurrencyType@5d66ae3a
2018-04-27 09:32:59 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d66ae3a
2018-04-27 09:32:59 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@6682e6a5
2018-04-27 09:32:59 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6682e6a5
2018-04-27 09:32:59 -Adding type registration class -> org.hibernate.type.ClassType@37c1cfa
2018-04-27 09:32:59 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37c1cfa
2018-04-27 09:32:59 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@41fc0084
2018-04-27 09:32:59 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@41fc0084
2018-04-27 09:32:59 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f56424d
2018-04-27 09:32:59 -Adding type registration binary -> org.hibernate.type.BinaryType@5203c80f
2018-04-27 09:32:59 -Adding type registration byte[] -> org.hibernate.type.BinaryType@5203c80f
2018-04-27 09:32:59 -Adding type registration [B -> org.hibernate.type.BinaryType@5203c80f
2018-04-27 09:32:59 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4cae66a8
2018-04-27 09:32:59 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4cae66a8
2018-04-27 09:32:59 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4cae66a8
2018-04-27 09:32:59 -Adding type registration row_version -> org.hibernate.type.RowVersionType@3181d4de
2018-04-27 09:32:59 -Adding type registration image -> org.hibernate.type.ImageType@3cf55e0c
2018-04-27 09:32:59 -Adding type registration characters -> org.hibernate.type.CharArrayType@3afca2c
2018-04-27 09:32:59 -Adding type registration char[] -> org.hibernate.type.CharArrayType@3afca2c
2018-04-27 09:32:59 -Adding type registration [C -> org.hibernate.type.CharArrayType@3afca2c
2018-04-27 09:32:59 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6d7b001b
2018-04-27 09:32:59 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6d7b001b
2018-04-27 09:32:59 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6d7b001b
2018-04-27 09:32:59 -Adding type registration text -> org.hibernate.type.TextType@d6b532f
2018-04-27 09:32:59 -Adding type registration ntext -> org.hibernate.type.NTextType@733534f9
2018-04-27 09:32:59 -Adding type registration blob -> org.hibernate.type.BlobType@5e68be2
2018-04-27 09:32:59 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e68be2
2018-04-27 09:32:59 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@aca3c85
2018-04-27 09:32:59 -Adding type registration clob -> org.hibernate.type.ClobType@1e721583
2018-04-27 09:32:59 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e721583
2018-04-27 09:32:59 -Adding type registration nclob -> org.hibernate.type.NClobType@5b44318
2018-04-27 09:32:59 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5b44318
2018-04-27 09:32:59 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@730bea0
2018-04-27 09:32:59 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@19d53ab4
2018-04-27 09:32:59 -Adding type registration serializable -> org.hibernate.type.SerializableType@33627576
2018-04-27 09:33:00 -Adding type registration object -> org.hibernate.type.ObjectType@3a45afd4
2018-04-27 09:33:00 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a45afd4
2018-04-27 09:33:00 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1883871b
2018-04-27 09:33:00 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e0a9b1d
2018-04-27 09:33:00 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52f9e8bb
2018-04-27 09:33:00 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2035d65b
2018-04-27 09:33:00 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@240a2619
2018-04-27 09:33:00 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e3283f6
2018-04-27 09:33:00 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@539316bb
2018-04-27 09:33:00 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d1a859c
2018-04-27 09:33:00 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 09:33:00 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 09:33:00 -JDBC version : 4.0
2018-04-27 09:33:00 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 09:33:00 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 09:33:00 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:33:00 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 09:33:00 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 09:33:00 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 09:33:00 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:33:00 -Import with entity name Role
2018-04-27 09:33:00 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:33:00 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 09:33:00 -building SimpleValue for id
2018-04-27 09:33:00 -Building property id
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:33:00 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 09:33:00 -building SimpleValue for name
2018-04-27 09:33:00 -Building property name
2018-04-27 09:33:00 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 09:33:00 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:33:00 -Import with entity name Department
2018-04-27 09:33:00 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:33:00 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 09:33:00 -building SimpleValue for id
2018-04-27 09:33:00 -Building property id
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:33:00 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 09:33:00 -building SimpleValue for name
2018-04-27 09:33:00 -Building property name
2018-04-27 09:33:00 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 09:33:00 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:33:00 -Import with entity name User
2018-04-27 09:33:00 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:33:00 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 09:33:00 -building SimpleValue for id
2018-04-27 09:33:00 -Building property id
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 09:33:00 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 09:33:00 -building SimpleValue for createDate
2018-04-27 09:33:00 -Building property createDate
2018-04-27 09:33:00 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -Building property department
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -MetadataSourceProcessor property email with lazy=false
2018-04-27 09:33:00 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 09:33:00 -building SimpleValue for email
2018-04-27 09:33:00 -Building property email
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:33:00 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 09:33:00 -building SimpleValue for name
2018-04-27 09:33:00 -Building property name
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -MetadataSourceProcessor property password with lazy=false
2018-04-27 09:33:00 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 09:33:00 -building SimpleValue for password
2018-04-27 09:33:00 -Building property password
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 09:33:00 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 09:33:00 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 09:33:00 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 09:33:00 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 09:33:00 -Building property roles
2018-04-27 09:33:00 -Starting fillSimpleValue for id
2018-04-27 09:33:00 -Starting fillSimpleValue for name
2018-04-27 09:33:00 -Starting fillSimpleValue for id
2018-04-27 09:33:00 -Starting fillSimpleValue for name
2018-04-27 09:33:00 -Starting fillSimpleValue for id
2018-04-27 09:33:00 -Starting fillSimpleValue for createDate
2018-04-27 09:33:00 -Starting fillSimpleValue for email
2018-04-27 09:33:00 -Starting fillSimpleValue for name
2018-04-27 09:33:00 -Starting fillSimpleValue for password
2018-04-27 09:33:00 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 09:33:00 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 09:33:00 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 09:33:00 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:33:00 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 09:33:00 -Mapped collection key: user_id, element: role_id
2018-04-27 09:33:00 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:33:00 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:33:00 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:33:00 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:33:00 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:33:00 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:33:00 -Building session factory
2018-04-27 09:33:00 -SessionFactory name : null
2018-04-27 09:33:00 -Automatic flush during beforeCompletion(): enabled
2018-04-27 09:33:00 -Automatic session close at end of transaction: disabled
2018-04-27 09:33:00 -Statistics: disabled
2018-04-27 09:33:00 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 09:33:00 -Default entity-mode: pojo
2018-04-27 09:33:00 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 09:33:00 -Allow initialization of lazy state outside session : disabled
2018-04-27 09:33:00 -Using BatchFetchStyle : LEGACY
2018-04-27 09:33:00 -Default batch fetch size: -1
2018-04-27 09:33:00 -Maximum outer join fetch depth: 2
2018-04-27 09:33:00 -Default null ordering: NONE
2018-04-27 09:33:00 -Order SQL updates by primary key: disabled
2018-04-27 09:33:00 -Order SQL inserts for batching: disabled
2018-04-27 09:33:00 -multi-tenancy strategy : NONE
2018-04-27 09:33:00 -JTA Track by Thread: enabled
2018-04-27 09:33:00 -Query language substitutions: {}
2018-04-27 09:33:00 -JPA query language strict compliance: disabled
2018-04-27 09:33:00 -Named query checking : enabled
2018-04-27 09:33:00 -Second-level cache: enabled
2018-04-27 09:33:00 -Second-level query cache: disabled
2018-04-27 09:33:00 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@54bb1194
2018-04-27 09:33:00 -Second-level cache region prefix: null
2018-04-27 09:33:00 -Optimize second-level cache for minimal puts: disabled
2018-04-27 09:33:00 -Structured second-level cache entries: disabled
2018-04-27 09:33:00 -Second-level cache direct-reference entries: disabled
2018-04-27 09:33:00 -Automatic eviction of collection cache: disabled
2018-04-27 09:33:00 -JDBC batch size: 15
2018-04-27 09:33:00 -JDBC batch updates for versioned data: enabled
2018-04-27 09:33:00 -Scrollable result sets: enabled
2018-04-27 09:33:00 -Wrap result sets: disabled
2018-04-27 09:33:00 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 09:33:00 -JDBC result set fetch size: null
2018-04-27 09:33:00 -Connection release mode: ON_CLOSE
2018-04-27 09:33:00 -Generate SQL with comments: disabled
2018-04-27 09:33:00 -Session factory constructed with filter configurations : {}
2018-04-27 09:33:00 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.example.ren.DemoApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@71039ce1, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, spring.output.ansi.enabled=always, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, catalina.home=C:\Users\Qiang\AppData\Local\Temp\tomcat.1322759825448289114.8080, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=10928, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\Qiang\AppData\Local\Temp\tomcat.1322759825448289114.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3348c987, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 09:32:59",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:529621529, ConnectTime:"2018-04-27 09:32:59", UseCount:2, LastActiveTime:"2018-04-27 09:33:00"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 09:33:00 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:33:00 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:33:00 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:33:00 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:33:00 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:33:00 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:33:00 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:33:00 -Loaded expression factory via original TCCL
2018-04-27 09:33:00 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:33:00 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:33:00 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:33:00 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:33:00 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:33:00 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:33:00 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:33:00 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:33:00 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:33:00 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:33:00 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:33:00 -Skipping JACC integration as it was not enabled
2018-04-27 09:33:00 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 09:33:00 -Instantiated session factory
2018-04-27 09:33:00 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:33:00 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:33:00 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:33:00 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:33:00 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:33:00 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:33:00 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:33:00 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:33:00 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:33:00 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:33:00 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:33:00 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:33:00 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:33:00 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 09:33:00 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 09:33:00 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 09:33:00 - One-shot delete: delete from user_role where user_id=?
2018-04-27 09:33:00 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 09:33:00 - Version select: select id from role where id =?
2018-04-27 09:33:00 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 09:33:00 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 09:33:00 - Update 0: update role set name=? where id=?
2018-04-27 09:33:00 - Delete 0: delete from role where id=?
2018-04-27 09:33:00 - Identity insert: insert into role (name) values (?)
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb3f39e]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e6522a6]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c4551c6]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4db46344]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@702b656a]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ccfac29]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77ea960f]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ef93e01]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd66f6a]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@578b2dec]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39f4a7c4]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:33:00 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:33:00 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:33:00 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 09:33:00 - Version select: select id from department where id =?
2018-04-27 09:33:00 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 09:33:00 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 09:33:00 - Update 0: update department set name=? where id=?
2018-04-27 09:33:00 - Delete 0: delete from department where id=?
2018-04-27 09:33:00 - Identity insert: insert into department (name) values (?)
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f2c9e8]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@350342e0]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dd44289]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43fe2008]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a543e09]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc3df43]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e7cd0df]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8b89b3a]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3de45b6c]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be7c052]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5599dc60]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:33:00 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:33:00 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:33:00 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 09:33:00 - Version select: select id from user where id =?
2018-04-27 09:33:00 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 09:33:00 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 09:33:00 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 09:33:00 - Delete 0: delete from user where id=?
2018-04-27 09:33:00 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70f5f59d]
2018-04-27 09:33:00 -Visiting attribute path : createDate
2018-04-27 09:33:00 -Visiting attribute path : department
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@590dea35]
2018-04-27 09:33:00 -Visiting attribute path : department.name
2018-04-27 09:33:00 -Visiting attribute path : email
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Visiting attribute path : password
2018-04-27 09:33:00 -Visiting attribute path : roles
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12548f9a]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b2e931]
2018-04-27 09:33:00 -Visiting attribute path : roles.name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b4ba615]
2018-04-27 09:33:00 -Visiting attribute path : createDate
2018-04-27 09:33:00 -Visiting attribute path : department
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41f686af]
2018-04-27 09:33:00 -Visiting attribute path : department.name
2018-04-27 09:33:00 -Visiting attribute path : email
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Visiting attribute path : password
2018-04-27 09:33:00 -Visiting attribute path : roles
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7be3abaa]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f8134]
2018-04-27 09:33:00 -Visiting attribute path : roles.name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aac6f9f]
2018-04-27 09:33:00 -Visiting attribute path : createDate
2018-04-27 09:33:00 -Visiting attribute path : department
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eb6037d]
2018-04-27 09:33:00 -Visiting attribute path : email
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Visiting attribute path : password
2018-04-27 09:33:00 -Visiting attribute path : roles
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@335b3d6]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5ce4b8]
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38848217]
2018-04-27 09:33:00 -Visiting attribute path : createDate
2018-04-27 09:33:00 -Visiting attribute path : department
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38826984]
2018-04-27 09:33:00 -Visiting attribute path : email
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Visiting attribute path : password
2018-04-27 09:33:00 -Visiting attribute path : roles
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65262308]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@792e8181]
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@511d5e6e]
2018-04-27 09:33:00 -Visiting attribute path : createDate
2018-04-27 09:33:00 -Visiting attribute path : department
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1291a4]
2018-04-27 09:33:00 -Visiting attribute path : email
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Visiting attribute path : password
2018-04-27 09:33:00 -Visiting attribute path : roles
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23bd2f6e]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18e8eb59]
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2430cf17]
2018-04-27 09:33:00 -Visiting attribute path : createDate
2018-04-27 09:33:00 -Visiting attribute path : department
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54997f67]
2018-04-27 09:33:00 -Visiting attribute path : email
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Visiting attribute path : password
2018-04-27 09:33:00 -Visiting attribute path : roles
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bf4e48e]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@299eca90]
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@189633f2]
2018-04-27 09:33:00 -Visiting attribute path : createDate
2018-04-27 09:33:00 -Visiting attribute path : department
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b974137]
2018-04-27 09:33:00 -Visiting attribute path : email
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Visiting attribute path : password
2018-04-27 09:33:00 -Visiting attribute path : roles
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7402c49f]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d22604e]
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2382b2f]
2018-04-27 09:33:00 -Visiting attribute path : createDate
2018-04-27 09:33:00 -Visiting attribute path : department
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71734463]
2018-04-27 09:33:00 -Visiting attribute path : email
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Visiting attribute path : password
2018-04-27 09:33:00 -Visiting attribute path : roles
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f1d6a13]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cbf4f8c]
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55c46ec1]
2018-04-27 09:33:00 -Visiting attribute path : createDate
2018-04-27 09:33:00 -Visiting attribute path : department
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ae6d078]
2018-04-27 09:33:00 -Visiting attribute path : email
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Visiting attribute path : password
2018-04-27 09:33:00 -Visiting attribute path : roles
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ca33187]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a67f8b4]
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f1f0ee6]
2018-04-27 09:33:00 -Visiting attribute path : createDate
2018-04-27 09:33:00 -Visiting attribute path : department
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76fc5687]
2018-04-27 09:33:00 -Visiting attribute path : email
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Visiting attribute path : password
2018-04-27 09:33:00 -Visiting attribute path : roles
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53fbb2b4]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7434ee13]
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44a14de0]
2018-04-27 09:33:00 -Visiting attribute path : createDate
2018-04-27 09:33:00 -Visiting attribute path : department
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e1d1524]
2018-04-27 09:33:00 -Visiting attribute path : email
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Visiting attribute path : password
2018-04-27 09:33:00 -Visiting attribute path : roles
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d0a2c82]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@430aae8e]
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:33:00 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:33:00 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:33:00 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68479e8b]
2018-04-27 09:33:00 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e951fb1]
2018-04-27 09:33:00 -Visiting attribute path : name
2018-04-27 09:33:00 -Building LoadPlan...
2018-04-27 09:33:00 -processing queryspace <gen:0>
2018-04-27 09:33:00 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 09:33:00 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 09:33:00 -No alter strings for table : department
2018-04-27 09:33:00 -No alter strings for table : role
2018-04-27 09:33:00 -No alter strings for table : user
2018-04-27 09:33:00 -No alter strings for table : user_role
2018-04-27 09:33:00 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 09:33:00 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 09:33:00 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 09:33:00 -Checking 0 named HQL queries
2018-04-27 09:33:00 -Checking 0 named SQL queries
2018-04-27 09:33:00 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@160546b1
2018-04-27 09:33:00 -Registering SessionFactory: 016a2d11-7652-4eeb-b212-81310539dfce (<unnamed>)
2018-04-27 09:33:00 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 09:33:00 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:33:00 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:33:01 -Statistics initialized [enabled=false]
2018-04-27 09:33:01 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@28cf179c
2018-04-27 09:33:01 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 09:33:01 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:33:01 -throwQueryException() : no errors
2018-04-27 09:33:01 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 09:33:01 -select << begin [level=1, statement=select]
2018-04-27 09:33:01 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:33:01 -Resolved : t -> user0_.id
2018-04-27 09:33:01 -Resolved : t -> user0_.id
2018-04-27 09:33:01 -getDataType() : name -> org.hibernate.type.StringType@57a667c8
2018-04-27 09:33:01 -Resolved : t.name -> user0_.name
2018-04-27 09:33:01 -select : finishing up [level=1, statement=select]
2018-04-27 09:33:01 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 09:33:01 -Using FROM fragment [user user0_]
2018-04-27 09:33:01 -select >> end [level=1, statement=select]
2018-04-27 09:33:01 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@57a667c8}

2018-04-27 09:33:01 -throwQueryException() : no errors
2018-04-27 09:33:01 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:33:01 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 09:33:01 -throwQueryException() : no errors
2018-04-27 09:33:01 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:33:01 -throwQueryException() : no errors
2018-04-27 09:33:01 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 09:33:01 -select << begin [level=1, statement=select]
2018-04-27 09:33:01 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:33:01 -Resolved : t -> user0_.id
2018-04-27 09:33:01 -Resolved : t -> user0_.id
2018-04-27 09:33:01 -getDataType() : name -> org.hibernate.type.StringType@57a667c8
2018-04-27 09:33:01 -Resolved : t.name -> user0_.name
2018-04-27 09:33:01 -Resolved : t -> user0_.id
2018-04-27 09:33:01 -getDataType() : email -> org.hibernate.type.StringType@57a667c8
2018-04-27 09:33:01 -Resolved : t.email -> user0_.email
2018-04-27 09:33:01 -select : finishing up [level=1, statement=select]
2018-04-27 09:33:01 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 09:33:01 -Using FROM fragment [user user0_]
2018-04-27 09:33:01 -select >> end [level=1, statement=select]
2018-04-27 09:33:01 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@57a667c8}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@57a667c8}

2018-04-27 09:33:01 -throwQueryException() : no errors
2018-04-27 09:33:01 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:33:01 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 09:33:01 -throwQueryException() : no errors
2018-04-27 09:33:01 -Using SLF4J as the default logging framework
2018-04-27 09:33:01 --Dio.netty.eventLoopThreads: 4
2018-04-27 09:33:01 --Dio.netty.leakDetection.level: simple
2018-04-27 09:33:01 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 09:33:01 -Platform: Windows
2018-04-27 09:33:01 --Dio.netty.noUnsafe: false
2018-04-27 09:33:01 -Java version: 8
2018-04-27 09:33:01 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 09:33:01 -sun.misc.Unsafe.copyMemory: available
2018-04-27 09:33:01 -java.nio.Buffer.address: available
2018-04-27 09:33:01 -direct buffer constructor: available
2018-04-27 09:33:01 -java.nio.Bits.unaligned: available, true
2018-04-27 09:33:01 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 09:33:01 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 09:33:01 -sun.misc.Unsafe: available
2018-04-27 09:33:01 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 09:33:01 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 09:33:01 --Dio.netty.noPreferDirect: false
2018-04-27 09:33:01 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 09:33:01 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 09:33:01 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 09:33:01 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5e3cb58e
2018-04-27 09:33:01 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 09:33:01 -Using Slf4j logging framework
2018-04-27 09:33:01 -Starting UnsafeSupport init in Java 1.8
2018-04-27 09:33:01 -Unsafe is available
2018-04-27 09:33:01 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 09:33:01 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 09:33:01 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 09:33:01 --Dio.netty.allocator.pageSize: 8192
2018-04-27 09:33:01 --Dio.netty.allocator.maxOrder: 11
2018-04-27 09:33:01 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 09:33:01 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 09:33:01 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 09:33:01 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 09:33:01 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 09:33:01 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 09:33:01 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 09:33:01 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 09:33:01 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:33:01 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:33:01 -Neo4jMappingContext initialisation completed
2018-04-27 09:33:01 -Neo4jMappingContext initialisation completed
2018-04-27 09:33:02 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:33:02 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:33:02 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:33:02 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:33:02 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 09:33:02 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 09:33:03 -Opened connection [connectionId{localValue:1, serverValue:11}] to 192.168.71.151:27017
2018-04-27 09:33:03 -Checking status of 192.168.71.151:27017
2018-04-27 09:33:03 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3583558}
2018-04-27 09:33:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.6 ms, state=CONNECTED}]
2018-04-27 09:33:03 -Opened connection [connectionId{localValue:2, serverValue:12}] to 192.168.71.151:27017
2018-04-27 09:33:03 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:12}] to server 192.168.71.151:27017
2018-04-27 09:33:03 -Command execution completed
2018-04-27 09:33:03 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:33:03 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:33:03 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:33:03 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:33:03 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:33:03 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:33:03 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:33:03 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:33:03 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:33:03 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:33:03 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:33:03 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:33:03 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:33:03 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:33:03 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:33:03 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:33:03 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:33:03 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:33:03 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:33:03 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:33:03 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:33:03 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:33:03 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:33:03 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:33:03 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:33:03 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:33:03 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:33:03 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:33:03 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:33:03 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:33:03 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:33:03 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:33:03 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:33:03 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:33:03 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:33:03 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:33:03 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:33:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:33:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:33:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:33:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:33:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:33:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:33:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:33:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:33:03 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:33:03 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:33:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:33:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:33:03 -init trackerLocator [192.168.71.161:22122]
2018-04-27 09:33:03 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:33:03 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:33:03 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:33:03 -Loaded expression factory via original TCCL
2018-04-27 09:33:03 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:33:03 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:33:03 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:33:03 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:33:03 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:33:03 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:33:03 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:33:03 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:33:03 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:33:03 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:33:03 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:33:03 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:33:03 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:33:03 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:33:03 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:33:03 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:33:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@413f69cc: startup date [Fri Apr 27 09:32:55 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:33:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@413f69cc: startup date [Fri Apr 27 09:32:55 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:33:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:33:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:33:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:33:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:33:04 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:33:04 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:33:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:33:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:33:04 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:33:04 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:33:05 -Registering beans for JMX exposure on startup
2018-04-27 09:33:05 -Registering beans for JMX exposure on startup
2018-04-27 09:33:05 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:33:05 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:33:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:33:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:33:05 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:33:05 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:33:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:33:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:33:05 -Starting beans in phase 2147483647
2018-04-27 09:33:05 -Starting beans in phase 2147483647
2018-04-27 09:33:05 -Context refreshed
2018-04-27 09:33:05 -Context refreshed
2018-04-27 09:33:05 -Found 1 custom documentation plugin(s)
2018-04-27 09:33:05 -Found 1 custom documentation plugin(s)
2018-04-27 09:33:05 -Scanning for api listing references
2018-04-27 09:33:05 -Scanning for api listing references
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:33:05 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: createUsingGET_1
2018-04-27 09:33:05 -Generating unique operation named: createUsingGET_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:33:05 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:33:05 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:33:05 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:33:05 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:33:05 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:33:05 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:33:05 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:33:05 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:33:05 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingGET_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingGET_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:33:05 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:33:05 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:33:05 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: showUsingGET_1
2018-04-27 09:33:05 -Generating unique operation named: showUsingGET_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:33:05 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:33:05 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:33:05 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:33:05 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:33:05 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:33:05 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:33:05 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:33:05 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:33:05 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:33:05 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:33:05 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:33:05 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:33:05 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:33:05 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:33:05 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:33:05 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:33:05 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:33:05 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:33:05 -Starting ProtocolHandler ["http-nio-8080"]
2018-04-27 09:33:05 -Using a shared selector for servlet write/read
2018-04-27 09:33:05 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:33:05 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:33:05 -Started DemoApplication in 11.031 seconds (JVM running for 12.006)
2018-04-27 09:33:13 -Checking status of 192.168.71.151:27017
2018-04-27 09:33:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.8 ms, state=CONNECTED}]
2018-04-27 09:33:23 -Checking status of 192.168.71.151:27017
2018-04-27 09:33:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.3 ms, state=CONNECTED}]
2018-04-27 09:33:33 -Checking status of 192.168.71.151:27017
2018-04-27 09:33:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 09:33:43 -Checking status of 192.168.71.151:27017
2018-04-27 09:33:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2018-04-27 09:33:53 -Checking status of 192.168.71.151:27017
2018-04-27 09:33:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 09:34:03 -Checking status of 192.168.71.151:27017
2018-04-27 09:34:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 09:34:13 -Checking status of 192.168.71.151:27017
2018-04-27 09:34:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 09:34:23 -Checking status of 192.168.71.151:27017
2018-04-27 09:34:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 09:34:33 -Checking status of 192.168.71.151:27017
2018-04-27 09:34:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:34:43 -Checking status of 192.168.71.151:27017
2018-04-27 09:34:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:34:53 -Checking status of 192.168.71.151:27017
2018-04-27 09:34:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:35:03 -Checking status of 192.168.71.151:27017
2018-04-27 09:35:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:35:13 -Checking status of 192.168.71.151:27017
2018-04-27 09:35:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:35:23 -Checking status of 192.168.71.151:27017
2018-04-27 09:35:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:35:33 -Checking status of 192.168.71.151:27017
2018-04-27 09:35:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:35:43 -Checking status of 192.168.71.151:27017
2018-04-27 09:35:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:35:44 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-27 09:35:44 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:35:44 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:35:45 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-04-27 09:35:45 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-04-27 09:35:45 -BookBean{name='红楼梦', author='曹雪芹', price='28'}
2018-04-27 09:35:49 -null
java.lang.NullPointerException: null
	at com.example.ren.utils.FastdfsClient.uploadFile(FastdfsClient.java:37)
	at com.example.ren.controller.fastdfs.FastdfsController.upload(FastdfsController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-27 09:35:53 -Checking status of 192.168.71.151:27017
2018-04-27 09:35:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:36:03 -Checking status of 192.168.71.151:27017
2018-04-27 09:36:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:36:13 -Checking status of 192.168.71.151:27017
2018-04-27 09:36:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:36:23 -Checking status of 192.168.71.151:27017
2018-04-27 09:36:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=31.4 ms, state=CONNECTED}]
2018-04-27 09:36:33 -Checking status of 192.168.71.151:27017
2018-04-27 09:36:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=25.3 ms, state=CONNECTED}]
2018-04-27 09:36:43 -Checking status of 192.168.71.151:27017
2018-04-27 09:36:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=20.9 ms, state=CONNECTED}]
2018-04-27 09:36:53 -Checking status of 192.168.71.151:27017
2018-04-27 09:36:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=17.0 ms, state=CONNECTED}]
2018-04-27 09:37:03 -Checking status of 192.168.71.151:27017
2018-04-27 09:37:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=13.8 ms, state=CONNECTED}]
2018-04-27 09:37:13 -Checking status of 192.168.71.151:27017
2018-04-27 09:37:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=12.4 ms, state=CONNECTED}]
2018-04-27 09:37:23 -Checking status of 192.168.71.151:27017
2018-04-27 09:37:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=10.2 ms, state=CONNECTED}]
2018-04-27 09:37:33 -Checking status of 192.168.71.151:27017
2018-04-27 09:37:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=8.3 ms, state=CONNECTED}]
2018-04-27 09:37:43 -Checking status of 192.168.71.151:27017
2018-04-27 09:37:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.9 ms, state=CONNECTED}]
2018-04-27 09:37:53 -Checking status of 192.168.71.151:27017
2018-04-27 09:37:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.7 ms, state=CONNECTED}]
2018-04-27 09:38:03 -Checking status of 192.168.71.151:27017
2018-04-27 09:38:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.7 ms, state=CONNECTED}]
2018-04-27 09:38:13 -Checking status of 192.168.71.151:27017
2018-04-27 09:38:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.4 ms, state=CONNECTED}]
2018-04-27 09:38:23 -Checking status of 192.168.71.151:27017
2018-04-27 09:38:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.8 ms, state=CONNECTED}]
2018-04-27 09:38:33 -Checking status of 192.168.71.151:27017
2018-04-27 09:38:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.2 ms, state=CONNECTED}]
2018-04-27 09:38:43 -Checking status of 192.168.71.151:27017
2018-04-27 09:38:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 09:38:53 -Checking status of 192.168.71.151:27017
2018-04-27 09:38:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.6 ms, state=CONNECTED}]
2018-04-27 09:39:03 -Checking status of 192.168.71.151:27017
2018-04-27 09:39:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1383.5 ms, state=CONNECTED}]
2018-04-27 09:39:20 -Checking status of 192.168.71.151:27017
2018-04-27 09:39:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1110.0 ms, state=CONNECTED}]
2018-04-27 09:39:30 -Checking status of 192.168.71.151:27017
2018-04-27 09:39:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=888.3 ms, state=CONNECTED}]
2018-04-27 09:39:40 -Checking status of 192.168.71.151:27017
2018-04-27 09:39:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=711.0 ms, state=CONNECTED}]
2018-04-27 09:39:50 -Checking status of 192.168.71.151:27017
2018-04-27 09:39:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=568.9 ms, state=CONNECTED}]
2018-04-27 09:40:00 -Checking status of 192.168.71.151:27017
2018-04-27 09:40:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=455.5 ms, state=CONNECTED}]
2018-04-27 09:40:10 -Checking status of 192.168.71.151:27017
2018-04-27 09:40:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=364.6 ms, state=CONNECTED}]
2018-04-27 09:40:20 -Checking status of 192.168.71.151:27017
2018-04-27 09:40:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=291.8 ms, state=CONNECTED}]
2018-04-27 09:40:30 -Checking status of 192.168.71.151:27017
2018-04-27 09:40:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=233.7 ms, state=CONNECTED}]
2018-04-27 09:40:40 -Checking status of 192.168.71.151:27017
2018-04-27 09:40:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=187.2 ms, state=CONNECTED}]
2018-04-27 09:40:50 -Checking status of 192.168.71.151:27017
2018-04-27 09:40:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=149.9 ms, state=CONNECTED}]
2018-04-27 09:41:00 -Checking status of 192.168.71.151:27017
2018-04-27 09:41:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=120.1 ms, state=CONNECTED}]
2018-04-27 09:41:10 -Checking status of 192.168.71.151:27017
2018-04-27 09:41:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=96.2 ms, state=CONNECTED}]
2018-04-27 09:41:20 -Checking status of 192.168.71.151:27017
2018-04-27 09:41:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=77.1 ms, state=CONNECTED}]
2018-04-27 09:41:30 -Checking status of 192.168.71.151:27017
2018-04-27 09:41:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=61.9 ms, state=CONNECTED}]
2018-04-27 09:41:40 -Checking status of 192.168.71.151:27017
2018-04-27 09:41:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=49.7 ms, state=CONNECTED}]
2018-04-27 09:41:50 -Checking status of 192.168.71.151:27017
2018-04-27 09:41:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=39.9 ms, state=CONNECTED}]
2018-04-27 09:42:00 -Checking status of 192.168.71.151:27017
2018-04-27 09:42:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=32.5 ms, state=CONNECTED}]
2018-04-27 09:42:10 -Checking status of 192.168.71.151:27017
2018-04-27 09:42:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=26.1 ms, state=CONNECTED}]
2018-04-27 09:42:20 -Checking status of 192.168.71.151:27017
2018-04-27 09:42:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=21.8 ms, state=CONNECTED}]
2018-04-27 09:42:30 -Checking status of 192.168.71.151:27017
2018-04-27 09:42:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=17.7 ms, state=CONNECTED}]
2018-04-27 09:42:41 -Starting DemoApplication on DESKTOP-4VE2VST with PID 17904 (Y:\MyGit\demo\target\classes started by Qiang in Y:\MyGit\demo)
2018-04-27 09:42:41 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 09:42:41 -The following profiles are active: dev
2018-04-27 09:42:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a3bc7ed: startup date [Fri Apr 27 09:42:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:42:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a3bc7ed: startup date [Fri Apr 27 09:42:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:42:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:42:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:42:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:42:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:42:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:42:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:42:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:42:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:42:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:42:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:42:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:42:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:42:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:42:43 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:42:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:42:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:42:43 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:42:44 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:42:44 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:42:44 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:42:44 -Loaded expression factory via original TCCL
2018-04-27 09:42:44 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:42:44 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:42:44 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:42:44 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:42:44 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:42:44 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:42:44 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:42:44 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:42:44 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:42:44 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:42:44 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:42:44 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:42:44 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:42:44 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:42:44 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:42:44 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:42:44 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$baa734af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$baa734af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d78fcd33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d78fcd33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$ab6a203f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$ab6a203f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 09:42:44 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 09:42:44 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 09:42:44 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 09:42:44 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 09:42:44 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 09:42:44 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 09:42:44 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 09:42:44 -Starting Post-processing phase
2018-04-27 09:42:44 -Building annotation class map
2018-04-27 09:42:44 -Building interface class map for 8 classes
2018-04-27 09:42:44 - - Actor implements 0 interfaces
2018-04-27 09:42:44 - - Role implements 1 interfaces
2018-04-27 09:42:44 -   - java.io.Serializable
2018-04-27 09:42:44 - - MongoUser implements 0 interfaces
2018-04-27 09:42:44 - - Role implements 0 interfaces
2018-04-27 09:42:44 - - Movie implements 0 interfaces
2018-04-27 09:42:44 - - Department implements 0 interfaces
2018-04-27 09:42:44 - - BookBean implements 0 interfaces
2018-04-27 09:42:44 - - User implements 1 interfaces
2018-04-27 09:42:44 -   - java.io.Serializable
2018-04-27 09:42:44 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 09:42:44 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 09:42:44 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:42:44 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 09:42:44 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 09:42:44 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 09:42:44 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 09:42:44 -Post-processing: com.example.ren.model.BookBean
2018-04-27 09:42:44 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 09:42:44 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:42:44 -Checking for @Transient classes....
2018-04-27 09:42:44 -Registering converters and deregistering transient fields and methods....
2018-04-27 09:42:44 -Post-processing complete
2018-04-27 09:42:44 -Building Index Metadata.
2018-04-27 09:42:44 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:44 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:42:45 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:42:45 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:42:45 -Initializing ProtocolHandler ["http-nio-8080"]
2018-04-27 09:42:45 -Starting service [Tomcat]
2018-04-27 09:42:45 -Starting Servlet Engine: Apache Tomcat/8.5.28
2018-04-27 09:42:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;.]
2018-04-27 09:42:45 -Initializing Spring embedded WebApplicationContext
2018-04-27 09:42:45 -Root WebApplicationContext: initialization completed in 3767 ms
2018-04-27 09:42:45 -Root WebApplicationContext: initialization completed in 3767 ms
2018-04-27 09:42:45 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:42:45 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:42:45 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:42:45 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:42:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:42:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:42:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:42:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:42:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:42:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:42:45 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:42:45 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:42:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:42:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:42:45 -{dataSource-1} inited
2018-04-27 09:42:46 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:42:46 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:42:46 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 09:42:45",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:1602880207, ConnectTime:"2018-04-27 09:42:46", UseCount:1, LastActiveTime:"2018-04-27 09:42:46"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 09:42:46 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 09:42:46 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 09:42:46 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 09:42:46 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 09:42:46 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 09:42:46 -HHH000206: hibernate.properties not found
2018-04-27 09:42:46 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 09:42:46 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 09:42:46 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 09:42:46 -Adding type registration boolean -> org.hibernate.type.BooleanType@646d810b
2018-04-27 09:42:46 -Adding type registration boolean -> org.hibernate.type.BooleanType@646d810b
2018-04-27 09:42:46 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@646d810b
2018-04-27 09:42:46 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@13f40d71
2018-04-27 09:42:46 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@7911cc15
2018-04-27 09:42:46 -Adding type registration yes_no -> org.hibernate.type.YesNoType@5329f6b3
2018-04-27 09:42:46 -Adding type registration byte -> org.hibernate.type.ByteType@1c7f9861
2018-04-27 09:42:46 -Adding type registration byte -> org.hibernate.type.ByteType@1c7f9861
2018-04-27 09:42:46 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1c7f9861
2018-04-27 09:42:46 -Adding type registration character -> org.hibernate.type.CharacterType@2e0ad709
2018-04-27 09:42:46 -Adding type registration char -> org.hibernate.type.CharacterType@2e0ad709
2018-04-27 09:42:46 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e0ad709
2018-04-27 09:42:46 -Adding type registration short -> org.hibernate.type.ShortType@35563e4c
2018-04-27 09:42:46 -Adding type registration short -> org.hibernate.type.ShortType@35563e4c
2018-04-27 09:42:46 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35563e4c
2018-04-27 09:42:46 -Adding type registration integer -> org.hibernate.type.IntegerType@54ccb3
2018-04-27 09:42:46 -Adding type registration int -> org.hibernate.type.IntegerType@54ccb3
2018-04-27 09:42:46 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@54ccb3
2018-04-27 09:42:46 -Adding type registration long -> org.hibernate.type.LongType@19fbc594
2018-04-27 09:42:46 -Adding type registration long -> org.hibernate.type.LongType@19fbc594
2018-04-27 09:42:46 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@19fbc594
2018-04-27 09:42:46 -Adding type registration float -> org.hibernate.type.FloatType@5866731
2018-04-27 09:42:46 -Adding type registration float -> org.hibernate.type.FloatType@5866731
2018-04-27 09:42:46 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5866731
2018-04-27 09:42:46 -Adding type registration double -> org.hibernate.type.DoubleType@39f0c343
2018-04-27 09:42:46 -Adding type registration double -> org.hibernate.type.DoubleType@39f0c343
2018-04-27 09:42:46 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@39f0c343
2018-04-27 09:42:46 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@19cdc217
2018-04-27 09:42:46 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@19cdc217
2018-04-27 09:42:46 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1a2e563e
2018-04-27 09:42:46 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1a2e563e
2018-04-27 09:42:46 -Adding type registration string -> org.hibernate.type.StringType@6d874695
2018-04-27 09:42:46 -Adding type registration java.lang.String -> org.hibernate.type.StringType@6d874695
2018-04-27 09:42:46 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23121d14
2018-04-27 09:42:46 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6a8a551e
2018-04-27 09:42:46 -Adding type registration url -> org.hibernate.type.UrlType@55d8c2c4
2018-04-27 09:42:46 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@55d8c2c4
2018-04-27 09:42:46 -Adding type registration Duration -> org.hibernate.type.DurationType@5fb5ad40
2018-04-27 09:42:46 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5fb5ad40
2018-04-27 09:42:46 -Adding type registration Instant -> org.hibernate.type.InstantType@4d81e83a
2018-04-27 09:42:46 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4d81e83a
2018-04-27 09:42:46 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49491770
2018-04-27 09:42:46 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49491770
2018-04-27 09:42:46 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2616b618
2018-04-27 09:42:46 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2616b618
2018-04-27 09:42:46 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1eb9bf60
2018-04-27 09:42:46 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1eb9bf60
2018-04-27 09:42:46 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c59a0f7
2018-04-27 09:42:46 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c59a0f7
2018-04-27 09:42:46 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2c47a053
2018-04-27 09:42:46 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2c47a053
2018-04-27 09:42:46 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68bd8ca7
2018-04-27 09:42:46 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68bd8ca7
2018-04-27 09:42:46 -Adding type registration date -> org.hibernate.type.DateType@73e4bb60
2018-04-27 09:42:46 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@73e4bb60
2018-04-27 09:42:46 -Adding type registration time -> org.hibernate.type.TimeType@4dd2ef54
2018-04-27 09:42:46 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4dd2ef54
2018-04-27 09:42:46 -Adding type registration timestamp -> org.hibernate.type.TimestampType@9d3d54e
2018-04-27 09:42:46 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@9d3d54e
2018-04-27 09:42:46 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@9d3d54e
2018-04-27 09:42:46 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d25913
2018-04-27 09:42:46 -Adding type registration calendar -> org.hibernate.type.CalendarType@66756662
2018-04-27 09:42:46 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@66756662
2018-04-27 09:42:46 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@66756662
2018-04-27 09:42:46 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@40d96578
2018-04-27 09:42:46 -Adding type registration locale -> org.hibernate.type.LocaleType@13516600
2018-04-27 09:42:46 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13516600
2018-04-27 09:42:46 -Adding type registration currency -> org.hibernate.type.CurrencyType@782fd504
2018-04-27 09:42:46 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@782fd504
2018-04-27 09:42:46 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@1282e98
2018-04-27 09:42:46 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1282e98
2018-04-27 09:42:46 -Adding type registration class -> org.hibernate.type.ClassType@26275b46
2018-04-27 09:42:46 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26275b46
2018-04-27 09:42:46 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@21f9c6ea
2018-04-27 09:42:46 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@21f9c6ea
2018-04-27 09:42:46 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@133aacbe
2018-04-27 09:42:46 -Adding type registration binary -> org.hibernate.type.BinaryType@6ed18d80
2018-04-27 09:42:46 -Adding type registration byte[] -> org.hibernate.type.BinaryType@6ed18d80
2018-04-27 09:42:46 -Adding type registration [B -> org.hibernate.type.BinaryType@6ed18d80
2018-04-27 09:42:46 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6aff97d6
2018-04-27 09:42:46 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6aff97d6
2018-04-27 09:42:46 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6aff97d6
2018-04-27 09:42:46 -Adding type registration row_version -> org.hibernate.type.RowVersionType@5463f035
2018-04-27 09:42:46 -Adding type registration image -> org.hibernate.type.ImageType@130a6eb9
2018-04-27 09:42:46 -Adding type registration characters -> org.hibernate.type.CharArrayType@6ef4cbe1
2018-04-27 09:42:46 -Adding type registration char[] -> org.hibernate.type.CharArrayType@6ef4cbe1
2018-04-27 09:42:46 -Adding type registration [C -> org.hibernate.type.CharArrayType@6ef4cbe1
2018-04-27 09:42:46 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@120df990
2018-04-27 09:42:46 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@120df990
2018-04-27 09:42:46 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@120df990
2018-04-27 09:42:46 -Adding type registration text -> org.hibernate.type.TextType@20a3e10c
2018-04-27 09:42:46 -Adding type registration ntext -> org.hibernate.type.NTextType@73d62b5
2018-04-27 09:42:46 -Adding type registration blob -> org.hibernate.type.BlobType@760f1081
2018-04-27 09:42:46 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@760f1081
2018-04-27 09:42:46 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@18c880ea
2018-04-27 09:42:46 -Adding type registration clob -> org.hibernate.type.ClobType@6c8efde4
2018-04-27 09:42:46 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6c8efde4
2018-04-27 09:42:46 -Adding type registration nclob -> org.hibernate.type.NClobType@6818fd48
2018-04-27 09:42:46 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6818fd48
2018-04-27 09:42:46 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@693f2213
2018-04-27 09:42:46 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6befbb12
2018-04-27 09:42:46 -Adding type registration serializable -> org.hibernate.type.SerializableType@10a907ec
2018-04-27 09:42:46 -Adding type registration object -> org.hibernate.type.ObjectType@35e74e08
2018-04-27 09:42:46 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35e74e08
2018-04-27 09:42:46 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e17442f
2018-04-27 09:42:46 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f5c30b1
2018-04-27 09:42:46 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62e73ab6
2018-04-27 09:42:46 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d7f8467
2018-04-27 09:42:46 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@29bd85db
2018-04-27 09:42:46 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7caf1e5
2018-04-27 09:42:46 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5c234920
2018-04-27 09:42:46 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ddeb27f
2018-04-27 09:42:46 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 09:42:46 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 09:42:46 -JDBC version : 4.0
2018-04-27 09:42:46 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 09:42:46 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 09:42:46 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:42:46 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 09:42:46 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 09:42:46 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 09:42:46 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:42:46 -Import with entity name Role
2018-04-27 09:42:46 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:42:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 09:42:46 -building SimpleValue for id
2018-04-27 09:42:46 -Building property id
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:42:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 09:42:46 -building SimpleValue for name
2018-04-27 09:42:46 -Building property name
2018-04-27 09:42:46 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 09:42:46 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:42:46 -Import with entity name Department
2018-04-27 09:42:46 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:42:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 09:42:46 -building SimpleValue for id
2018-04-27 09:42:46 -Building property id
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:42:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 09:42:46 -building SimpleValue for name
2018-04-27 09:42:46 -Building property name
2018-04-27 09:42:46 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 09:42:46 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:42:46 -Import with entity name User
2018-04-27 09:42:46 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:42:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 09:42:46 -building SimpleValue for id
2018-04-27 09:42:46 -Building property id
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 09:42:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 09:42:46 -building SimpleValue for createDate
2018-04-27 09:42:46 -Building property createDate
2018-04-27 09:42:46 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -Building property department
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -MetadataSourceProcessor property email with lazy=false
2018-04-27 09:42:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 09:42:46 -building SimpleValue for email
2018-04-27 09:42:46 -Building property email
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:42:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 09:42:46 -building SimpleValue for name
2018-04-27 09:42:46 -Building property name
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -MetadataSourceProcessor property password with lazy=false
2018-04-27 09:42:46 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 09:42:46 -building SimpleValue for password
2018-04-27 09:42:46 -Building property password
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 09:42:46 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 09:42:46 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 09:42:46 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 09:42:46 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 09:42:46 -Building property roles
2018-04-27 09:42:46 -Starting fillSimpleValue for id
2018-04-27 09:42:46 -Starting fillSimpleValue for name
2018-04-27 09:42:46 -Starting fillSimpleValue for id
2018-04-27 09:42:46 -Starting fillSimpleValue for name
2018-04-27 09:42:46 -Starting fillSimpleValue for id
2018-04-27 09:42:46 -Starting fillSimpleValue for createDate
2018-04-27 09:42:46 -Starting fillSimpleValue for email
2018-04-27 09:42:46 -Starting fillSimpleValue for name
2018-04-27 09:42:46 -Starting fillSimpleValue for password
2018-04-27 09:42:46 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 09:42:46 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 09:42:46 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 09:42:46 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:42:46 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 09:42:46 -Mapped collection key: user_id, element: role_id
2018-04-27 09:42:46 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:42:46 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:42:46 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:42:46 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:42:46 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:42:46 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:42:46 -Building session factory
2018-04-27 09:42:46 -SessionFactory name : null
2018-04-27 09:42:46 -Automatic flush during beforeCompletion(): enabled
2018-04-27 09:42:46 -Automatic session close at end of transaction: disabled
2018-04-27 09:42:46 -Statistics: disabled
2018-04-27 09:42:46 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 09:42:46 -Default entity-mode: pojo
2018-04-27 09:42:46 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 09:42:46 -Allow initialization of lazy state outside session : disabled
2018-04-27 09:42:46 -Using BatchFetchStyle : LEGACY
2018-04-27 09:42:46 -Default batch fetch size: -1
2018-04-27 09:42:46 -Maximum outer join fetch depth: 2
2018-04-27 09:42:46 -Default null ordering: NONE
2018-04-27 09:42:46 -Order SQL updates by primary key: disabled
2018-04-27 09:42:46 -Order SQL inserts for batching: disabled
2018-04-27 09:42:46 -multi-tenancy strategy : NONE
2018-04-27 09:42:46 -JTA Track by Thread: enabled
2018-04-27 09:42:46 -Query language substitutions: {}
2018-04-27 09:42:46 -JPA query language strict compliance: disabled
2018-04-27 09:42:46 -Named query checking : enabled
2018-04-27 09:42:46 -Second-level cache: enabled
2018-04-27 09:42:46 -Second-level query cache: disabled
2018-04-27 09:42:46 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1fb6b8fb
2018-04-27 09:42:46 -Second-level cache region prefix: null
2018-04-27 09:42:46 -Optimize second-level cache for minimal puts: disabled
2018-04-27 09:42:46 -Structured second-level cache entries: disabled
2018-04-27 09:42:46 -Second-level cache direct-reference entries: disabled
2018-04-27 09:42:46 -Automatic eviction of collection cache: disabled
2018-04-27 09:42:46 -JDBC batch size: 15
2018-04-27 09:42:46 -JDBC batch updates for versioned data: enabled
2018-04-27 09:42:46 -Scrollable result sets: enabled
2018-04-27 09:42:46 -Wrap result sets: disabled
2018-04-27 09:42:46 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 09:42:46 -JDBC result set fetch size: null
2018-04-27 09:42:46 -Connection release mode: ON_CLOSE
2018-04-27 09:42:46 -Generate SQL with comments: disabled
2018-04-27 09:42:46 -Session factory constructed with filter configurations : {}
2018-04-27 09:42:46 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.example.ren.DemoApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3dfe59d7, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, spring.output.ansi.enabled=always, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, catalina.home=C:\Users\Qiang\AppData\Local\Temp\tomcat.7439614738262220122.8080, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=17904, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\Qiang\AppData\Local\Temp\tomcat.7439614738262220122.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1be8c122, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 09:42:45",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:1602880207, ConnectTime:"2018-04-27 09:42:46", UseCount:2, LastActiveTime:"2018-04-27 09:42:46"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 09:42:46 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:42:46 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:42:46 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:42:46 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:42:46 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:42:46 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:42:46 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:42:46 -Loaded expression factory via original TCCL
2018-04-27 09:42:46 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:42:46 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:42:46 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:42:46 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:42:46 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:42:46 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:42:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:42:46 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:42:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:42:46 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:42:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:42:46 -Skipping JACC integration as it was not enabled
2018-04-27 09:42:46 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 09:42:46 -Instantiated session factory
2018-04-27 09:42:46 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:42:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:42:46 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:42:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:42:46 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:42:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:42:46 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:42:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:42:46 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:42:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:42:46 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:42:46 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:42:46 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:42:46 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 09:42:46 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 09:42:46 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 09:42:46 - One-shot delete: delete from user_role where user_id=?
2018-04-27 09:42:46 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 09:42:46 - Version select: select id from role where id =?
2018-04-27 09:42:46 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 09:42:46 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 09:42:46 - Update 0: update role set name=? where id=?
2018-04-27 09:42:46 - Delete 0: delete from role where id=?
2018-04-27 09:42:46 - Identity insert: insert into role (name) values (?)
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ac685ef]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@428eb3d5]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fd5d679]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d065e1a]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dbbdf92]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b786dc]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48d5ca17]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c31e410]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6febec41]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e8afdad]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3722f39d]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:42:47 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:42:47 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:42:47 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 09:42:47 - Version select: select id from department where id =?
2018-04-27 09:42:47 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 09:42:47 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 09:42:47 - Update 0: update department set name=? where id=?
2018-04-27 09:42:47 - Delete 0: delete from department where id=?
2018-04-27 09:42:47 - Identity insert: insert into department (name) values (?)
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@131c0b6f]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68d8ae27]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6be50b35]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2166c48a]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73385d3f]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc1fd31]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4449a60b]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d7d8911]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ffe3d42]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7df3da0b]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70777a65]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:42:47 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:42:47 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:42:47 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 09:42:47 - Version select: select id from user where id =?
2018-04-27 09:42:47 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 09:42:47 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 09:42:47 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 09:42:47 - Delete 0: delete from user where id=?
2018-04-27 09:42:47 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@402f61f5]
2018-04-27 09:42:47 -Visiting attribute path : createDate
2018-04-27 09:42:47 -Visiting attribute path : department
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5315266]
2018-04-27 09:42:47 -Visiting attribute path : department.name
2018-04-27 09:42:47 -Visiting attribute path : email
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Visiting attribute path : password
2018-04-27 09:42:47 -Visiting attribute path : roles
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5072e638]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64665781]
2018-04-27 09:42:47 -Visiting attribute path : roles.name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e91facf]
2018-04-27 09:42:47 -Visiting attribute path : createDate
2018-04-27 09:42:47 -Visiting attribute path : department
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bf0f70a]
2018-04-27 09:42:47 -Visiting attribute path : department.name
2018-04-27 09:42:47 -Visiting attribute path : email
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Visiting attribute path : password
2018-04-27 09:42:47 -Visiting attribute path : roles
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52d63b7e]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74830d73]
2018-04-27 09:42:47 -Visiting attribute path : roles.name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2faf6e4a]
2018-04-27 09:42:47 -Visiting attribute path : createDate
2018-04-27 09:42:47 -Visiting attribute path : department
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@644947ee]
2018-04-27 09:42:47 -Visiting attribute path : email
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Visiting attribute path : password
2018-04-27 09:42:47 -Visiting attribute path : roles
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25421809]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@714bffd5]
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac9b66b]
2018-04-27 09:42:47 -Visiting attribute path : createDate
2018-04-27 09:42:47 -Visiting attribute path : department
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71262020]
2018-04-27 09:42:47 -Visiting attribute path : email
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Visiting attribute path : password
2018-04-27 09:42:47 -Visiting attribute path : roles
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f3ddc86]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78e043e4]
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@336d28a1]
2018-04-27 09:42:47 -Visiting attribute path : createDate
2018-04-27 09:42:47 -Visiting attribute path : department
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42e202d7]
2018-04-27 09:42:47 -Visiting attribute path : email
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Visiting attribute path : password
2018-04-27 09:42:47 -Visiting attribute path : roles
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38e7860c]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62158991]
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40738846]
2018-04-27 09:42:47 -Visiting attribute path : createDate
2018-04-27 09:42:47 -Visiting attribute path : department
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1686ed85]
2018-04-27 09:42:47 -Visiting attribute path : email
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Visiting attribute path : password
2018-04-27 09:42:47 -Visiting attribute path : roles
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5891b7c5]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fc3529]
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38e46765]
2018-04-27 09:42:47 -Visiting attribute path : createDate
2018-04-27 09:42:47 -Visiting attribute path : department
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cd5fc46]
2018-04-27 09:42:47 -Visiting attribute path : email
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Visiting attribute path : password
2018-04-27 09:42:47 -Visiting attribute path : roles
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2965dd88]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3221588e]
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51141f64]
2018-04-27 09:42:47 -Visiting attribute path : createDate
2018-04-27 09:42:47 -Visiting attribute path : department
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35ceec81]
2018-04-27 09:42:47 -Visiting attribute path : email
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Visiting attribute path : password
2018-04-27 09:42:47 -Visiting attribute path : roles
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d13379e]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8df667]
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@498e41a4]
2018-04-27 09:42:47 -Visiting attribute path : createDate
2018-04-27 09:42:47 -Visiting attribute path : department
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f5d7fd5]
2018-04-27 09:42:47 -Visiting attribute path : email
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Visiting attribute path : password
2018-04-27 09:42:47 -Visiting attribute path : roles
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cf08c97]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37c87fcc]
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ca2be53]
2018-04-27 09:42:47 -Visiting attribute path : createDate
2018-04-27 09:42:47 -Visiting attribute path : department
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70697478]
2018-04-27 09:42:47 -Visiting attribute path : email
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Visiting attribute path : password
2018-04-27 09:42:47 -Visiting attribute path : roles
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42b43a6]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d622556]
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b9f7edc]
2018-04-27 09:42:47 -Visiting attribute path : createDate
2018-04-27 09:42:47 -Visiting attribute path : department
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e0652ab]
2018-04-27 09:42:47 -Visiting attribute path : email
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Visiting attribute path : password
2018-04-27 09:42:47 -Visiting attribute path : roles
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22c29aa8]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@129b69b2]
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:42:47 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:42:47 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:42:47 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39f93225]
2018-04-27 09:42:47 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24b3f778]
2018-04-27 09:42:47 -Visiting attribute path : name
2018-04-27 09:42:47 -Building LoadPlan...
2018-04-27 09:42:47 -processing queryspace <gen:0>
2018-04-27 09:42:47 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 09:42:47 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 09:42:47 -No alter strings for table : department
2018-04-27 09:42:47 -No alter strings for table : role
2018-04-27 09:42:47 -No alter strings for table : user
2018-04-27 09:42:47 -No alter strings for table : user_role
2018-04-27 09:42:47 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 09:42:47 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 09:42:47 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 09:42:47 -Checking 0 named HQL queries
2018-04-27 09:42:47 -Checking 0 named SQL queries
2018-04-27 09:42:47 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1c792107
2018-04-27 09:42:47 -Registering SessionFactory: 96ded7f3-1b0b-4d56-bd7f-462721bfaf5b (<unnamed>)
2018-04-27 09:42:47 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 09:42:47 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:42:47 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:42:47 -Statistics initialized [enabled=false]
2018-04-27 09:42:47 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@521c67f0
2018-04-27 09:42:47 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 09:42:47 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:42:47 -throwQueryException() : no errors
2018-04-27 09:42:47 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 09:42:47 -select << begin [level=1, statement=select]
2018-04-27 09:42:47 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:42:47 -Resolved : t -> user0_.id
2018-04-27 09:42:47 -Resolved : t -> user0_.id
2018-04-27 09:42:47 -getDataType() : name -> org.hibernate.type.StringType@6d874695
2018-04-27 09:42:47 -Resolved : t.name -> user0_.name
2018-04-27 09:42:47 -select : finishing up [level=1, statement=select]
2018-04-27 09:42:47 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 09:42:47 -Using FROM fragment [user user0_]
2018-04-27 09:42:47 -select >> end [level=1, statement=select]
2018-04-27 09:42:47 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@6d874695}

2018-04-27 09:42:47 -throwQueryException() : no errors
2018-04-27 09:42:47 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:42:47 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 09:42:47 -throwQueryException() : no errors
2018-04-27 09:42:47 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:42:47 -throwQueryException() : no errors
2018-04-27 09:42:47 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 09:42:47 -select << begin [level=1, statement=select]
2018-04-27 09:42:47 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:42:47 -Resolved : t -> user0_.id
2018-04-27 09:42:47 -Resolved : t -> user0_.id
2018-04-27 09:42:47 -getDataType() : name -> org.hibernate.type.StringType@6d874695
2018-04-27 09:42:47 -Resolved : t.name -> user0_.name
2018-04-27 09:42:47 -Resolved : t -> user0_.id
2018-04-27 09:42:47 -getDataType() : email -> org.hibernate.type.StringType@6d874695
2018-04-27 09:42:47 -Resolved : t.email -> user0_.email
2018-04-27 09:42:47 -select : finishing up [level=1, statement=select]
2018-04-27 09:42:47 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 09:42:47 -Using FROM fragment [user user0_]
2018-04-27 09:42:47 -select >> end [level=1, statement=select]
2018-04-27 09:42:47 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@6d874695}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@6d874695}

2018-04-27 09:42:47 -throwQueryException() : no errors
2018-04-27 09:42:47 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:42:47 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 09:42:47 -throwQueryException() : no errors
2018-04-27 09:42:47 -Using SLF4J as the default logging framework
2018-04-27 09:42:47 --Dio.netty.eventLoopThreads: 4
2018-04-27 09:42:47 --Dio.netty.leakDetection.level: simple
2018-04-27 09:42:47 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 09:42:47 -Platform: Windows
2018-04-27 09:42:47 --Dio.netty.noUnsafe: false
2018-04-27 09:42:47 -Java version: 8
2018-04-27 09:42:47 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 09:42:47 -sun.misc.Unsafe.copyMemory: available
2018-04-27 09:42:47 -java.nio.Buffer.address: available
2018-04-27 09:42:47 -direct buffer constructor: available
2018-04-27 09:42:47 -java.nio.Bits.unaligned: available, true
2018-04-27 09:42:47 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 09:42:47 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 09:42:47 -sun.misc.Unsafe: available
2018-04-27 09:42:47 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 09:42:47 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 09:42:47 --Dio.netty.noPreferDirect: false
2018-04-27 09:42:47 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 09:42:47 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 09:42:47 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 09:42:47 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@121dce2
2018-04-27 09:42:47 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 09:42:47 -Using Slf4j logging framework
2018-04-27 09:42:47 -Starting UnsafeSupport init in Java 1.8
2018-04-27 09:42:47 -Unsafe is available
2018-04-27 09:42:47 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 09:42:48 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 09:42:48 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 09:42:48 --Dio.netty.allocator.pageSize: 8192
2018-04-27 09:42:48 --Dio.netty.allocator.maxOrder: 11
2018-04-27 09:42:48 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 09:42:48 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 09:42:48 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 09:42:48 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 09:42:48 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 09:42:48 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 09:42:48 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 09:42:48 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 09:42:48 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:42:48 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:42:48 -Neo4jMappingContext initialisation completed
2018-04-27 09:42:48 -Neo4jMappingContext initialisation completed
2018-04-27 09:42:48 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:42:48 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:42:48 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:42:48 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:42:49 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 09:42:49 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 09:42:49 -Opened connection [connectionId{localValue:1, serverValue:13}] to 192.168.71.151:27017
2018-04-27 09:42:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:42:49 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3490225}
2018-04-27 09:42:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.5 ms, state=CONNECTED}]
2018-04-27 09:42:49 -Opened connection [connectionId{localValue:2, serverValue:14}] to 192.168.71.151:27017
2018-04-27 09:42:49 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:14}] to server 192.168.71.151:27017
2018-04-27 09:42:49 -Command execution completed
2018-04-27 09:42:49 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:42:49 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:42:49 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:42:49 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:42:49 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:42:49 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:42:49 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:42:49 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:42:49 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:42:49 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:42:49 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:42:49 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:42:49 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:42:49 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:42:49 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:42:49 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:42:49 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:42:49 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:42:49 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:42:49 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:42:49 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:42:49 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:42:49 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:42:49 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:42:49 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:42:49 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:42:49 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:42:49 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:42:49 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:42:49 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:42:49 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:42:49 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:42:49 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:42:49 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:42:49 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:42:49 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:42:49 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:42:49 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:42:49 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:42:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:42:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:42:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:42:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:42:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:42:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:42:49 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:42:49 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:42:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:42:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:42:50 -init trackerLocator [192.168.71.161:22122]
2018-04-27 09:42:50 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:42:50 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:42:50 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:42:50 -Loaded expression factory via original TCCL
2018-04-27 09:42:50 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:42:50 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:42:50 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:42:50 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:42:50 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:42:50 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:42:50 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:42:50 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:42:50 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:42:50 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:42:50 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:42:50 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:42:50 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:42:50 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:42:50 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:42:50 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:42:50 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a3bc7ed: startup date [Fri Apr 27 09:42:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:42:50 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a3bc7ed: startup date [Fri Apr 27 09:42:41 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:42:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:42:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:42:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:42:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:42:50 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:42:50 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:42:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:42:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:42:51 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:42:51 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:42:51 -Registering beans for JMX exposure on startup
2018-04-27 09:42:51 -Registering beans for JMX exposure on startup
2018-04-27 09:42:51 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:42:51 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:42:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:42:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:42:51 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:42:51 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:42:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:42:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:42:51 -Starting beans in phase 2147483647
2018-04-27 09:42:51 -Starting beans in phase 2147483647
2018-04-27 09:42:51 -Context refreshed
2018-04-27 09:42:51 -Context refreshed
2018-04-27 09:42:51 -Found 1 custom documentation plugin(s)
2018-04-27 09:42:51 -Found 1 custom documentation plugin(s)
2018-04-27 09:42:51 -Scanning for api listing references
2018-04-27 09:42:51 -Scanning for api listing references
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:42:51 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Generating unique operation named: createUsingGET_1
2018-04-27 09:42:51 -Generating unique operation named: createUsingGET_1
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:51 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:42:52 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:42:52 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:42:52 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:42:52 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:42:52 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:42:52 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:42:52 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:42:52 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:42:52 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingGET_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingGET_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:42:52 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:42:52 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:42:52 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: showUsingGET_1
2018-04-27 09:42:52 -Generating unique operation named: showUsingGET_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:42:52 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:42:52 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:42:52 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:42:52 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:42:52 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:42:52 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:42:52 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:42:52 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:42:52 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:42:52 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:42:52 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:42:52 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:42:52 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:42:52 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:42:52 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:42:52 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:42:52 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:42:52 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:42:52 -Starting ProtocolHandler ["http-nio-8080"]
2018-04-27 09:42:52 -Using a shared selector for servlet write/read
2018-04-27 09:42:52 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:42:52 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:42:52 -Started DemoApplication in 11.365 seconds (JVM running for 12.088)
2018-04-27 09:42:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:42:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.5 ms, state=CONNECTED}]
2018-04-27 09:43:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:43:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.0 ms, state=CONNECTED}]
2018-04-27 09:43:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:43:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.6 ms, state=CONNECTED}]
2018-04-27 09:43:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:43:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 09:43:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:43:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 09:43:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:43:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 09:43:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-27 09:43:51 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:43:51 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:43:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-04-27 09:43:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2018-04-27 09:43:54 -null
java.lang.NullPointerException: null
	at com.example.ren.utils.FastdfsClient.uploadFile(FastdfsClient.java:25)
	at com.example.ren.controller.fastdfs.FastdfsController.upload(FastdfsController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-27 09:43:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:43:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:44:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:44:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:44:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:44:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:44:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:44:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:44:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:44:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:44:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:44:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:44:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:44:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:45:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:45:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:45:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:45:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:45:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:45:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:45:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:45:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:45:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:45:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:45:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:45:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:46:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:46:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:46:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:46:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:46:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:46:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:46:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:46:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:46:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:46:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:46:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:46:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:47:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:47:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:47:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:47:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:47:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:47:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:47:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:47:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:47:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:47:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:47:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:47:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:48:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:48:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:48:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:48:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:48:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:48:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:48:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:48:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:48:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:48:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:48:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:48:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:49:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:49:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:49:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:49:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:49:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:49:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:49:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:49:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:49:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:49:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:49:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:49:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:50:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:50:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:50:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:50:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 09:50:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:50:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 09:50:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:50:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:50:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:50:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:50:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:50:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:51:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:51:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:51:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:51:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:51:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:51:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:51:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:51:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:51:50 -Starting DemoApplication on DESKTOP-4VE2VST with PID 17424 (Y:\MyGit\demo\target\classes started by Qiang in Y:\MyGit\demo)
2018-04-27 09:51:50 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 09:51:50 -The following profiles are active: dev
2018-04-27 09:51:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@413f69cc: startup date [Fri Apr 27 09:51:50 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:51:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@413f69cc: startup date [Fri Apr 27 09:51:50 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:51:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:51:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:51:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:51:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:51:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:51:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:51:51 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:51:51 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:51:51 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:51:51 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:51:51 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:51:51 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:51:51 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:51:51 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:51:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:51:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:51:51 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:51:51 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:51:51 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:51:51 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:51:51 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:51:51 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:51:51 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:51:51 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:51:52 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:51:52 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:51:52 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:51:52 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:51:52 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:51:52 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:51:52 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:51:52 -Loaded expression factory via original TCCL
2018-04-27 09:51:52 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:51:52 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:51:52 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:51:52 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:51:52 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:51:52 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:51:52 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:51:52 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:51:52 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:51:52 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:51:52 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:51:52 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:51:52 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:51:52 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:51:52 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:51:52 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:51:52 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$3c2c3933] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$3c2c3933] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5914d1b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5914d1b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$2cef24c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$2cef24c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 09:51:52 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 09:51:52 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 09:51:52 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 09:51:52 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 09:51:52 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 09:51:52 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 09:51:52 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 09:51:52 -Starting Post-processing phase
2018-04-27 09:51:52 -Building annotation class map
2018-04-27 09:51:52 -Building interface class map for 8 classes
2018-04-27 09:51:52 - - Actor implements 0 interfaces
2018-04-27 09:51:52 - - Role implements 1 interfaces
2018-04-27 09:51:52 -   - java.io.Serializable
2018-04-27 09:51:52 - - MongoUser implements 0 interfaces
2018-04-27 09:51:52 - - Role implements 0 interfaces
2018-04-27 09:51:52 - - Movie implements 0 interfaces
2018-04-27 09:51:52 - - Department implements 0 interfaces
2018-04-27 09:51:52 - - BookBean implements 0 interfaces
2018-04-27 09:51:52 - - User implements 1 interfaces
2018-04-27 09:51:52 -   - java.io.Serializable
2018-04-27 09:51:52 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 09:51:52 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 09:51:52 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:51:52 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 09:51:52 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 09:51:52 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 09:51:52 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 09:51:52 -Post-processing: com.example.ren.model.BookBean
2018-04-27 09:51:52 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 09:51:52 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:51:52 -Checking for @Transient classes....
2018-04-27 09:51:52 -Registering converters and deregistering transient fields and methods....
2018-04-27 09:51:52 -Post-processing complete
2018-04-27 09:51:52 -Building Index Metadata.
2018-04-27 09:51:52 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:52 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:51:53 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:51:53 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:51:53 -Initializing ProtocolHandler ["http-nio-8080"]
2018-04-27 09:51:53 -Starting service [Tomcat]
2018-04-27 09:51:53 -Starting Servlet Engine: Apache Tomcat/8.5.28
2018-04-27 09:51:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;.]
2018-04-27 09:51:53 -Initializing Spring embedded WebApplicationContext
2018-04-27 09:51:53 -Root WebApplicationContext: initialization completed in 3721 ms
2018-04-27 09:51:53 -Root WebApplicationContext: initialization completed in 3721 ms
2018-04-27 09:51:54 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:51:54 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:51:54 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:51:54 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:51:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:51:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:51:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:51:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:51:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:51:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:51:54 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:51:54 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:51:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:51:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:51:54 -{dataSource-1} inited
2018-04-27 09:51:54 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:51:54 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:51:54 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 09:51:54",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:1231493271, ConnectTime:"2018-04-27 09:51:54", UseCount:1, LastActiveTime:"2018-04-27 09:51:54"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 09:51:54 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 09:51:54 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 09:51:54 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 09:51:54 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 09:51:54 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 09:51:54 -HHH000206: hibernate.properties not found
2018-04-27 09:51:54 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 09:51:54 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 09:51:54 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 09:51:54 -Adding type registration boolean -> org.hibernate.type.BooleanType@191ec193
2018-04-27 09:51:54 -Adding type registration boolean -> org.hibernate.type.BooleanType@191ec193
2018-04-27 09:51:54 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@191ec193
2018-04-27 09:51:54 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@57ce2898
2018-04-27 09:51:54 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@7af327e3
2018-04-27 09:51:54 -Adding type registration yes_no -> org.hibernate.type.YesNoType@ef86c72
2018-04-27 09:51:54 -Adding type registration byte -> org.hibernate.type.ByteType@48f2054d
2018-04-27 09:51:54 -Adding type registration byte -> org.hibernate.type.ByteType@48f2054d
2018-04-27 09:51:54 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48f2054d
2018-04-27 09:51:54 -Adding type registration character -> org.hibernate.type.CharacterType@6d6cd1e0
2018-04-27 09:51:54 -Adding type registration char -> org.hibernate.type.CharacterType@6d6cd1e0
2018-04-27 09:51:54 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d6cd1e0
2018-04-27 09:51:54 -Adding type registration short -> org.hibernate.type.ShortType@11e71181
2018-04-27 09:51:54 -Adding type registration short -> org.hibernate.type.ShortType@11e71181
2018-04-27 09:51:54 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11e71181
2018-04-27 09:51:54 -Adding type registration integer -> org.hibernate.type.IntegerType@2a99ca99
2018-04-27 09:51:54 -Adding type registration int -> org.hibernate.type.IntegerType@2a99ca99
2018-04-27 09:51:54 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a99ca99
2018-04-27 09:51:54 -Adding type registration long -> org.hibernate.type.LongType@25ce435
2018-04-27 09:51:54 -Adding type registration long -> org.hibernate.type.LongType@25ce435
2018-04-27 09:51:54 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@25ce435
2018-04-27 09:51:54 -Adding type registration float -> org.hibernate.type.FloatType@62ea8931
2018-04-27 09:51:54 -Adding type registration float -> org.hibernate.type.FloatType@62ea8931
2018-04-27 09:51:54 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@62ea8931
2018-04-27 09:51:54 -Adding type registration double -> org.hibernate.type.DoubleType@10ed037a
2018-04-27 09:51:54 -Adding type registration double -> org.hibernate.type.DoubleType@10ed037a
2018-04-27 09:51:54 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@10ed037a
2018-04-27 09:51:54 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@700b9e6b
2018-04-27 09:51:54 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@700b9e6b
2018-04-27 09:51:54 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@649b5891
2018-04-27 09:51:54 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@649b5891
2018-04-27 09:51:54 -Adding type registration string -> org.hibernate.type.StringType@2315052d
2018-04-27 09:51:54 -Adding type registration java.lang.String -> org.hibernate.type.StringType@2315052d
2018-04-27 09:51:54 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@53a301f3
2018-04-27 09:51:54 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bec3e0
2018-04-27 09:51:54 -Adding type registration url -> org.hibernate.type.UrlType@582a3b19
2018-04-27 09:51:54 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@582a3b19
2018-04-27 09:51:54 -Adding type registration Duration -> org.hibernate.type.DurationType@49754e74
2018-04-27 09:51:54 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@49754e74
2018-04-27 09:51:54 -Adding type registration Instant -> org.hibernate.type.InstantType@7c71c889
2018-04-27 09:51:54 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c71c889
2018-04-27 09:51:54 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@70fede7d
2018-04-27 09:51:54 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@70fede7d
2018-04-27 09:51:54 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@19526f1d
2018-04-27 09:51:54 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@19526f1d
2018-04-27 09:51:54 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@d36c1c3
2018-04-27 09:51:54 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@d36c1c3
2018-04-27 09:51:54 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70f148dc
2018-04-27 09:51:54 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70f148dc
2018-04-27 09:51:54 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@573aeab2
2018-04-27 09:51:54 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@573aeab2
2018-04-27 09:51:54 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b0902b4
2018-04-27 09:51:54 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5b0902b4
2018-04-27 09:51:54 -Adding type registration date -> org.hibernate.type.DateType@2b79c8ff
2018-04-27 09:51:54 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b79c8ff
2018-04-27 09:51:54 -Adding type registration time -> org.hibernate.type.TimeType@c97721b
2018-04-27 09:51:54 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c97721b
2018-04-27 09:51:54 -Adding type registration timestamp -> org.hibernate.type.TimestampType@69f080ad
2018-04-27 09:51:54 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@69f080ad
2018-04-27 09:51:54 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@69f080ad
2018-04-27 09:51:54 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1537c744
2018-04-27 09:51:54 -Adding type registration calendar -> org.hibernate.type.CalendarType@414b2df5
2018-04-27 09:51:54 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@414b2df5
2018-04-27 09:51:54 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@414b2df5
2018-04-27 09:51:54 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2d70f312
2018-04-27 09:51:54 -Adding type registration locale -> org.hibernate.type.LocaleType@5fe46d52
2018-04-27 09:51:54 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5fe46d52
2018-04-27 09:51:54 -Adding type registration currency -> org.hibernate.type.CurrencyType@2aa5bd48
2018-04-27 09:51:54 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2aa5bd48
2018-04-27 09:51:54 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@3030836d
2018-04-27 09:51:54 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3030836d
2018-04-27 09:51:54 -Adding type registration class -> org.hibernate.type.ClassType@27c53c32
2018-04-27 09:51:54 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@27c53c32
2018-04-27 09:51:54 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@69d103f0
2018-04-27 09:51:54 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@69d103f0
2018-04-27 09:51:54 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@722531ab
2018-04-27 09:51:54 -Adding type registration binary -> org.hibernate.type.BinaryType@6bce4140
2018-04-27 09:51:54 -Adding type registration byte[] -> org.hibernate.type.BinaryType@6bce4140
2018-04-27 09:51:54 -Adding type registration [B -> org.hibernate.type.BinaryType@6bce4140
2018-04-27 09:51:54 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@18cf5c52
2018-04-27 09:51:54 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@18cf5c52
2018-04-27 09:51:54 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@18cf5c52
2018-04-27 09:51:54 -Adding type registration row_version -> org.hibernate.type.RowVersionType@6f96dd64
2018-04-27 09:51:54 -Adding type registration image -> org.hibernate.type.ImageType@63917fe1
2018-04-27 09:51:54 -Adding type registration characters -> org.hibernate.type.CharArrayType@2b7facc7
2018-04-27 09:51:54 -Adding type registration char[] -> org.hibernate.type.CharArrayType@2b7facc7
2018-04-27 09:51:54 -Adding type registration [C -> org.hibernate.type.CharArrayType@2b7facc7
2018-04-27 09:51:54 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@49b89425
2018-04-27 09:51:54 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@49b89425
2018-04-27 09:51:54 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@49b89425
2018-04-27 09:51:54 -Adding type registration text -> org.hibernate.type.TextType@760f1081
2018-04-27 09:51:54 -Adding type registration ntext -> org.hibernate.type.NTextType@14457a95
2018-04-27 09:51:54 -Adding type registration blob -> org.hibernate.type.BlobType@5e9bf744
2018-04-27 09:51:54 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e9bf744
2018-04-27 09:51:54 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4ae8fb2a
2018-04-27 09:51:54 -Adding type registration clob -> org.hibernate.type.ClobType@799f354a
2018-04-27 09:51:54 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@799f354a
2018-04-27 09:51:54 -Adding type registration nclob -> org.hibernate.type.NClobType@45287377
2018-04-27 09:51:54 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45287377
2018-04-27 09:51:54 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@35e74e08
2018-04-27 09:51:54 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e17442f
2018-04-27 09:51:54 -Adding type registration serializable -> org.hibernate.type.SerializableType@5d9d2119
2018-04-27 09:51:54 -Adding type registration object -> org.hibernate.type.ObjectType@3f6c2763
2018-04-27 09:51:54 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f6c2763
2018-04-27 09:51:54 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2a484710
2018-04-27 09:51:54 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@661e1399
2018-04-27 09:51:54 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3ffd4b12
2018-04-27 09:51:54 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@424f02b8
2018-04-27 09:51:54 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ad7bd26
2018-04-27 09:51:54 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3cc3f13e
2018-04-27 09:51:54 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@69b3886f
2018-04-27 09:51:54 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53d30d23
2018-04-27 09:51:54 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 09:51:54 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 09:51:54 -JDBC version : 4.0
2018-04-27 09:51:55 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 09:51:55 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 09:51:55 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:51:55 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 09:51:55 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 09:51:55 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 09:51:55 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:51:55 -Import with entity name Role
2018-04-27 09:51:55 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:51:55 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 09:51:55 -building SimpleValue for id
2018-04-27 09:51:55 -Building property id
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:51:55 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 09:51:55 -building SimpleValue for name
2018-04-27 09:51:55 -Building property name
2018-04-27 09:51:55 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 09:51:55 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:51:55 -Import with entity name Department
2018-04-27 09:51:55 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:51:55 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 09:51:55 -building SimpleValue for id
2018-04-27 09:51:55 -Building property id
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:51:55 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 09:51:55 -building SimpleValue for name
2018-04-27 09:51:55 -Building property name
2018-04-27 09:51:55 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 09:51:55 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:51:55 -Import with entity name User
2018-04-27 09:51:55 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:51:55 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 09:51:55 -building SimpleValue for id
2018-04-27 09:51:55 -Building property id
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 09:51:55 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 09:51:55 -building SimpleValue for createDate
2018-04-27 09:51:55 -Building property createDate
2018-04-27 09:51:55 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -Building property department
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -MetadataSourceProcessor property email with lazy=false
2018-04-27 09:51:55 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 09:51:55 -building SimpleValue for email
2018-04-27 09:51:55 -Building property email
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:51:55 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 09:51:55 -building SimpleValue for name
2018-04-27 09:51:55 -Building property name
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -MetadataSourceProcessor property password with lazy=false
2018-04-27 09:51:55 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 09:51:55 -building SimpleValue for password
2018-04-27 09:51:55 -Building property password
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 09:51:55 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 09:51:55 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 09:51:55 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 09:51:55 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 09:51:55 -Building property roles
2018-04-27 09:51:55 -Starting fillSimpleValue for id
2018-04-27 09:51:55 -Starting fillSimpleValue for name
2018-04-27 09:51:55 -Starting fillSimpleValue for id
2018-04-27 09:51:55 -Starting fillSimpleValue for name
2018-04-27 09:51:55 -Starting fillSimpleValue for id
2018-04-27 09:51:55 -Starting fillSimpleValue for createDate
2018-04-27 09:51:55 -Starting fillSimpleValue for email
2018-04-27 09:51:55 -Starting fillSimpleValue for name
2018-04-27 09:51:55 -Starting fillSimpleValue for password
2018-04-27 09:51:55 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 09:51:55 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 09:51:55 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 09:51:55 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:51:55 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 09:51:55 -Mapped collection key: user_id, element: role_id
2018-04-27 09:51:55 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:51:55 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:51:55 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:51:55 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:51:55 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:51:55 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:51:55 -Building session factory
2018-04-27 09:51:55 -SessionFactory name : null
2018-04-27 09:51:55 -Automatic flush during beforeCompletion(): enabled
2018-04-27 09:51:55 -Automatic session close at end of transaction: disabled
2018-04-27 09:51:55 -Statistics: disabled
2018-04-27 09:51:55 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 09:51:55 -Default entity-mode: pojo
2018-04-27 09:51:55 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 09:51:55 -Allow initialization of lazy state outside session : disabled
2018-04-27 09:51:55 -Using BatchFetchStyle : LEGACY
2018-04-27 09:51:55 -Default batch fetch size: -1
2018-04-27 09:51:55 -Maximum outer join fetch depth: 2
2018-04-27 09:51:55 -Default null ordering: NONE
2018-04-27 09:51:55 -Order SQL updates by primary key: disabled
2018-04-27 09:51:55 -Order SQL inserts for batching: disabled
2018-04-27 09:51:55 -multi-tenancy strategy : NONE
2018-04-27 09:51:55 -JTA Track by Thread: enabled
2018-04-27 09:51:55 -Query language substitutions: {}
2018-04-27 09:51:55 -JPA query language strict compliance: disabled
2018-04-27 09:51:55 -Named query checking : enabled
2018-04-27 09:51:55 -Second-level cache: enabled
2018-04-27 09:51:55 -Second-level query cache: disabled
2018-04-27 09:51:55 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@44084713
2018-04-27 09:51:55 -Second-level cache region prefix: null
2018-04-27 09:51:55 -Optimize second-level cache for minimal puts: disabled
2018-04-27 09:51:55 -Structured second-level cache entries: disabled
2018-04-27 09:51:55 -Second-level cache direct-reference entries: disabled
2018-04-27 09:51:55 -Automatic eviction of collection cache: disabled
2018-04-27 09:51:55 -JDBC batch size: 15
2018-04-27 09:51:55 -JDBC batch updates for versioned data: enabled
2018-04-27 09:51:55 -Scrollable result sets: enabled
2018-04-27 09:51:55 -Wrap result sets: disabled
2018-04-27 09:51:55 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 09:51:55 -JDBC result set fetch size: null
2018-04-27 09:51:55 -Connection release mode: ON_CLOSE
2018-04-27 09:51:55 -Generate SQL with comments: disabled
2018-04-27 09:51:55 -Session factory constructed with filter configurations : {}
2018-04-27 09:51:55 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.example.ren.DemoApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@77bb916f, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, spring.output.ansi.enabled=always, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, catalina.home=C:\Users\Qiang\AppData\Local\Temp\tomcat.225310594712345808.8080, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=17424, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\Qiang\AppData\Local\Temp\tomcat.225310594712345808.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5a48d186, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 09:51:54",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:1231493271, ConnectTime:"2018-04-27 09:51:54", UseCount:2, LastActiveTime:"2018-04-27 09:51:55"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 09:51:55 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:51:55 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:51:55 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:51:55 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:51:55 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:51:55 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:51:55 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:51:55 -Loaded expression factory via original TCCL
2018-04-27 09:51:55 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:51:55 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:51:55 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:51:55 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:51:55 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:51:55 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:51:55 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:51:55 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:51:55 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:51:55 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:51:55 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:51:55 -Skipping JACC integration as it was not enabled
2018-04-27 09:51:55 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 09:51:55 -Instantiated session factory
2018-04-27 09:51:55 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:51:55 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:51:55 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:51:55 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:51:55 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:51:55 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:51:55 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:51:55 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:51:55 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:51:55 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:51:55 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:51:55 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:51:55 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:51:55 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 09:51:55 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 09:51:55 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 09:51:55 - One-shot delete: delete from user_role where user_id=?
2018-04-27 09:51:55 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 09:51:55 - Version select: select id from role where id =?
2018-04-27 09:51:55 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 09:51:55 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 09:51:55 - Update 0: update role set name=? where id=?
2018-04-27 09:51:55 - Delete 0: delete from role where id=?
2018-04-27 09:51:55 - Identity insert: insert into role (name) values (?)
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cc93da4]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ffcb232]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5feb82b3]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37cf91d8]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54e0f76f]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7462ba4b]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18811c42]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b95de]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@165aa43a]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d977a20]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76134b9b]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:51:55 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:51:55 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:51:55 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 09:51:55 - Version select: select id from department where id =?
2018-04-27 09:51:55 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 09:51:55 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 09:51:55 - Update 0: update department set name=? where id=?
2018-04-27 09:51:55 - Delete 0: delete from department where id=?
2018-04-27 09:51:55 - Identity insert: insert into department (name) values (?)
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@160c7c42]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5503c7d]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ec0ca83]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7827d7b]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7a9db7]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11cc9e1e]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b0e9e0c]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21ea1d9d]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a58466]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9147ba2]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2efcc0b3]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:51:55 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:51:55 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:51:55 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 09:51:55 - Version select: select id from user where id =?
2018-04-27 09:51:55 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 09:51:55 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 09:51:55 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 09:51:55 - Delete 0: delete from user where id=?
2018-04-27 09:51:55 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60a6840c]
2018-04-27 09:51:55 -Visiting attribute path : createDate
2018-04-27 09:51:55 -Visiting attribute path : department
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24018c8b]
2018-04-27 09:51:55 -Visiting attribute path : department.name
2018-04-27 09:51:55 -Visiting attribute path : email
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Visiting attribute path : password
2018-04-27 09:51:55 -Visiting attribute path : roles
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e4f2300]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e8f0f98]
2018-04-27 09:51:55 -Visiting attribute path : roles.name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78f5cbc5]
2018-04-27 09:51:55 -Visiting attribute path : createDate
2018-04-27 09:51:55 -Visiting attribute path : department
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42b43a6]
2018-04-27 09:51:55 -Visiting attribute path : department.name
2018-04-27 09:51:55 -Visiting attribute path : email
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Visiting attribute path : password
2018-04-27 09:51:55 -Visiting attribute path : roles
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b9f7edc]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70ee1963]
2018-04-27 09:51:55 -Visiting attribute path : roles.name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@129b69b2]
2018-04-27 09:51:55 -Visiting attribute path : createDate
2018-04-27 09:51:55 -Visiting attribute path : department
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb1d475]
2018-04-27 09:51:55 -Visiting attribute path : email
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Visiting attribute path : password
2018-04-27 09:51:55 -Visiting attribute path : roles
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@389008d1]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@718f3088]
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11adab6d]
2018-04-27 09:51:55 -Visiting attribute path : createDate
2018-04-27 09:51:55 -Visiting attribute path : department
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29519337]
2018-04-27 09:51:55 -Visiting attribute path : email
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Visiting attribute path : password
2018-04-27 09:51:55 -Visiting attribute path : roles
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2152fde5]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d58dc61]
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32328dc4]
2018-04-27 09:51:55 -Visiting attribute path : createDate
2018-04-27 09:51:55 -Visiting attribute path : department
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21540255]
2018-04-27 09:51:55 -Visiting attribute path : email
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Visiting attribute path : password
2018-04-27 09:51:55 -Visiting attribute path : roles
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a7469ca]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c8e8fed]
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70f98f7a]
2018-04-27 09:51:55 -Visiting attribute path : createDate
2018-04-27 09:51:55 -Visiting attribute path : department
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@681d704e]
2018-04-27 09:51:55 -Visiting attribute path : email
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Visiting attribute path : password
2018-04-27 09:51:55 -Visiting attribute path : roles
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@846b47]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c3ab672]
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6acec2]
2018-04-27 09:51:55 -Visiting attribute path : createDate
2018-04-27 09:51:55 -Visiting attribute path : department
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e8bccfb]
2018-04-27 09:51:55 -Visiting attribute path : email
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Visiting attribute path : password
2018-04-27 09:51:55 -Visiting attribute path : roles
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77eb607e]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f1fbc9f]
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d4b573]
2018-04-27 09:51:55 -Visiting attribute path : createDate
2018-04-27 09:51:55 -Visiting attribute path : department
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c3c3d67]
2018-04-27 09:51:55 -Visiting attribute path : email
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Visiting attribute path : password
2018-04-27 09:51:55 -Visiting attribute path : roles
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e258d3b]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b6fcca1]
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39f93225]
2018-04-27 09:51:55 -Visiting attribute path : createDate
2018-04-27 09:51:55 -Visiting attribute path : department
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@164dea80]
2018-04-27 09:51:55 -Visiting attribute path : email
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Visiting attribute path : password
2018-04-27 09:51:55 -Visiting attribute path : roles
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4392362c]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338a4c61]
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@839755f]
2018-04-27 09:51:55 -Visiting attribute path : createDate
2018-04-27 09:51:55 -Visiting attribute path : department
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2328ec73]
2018-04-27 09:51:55 -Visiting attribute path : email
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Visiting attribute path : password
2018-04-27 09:51:55 -Visiting attribute path : roles
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42a05533]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17053b5]
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cad24ae]
2018-04-27 09:51:55 -Visiting attribute path : createDate
2018-04-27 09:51:55 -Visiting attribute path : department
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18cbc3c2]
2018-04-27 09:51:55 -Visiting attribute path : email
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Visiting attribute path : password
2018-04-27 09:51:55 -Visiting attribute path : roles
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b25d695]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ef8090b]
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:51:55 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:51:55 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:51:55 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5df7a065]
2018-04-27 09:51:55 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f45dfec]
2018-04-27 09:51:55 -Visiting attribute path : name
2018-04-27 09:51:55 -Building LoadPlan...
2018-04-27 09:51:55 -processing queryspace <gen:0>
2018-04-27 09:51:55 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 09:51:55 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 09:51:55 -No alter strings for table : department
2018-04-27 09:51:55 -No alter strings for table : role
2018-04-27 09:51:55 -No alter strings for table : user
2018-04-27 09:51:55 -No alter strings for table : user_role
2018-04-27 09:51:55 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 09:51:56 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 09:51:56 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 09:51:56 -Checking 0 named HQL queries
2018-04-27 09:51:56 -Checking 0 named SQL queries
2018-04-27 09:51:56 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@25dcf1b6
2018-04-27 09:51:56 -Registering SessionFactory: 844fc3e8-83f7-4288-ac51-a26af7a57d3f (<unnamed>)
2018-04-27 09:51:56 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 09:51:56 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:51:56 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:51:56 -init trackerLocator [192.168.71.161:22122]
2018-04-27 09:51:56 -Statistics initialized [enabled=false]
2018-04-27 09:51:56 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4c4215d7
2018-04-27 09:51:56 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 09:51:56 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:51:56 -throwQueryException() : no errors
2018-04-27 09:51:56 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 09:51:56 -select << begin [level=1, statement=select]
2018-04-27 09:51:56 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:51:56 -Resolved : t -> user0_.id
2018-04-27 09:51:56 -Resolved : t -> user0_.id
2018-04-27 09:51:56 -getDataType() : name -> org.hibernate.type.StringType@2315052d
2018-04-27 09:51:56 -Resolved : t.name -> user0_.name
2018-04-27 09:51:56 -select : finishing up [level=1, statement=select]
2018-04-27 09:51:56 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 09:51:56 -Using FROM fragment [user user0_]
2018-04-27 09:51:56 -select >> end [level=1, statement=select]
2018-04-27 09:51:56 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@2315052d}

2018-04-27 09:51:56 -throwQueryException() : no errors
2018-04-27 09:51:56 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:51:56 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 09:51:56 -throwQueryException() : no errors
2018-04-27 09:51:56 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:51:56 -throwQueryException() : no errors
2018-04-27 09:51:56 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 09:51:56 -select << begin [level=1, statement=select]
2018-04-27 09:51:56 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:51:56 -Resolved : t -> user0_.id
2018-04-27 09:51:56 -Resolved : t -> user0_.id
2018-04-27 09:51:56 -getDataType() : name -> org.hibernate.type.StringType@2315052d
2018-04-27 09:51:56 -Resolved : t.name -> user0_.name
2018-04-27 09:51:56 -Resolved : t -> user0_.id
2018-04-27 09:51:56 -getDataType() : email -> org.hibernate.type.StringType@2315052d
2018-04-27 09:51:56 -Resolved : t.email -> user0_.email
2018-04-27 09:51:56 -select : finishing up [level=1, statement=select]
2018-04-27 09:51:56 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 09:51:56 -Using FROM fragment [user user0_]
2018-04-27 09:51:56 -select >> end [level=1, statement=select]
2018-04-27 09:51:56 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@2315052d}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@2315052d}

2018-04-27 09:51:56 -throwQueryException() : no errors
2018-04-27 09:51:56 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:51:56 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 09:51:56 -throwQueryException() : no errors
2018-04-27 09:51:56 -Using SLF4J as the default logging framework
2018-04-27 09:51:56 --Dio.netty.eventLoopThreads: 4
2018-04-27 09:51:56 --Dio.netty.leakDetection.level: simple
2018-04-27 09:51:56 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 09:51:56 -Platform: Windows
2018-04-27 09:51:56 --Dio.netty.noUnsafe: false
2018-04-27 09:51:56 -Java version: 8
2018-04-27 09:51:56 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 09:51:56 -sun.misc.Unsafe.copyMemory: available
2018-04-27 09:51:56 -java.nio.Buffer.address: available
2018-04-27 09:51:56 -direct buffer constructor: available
2018-04-27 09:51:56 -java.nio.Bits.unaligned: available, true
2018-04-27 09:51:56 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 09:51:56 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 09:51:56 -sun.misc.Unsafe: available
2018-04-27 09:51:56 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 09:51:56 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 09:51:56 --Dio.netty.noPreferDirect: false
2018-04-27 09:51:56 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 09:51:56 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 09:51:56 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 09:51:56 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@e67d3b7
2018-04-27 09:51:56 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 09:51:56 -Using Slf4j logging framework
2018-04-27 09:51:56 -Starting UnsafeSupport init in Java 1.8
2018-04-27 09:51:56 -Unsafe is available
2018-04-27 09:51:56 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 09:51:56 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 09:51:56 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 09:51:56 --Dio.netty.allocator.pageSize: 8192
2018-04-27 09:51:56 --Dio.netty.allocator.maxOrder: 11
2018-04-27 09:51:56 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 09:51:56 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 09:51:56 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 09:51:56 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 09:51:56 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 09:51:56 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 09:51:56 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 09:51:56 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 09:51:56 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:51:57 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:51:57 -Neo4jMappingContext initialisation completed
2018-04-27 09:51:57 -Neo4jMappingContext initialisation completed
2018-04-27 09:51:57 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:51:57 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:51:57 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:51:57 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:51:58 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 09:51:58 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 09:51:58 -Opened connection [connectionId{localValue:1, serverValue:15}] to 192.168.71.151:27017
2018-04-27 09:51:58 -Checking status of 192.168.71.151:27017
2018-04-27 09:51:58 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3946670}
2018-04-27 09:51:58 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.9 ms, state=CONNECTED}]
2018-04-27 09:51:58 -Opened connection [connectionId{localValue:2, serverValue:16}] to 192.168.71.151:27017
2018-04-27 09:51:58 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:16}] to server 192.168.71.151:27017
2018-04-27 09:51:58 -Command execution completed
2018-04-27 09:51:59 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:51:59 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:51:59 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:51:59 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:51:59 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:51:59 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:51:59 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:51:59 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:51:59 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:51:59 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:51:59 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:51:59 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:51:59 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:51:59 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:51:59 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:51:59 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:51:59 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:51:59 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:51:59 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:51:59 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:51:59 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:51:59 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:51:59 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:51:59 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:51:59 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:51:59 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:51:59 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:51:59 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:51:59 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:51:59 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:51:59 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:51:59 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:51:59 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:51:59 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:51:59 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:51:59 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:51:59 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:51:59 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:51:59 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:51:59 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:51:59 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:51:59 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:51:59 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:51:59 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:51:59 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:51:59 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:51:59 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:51:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:51:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:51:59 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:51:59 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:51:59 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:51:59 -Loaded expression factory via original TCCL
2018-04-27 09:51:59 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:51:59 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:51:59 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:51:59 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:51:59 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:51:59 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:51:59 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:51:59 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:51:59 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:51:59 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:51:59 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:51:59 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:51:59 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:51:59 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:51:59 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:51:59 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:51:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@413f69cc: startup date [Fri Apr 27 09:51:50 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:51:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@413f69cc: startup date [Fri Apr 27 09:51:50 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:51:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:51:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:51:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:51:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:51:59 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:51:59 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:51:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:51:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:52:00 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:52:00 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:52:00 -Registering beans for JMX exposure on startup
2018-04-27 09:52:00 -Registering beans for JMX exposure on startup
2018-04-27 09:52:00 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:52:00 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:52:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:52:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:52:00 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:52:00 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:52:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:52:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:52:00 -Starting beans in phase 2147483647
2018-04-27 09:52:00 -Starting beans in phase 2147483647
2018-04-27 09:52:00 -Context refreshed
2018-04-27 09:52:00 -Context refreshed
2018-04-27 09:52:00 -Found 1 custom documentation plugin(s)
2018-04-27 09:52:00 -Found 1 custom documentation plugin(s)
2018-04-27 09:52:00 -Scanning for api listing references
2018-04-27 09:52:00 -Scanning for api listing references
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:52:01 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: createUsingGET_1
2018-04-27 09:52:01 -Generating unique operation named: createUsingGET_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:52:01 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:52:01 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:52:01 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:52:01 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:52:01 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:52:01 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:52:01 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:52:01 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:52:01 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingGET_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingGET_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:52:01 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:52:01 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:52:01 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: showUsingGET_1
2018-04-27 09:52:01 -Generating unique operation named: showUsingGET_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:52:01 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:52:01 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:52:01 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:52:01 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:52:01 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:52:01 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:52:01 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:52:01 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:52:01 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:52:01 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:52:01 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:52:01 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:52:01 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:52:01 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:52:01 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:52:01 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:52:01 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:52:01 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:52:01 -Starting ProtocolHandler ["http-nio-8080"]
2018-04-27 09:52:01 -Using a shared selector for servlet write/read
2018-04-27 09:52:01 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:52:01 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:52:01 -Started DemoApplication in 12.235 seconds (JVM running for 13.089)
2018-04-27 09:52:08 -Checking status of 192.168.71.151:27017
2018-04-27 09:52:08 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.4 ms, state=CONNECTED}]
2018-04-27 09:52:18 -Checking status of 192.168.71.151:27017
2018-04-27 09:52:18 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 09:52:28 -Checking status of 192.168.71.151:27017
2018-04-27 09:52:28 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.6 ms, state=CONNECTED}]
2018-04-27 09:52:38 -Checking status of 192.168.71.151:27017
2018-04-27 09:52:38 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 09:52:48 -Checking status of 192.168.71.151:27017
2018-04-27 09:52:48 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 09:52:58 -Checking status of 192.168.71.151:27017
2018-04-27 09:52:58 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 09:52:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-27 09:52:58 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:52:58 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 09:52:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-04-27 09:52:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2018-04-27 09:53:01 -获取到Tracker连接地址/192.168.71.161:22122
2018-04-27 09:53:01 -connect to /192.168.71.161:22122 soTimeout=1501 connectTimeout=601
2018-04-27 09:53:01 -对地址/192.168.71.161:22122发出交易请求TrackerGetStoreStorageCommand
2018-04-27 09:53:01 -发出交易请求..报文头为ProtoHead [contentLength=0, cmd=101, status=0]
2018-04-27 09:53:01 -交易参数为[]
2018-04-27 09:53:01 -服务端返回报文头ProtoHead [contentLength=40, cmd=100, status=0]
2018-04-27 09:53:01 -dump class=com.github.tobato.fastdfs.domain.StorageNode
2018-04-27 09:53:01 -----------------------------------------
2018-04-27 09:53:01 -FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]
2018-04-27 09:53:01 -FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]
2018-04-27 09:53:01 -FieldMateData [field=port, index=2, max=0, size=8, offsize=31]
2018-04-27 09:53:01 -FieldMateData [field=storeIndex, index=3, max=0, size=1, offsize=39]
2018-04-27 09:53:01 -设置值是 FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]group1
2018-04-27 09:53:01 -Setting default value: false
2018-04-27 09:53:01 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 09:53:01 -    No conversion required, value is already a Boolean
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 09:53:01 -    Converted to Byte value '0'
2018-04-27 09:53:01 -Setting default value:  
2018-04-27 09:53:01 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 09:53:01 -    No conversion required, value is already a Character
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 09:53:01 -    Converted to Double value '0.0'
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 09:53:01 -    Converted to Float value '0.0'
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 09:53:01 -    No conversion required, value is already a Integer
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 09:53:01 -    Converted to Long value '0'
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 09:53:01 -    Converted to Short value '0'
2018-04-27 09:53:01 -Setting default value: 0.0
2018-04-27 09:53:01 -Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2018-04-27 09:53:01 -    No conversion required, value is already a BigDecimal
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'BigInteger' value '0' to type 'BigInteger'
2018-04-27 09:53:01 -    No conversion required, value is already a BigInteger
2018-04-27 09:53:01 -Setting default value: false
2018-04-27 09:53:01 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 09:53:01 -    No conversion required, value is already a Boolean
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 09:53:01 -    Converted to Byte value '0'
2018-04-27 09:53:01 -Setting default value:  
2018-04-27 09:53:01 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 09:53:01 -    No conversion required, value is already a Character
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 09:53:01 -    Converted to Double value '0.0'
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 09:53:01 -    Converted to Float value '0.0'
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 09:53:01 -    No conversion required, value is already a Integer
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 09:53:01 -    Converted to Long value '0'
2018-04-27 09:53:01 -Setting default value: 0
2018-04-27 09:53:01 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 09:53:01 -    Converted to Short value '0'
2018-04-27 09:53:01 -Setting default value: 
2018-04-27 09:53:01 -Converting 'String' value '' to type 'String'
2018-04-27 09:53:01 -Setting default value: [Z@584af43a
2018-04-27 09:53:01 -Converting 'boolean[]' value '[Z@584af43a' to type 'boolean[]'
2018-04-27 09:53:01 -    No conversion required, value is already a boolean[]
2018-04-27 09:53:01 -Setting default value: [B@6d8c5765
2018-04-27 09:53:01 -Converting 'byte[]' value '[B@6d8c5765' to type 'byte[]'
2018-04-27 09:53:01 -    No conversion required, value is already a byte[]
2018-04-27 09:53:01 -Setting default value: [C@1545c92c
2018-04-27 09:53:01 -Converting 'char[]' value '[C@1545c92c' to type 'char[]'
2018-04-27 09:53:01 -    No conversion required, value is already a char[]
2018-04-27 09:53:01 -Setting default value: [D@15e39b2e
2018-04-27 09:53:01 -Converting 'double[]' value '[D@15e39b2e' to type 'double[]'
2018-04-27 09:53:01 -    No conversion required, value is already a double[]
2018-04-27 09:53:01 -Setting default value: [F@1a07468c
2018-04-27 09:53:01 -Converting 'float[]' value '[F@1a07468c' to type 'float[]'
2018-04-27 09:53:01 -    No conversion required, value is already a float[]
2018-04-27 09:53:01 -Setting default value: [I@15bf1dd6
2018-04-27 09:53:01 -Converting 'int[]' value '[I@15bf1dd6' to type 'int[]'
2018-04-27 09:53:01 -    No conversion required, value is already a int[]
2018-04-27 09:53:01 -Setting default value: [J@2e88bae4
2018-04-27 09:53:01 -Converting 'long[]' value '[J@2e88bae4' to type 'long[]'
2018-04-27 09:53:01 -    No conversion required, value is already a long[]
2018-04-27 09:53:01 -Setting default value: [S@273b6ef0
2018-04-27 09:53:01 -Converting 'short[]' value '[S@273b6ef0' to type 'short[]'
2018-04-27 09:53:01 -    No conversion required, value is already a short[]
2018-04-27 09:53:01 -Setting default value: [Ljava.math.BigDecimal;@7a86fbd
2018-04-27 09:53:01 -Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@7a86fbd' to type 'BigDecimal[]'
2018-04-27 09:53:01 -    No conversion required, value is already a BigDecimal[]
2018-04-27 09:53:01 -Setting default value: [Ljava.math.BigInteger;@6a149333
2018-04-27 09:53:01 -Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@6a149333' to type 'BigInteger[]'
2018-04-27 09:53:01 -    No conversion required, value is already a BigInteger[]
2018-04-27 09:53:01 -Setting default value: [Ljava.lang.Boolean;@1204b0f
2018-04-27 09:53:01 -Converting 'Boolean[]' value '[Ljava.lang.Boolean;@1204b0f' to type 'Boolean[]'
2018-04-27 09:53:01 -    No conversion required, value is already a Boolean[]
2018-04-27 09:53:01 -Setting default value: [Ljava.lang.Byte;@7d10f935
2018-04-27 09:53:01 -Converting 'Byte[]' value '[Ljava.lang.Byte;@7d10f935' to type 'Byte[]'
2018-04-27 09:53:01 -    No conversion required, value is already a Byte[]
2018-04-27 09:53:01 -Setting default value: [Ljava.lang.Character;@3981b4ad
2018-04-27 09:53:01 -Converting 'Character[]' value '[Ljava.lang.Character;@3981b4ad' to type 'Character[]'
2018-04-27 09:53:01 -    No conversion required, value is already a Character[]
2018-04-27 09:53:01 -Setting default value: [Ljava.lang.Double;@774225a5
2018-04-27 09:53:01 -Converting 'Double[]' value '[Ljava.lang.Double;@774225a5' to type 'Double[]'
2018-04-27 09:53:01 -    No conversion required, value is already a Double[]
2018-04-27 09:53:01 -Setting default value: [Ljava.lang.Float;@74b97071
2018-04-27 09:53:01 -Converting 'Float[]' value '[Ljava.lang.Float;@74b97071' to type 'Float[]'
2018-04-27 09:53:01 -    No conversion required, value is already a Float[]
2018-04-27 09:53:01 -Setting default value: [Ljava.lang.Integer;@e1af682
2018-04-27 09:53:01 -Converting 'Integer[]' value '[Ljava.lang.Integer;@e1af682' to type 'Integer[]'
2018-04-27 09:53:01 -    No conversion required, value is already a Integer[]
2018-04-27 09:53:01 -Setting default value: [Ljava.lang.Long;@3a8a0f30
2018-04-27 09:53:01 -Converting 'Long[]' value '[Ljava.lang.Long;@3a8a0f30' to type 'Long[]'
2018-04-27 09:53:01 -    No conversion required, value is already a Long[]
2018-04-27 09:53:01 -Setting default value: [Ljava.lang.Short;@5c037ac9
2018-04-27 09:53:01 -Converting 'Short[]' value '[Ljava.lang.Short;@5c037ac9' to type 'Short[]'
2018-04-27 09:53:01 -    No conversion required, value is already a Short[]
2018-04-27 09:53:01 -Setting default value: [Ljava.lang.String;@6386b3c0
2018-04-27 09:53:01 -Converting 'String[]' value '[Ljava.lang.String;@6386b3c0' to type 'String[]'
2018-04-27 09:53:01 -    No conversion required, value is already a String[]
2018-04-27 09:53:01 -Setting default value: [Ljava.lang.Class;@3af1e7d4
2018-04-27 09:53:01 -Converting 'Class[]' value '[Ljava.lang.Class;@3af1e7d4' to type 'Class[]'
2018-04-27 09:53:01 -    No conversion required, value is already a Class[]
2018-04-27 09:53:01 -Setting default value: [Ljava.util.Date;@50e89c35
2018-04-27 09:53:01 -Converting 'Date[]' value '[Ljava.util.Date;@50e89c35' to type 'Date[]'
2018-04-27 09:53:01 -    No conversion required, value is already a Date[]
2018-04-27 09:53:01 -Setting default value: [Ljava.util.Calendar;@41b4d84f
2018-04-27 09:53:01 -Converting 'Calendar[]' value '[Ljava.util.Calendar;@41b4d84f' to type 'Calendar[]'
2018-04-27 09:53:01 -    No conversion required, value is already a Calendar[]
2018-04-27 09:53:01 -Setting default value: [Ljava.io.File;@60537b72
2018-04-27 09:53:01 -Converting 'java.io.File[]' value '[Ljava.io.File;@60537b72' to type 'java.io.File[]'
2018-04-27 09:53:01 -    No conversion required, value is already a java.io.File[]
2018-04-27 09:53:01 -Setting default value: [Ljava.sql.Date;@2463fa52
2018-04-27 09:53:01 -Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@2463fa52' to type 'java.sql.Date[]'
2018-04-27 09:53:01 -    No conversion required, value is already a java.sql.Date[]
2018-04-27 09:53:01 -Setting default value: [Ljava.sql.Time;@457d31ad
2018-04-27 09:53:01 -Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@457d31ad' to type 'java.sql.Time[]'
2018-04-27 09:53:01 -    No conversion required, value is already a java.sql.Time[]
2018-04-27 09:53:01 -Setting default value: [Ljava.sql.Timestamp;@5849662
2018-04-27 09:53:01 -Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@5849662' to type 'java.sql.Timestamp[]'
2018-04-27 09:53:01 -    No conversion required, value is already a java.sql.Timestamp[]
2018-04-27 09:53:01 -Setting default value: [Ljava.net.URL;@7b39265b
2018-04-27 09:53:01 -Converting 'java.net.URL[]' value '[Ljava.net.URL;@7b39265b' to type 'java.net.URL[]'
2018-04-27 09:53:01 -    No conversion required, value is already a java.net.URL[]
2018-04-27 09:53:01 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 09:53:01 -Converting 'String' value 'group1' to type 'String'
2018-04-27 09:53:01 -设置值是 FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]192.168.71.158
2018-04-27 09:53:01 -Convert string '192.168.71.158' to class 'java.lang.String'
2018-04-27 09:53:01 -Converting 'String' value '192.168.71.158' to type 'String'
2018-04-27 09:53:01 -设置值是 FieldMateData [field=port, index=2, max=0, size=8, offsize=31]23000
2018-04-27 09:53:01 -Converting 'Integer' value '23000' to type 'Integer'
2018-04-27 09:53:01 -    No conversion required, value is already a Integer
2018-04-27 09:53:01 -设置值是 FieldMateData [field=storeIndex, index=3, max=0, size=1, offsize=39]0
2018-04-27 09:53:01 -Converting 'Byte' value '0' to type 'Byte'
2018-04-27 09:53:01 -    No conversion required, value is already a Byte
2018-04-27 09:53:01 -connect to /192.168.71.158:23000 soTimeout=1501 connectTimeout=601
2018-04-27 09:53:01 -对地址/192.168.71.158:23000发出交易请求StorageUploadFileCommand
2018-04-27 09:53:01 -发出交易请求..报文头为ProtoHead [contentLength=57603, cmd=11, status=0]
2018-04-27 09:53:01 -交易参数为[0, 0, 0, 0, 0, 0, 0, -32, -12, 112, 110, 103, 0, 0, 0]
2018-04-27 09:53:01 -开始上传文件流大小为57588
2018-04-27 09:53:01 -剩余数据量0
2018-04-27 09:53:01 -服务端返回报文头ProtoHead [contentLength=60, cmd=100, status=0]
2018-04-27 09:53:01 -dump class=com.github.tobato.fastdfs.domain.StorePath
2018-04-27 09:53:01 -----------------------------------------
2018-04-27 09:53:01 -FieldMateData [field=group, index=0, max=16, size=16, offsize=0]
2018-04-27 09:53:01 -FieldMateData [field=path, index=1, max=0, size=0, offsize=16]
2018-04-27 09:53:01 -设置值是 FieldMateData [field=group, index=0, max=16, size=16, offsize=0]group1
2018-04-27 09:53:01 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 09:53:01 -Converting 'String' value 'group1' to type 'String'
2018-04-27 09:53:01 -设置值是 FieldMateData [field=path, index=1, max=0, size=0, offsize=16]M00/00/00/wKhHnlrigoCAPA8MAADg9OSIpuo194.png
2018-04-27 09:53:01 -Convert string 'M00/00/00/wKhHnlrigoCAPA8MAADg9OSIpuo194.png' to class 'java.lang.String'
2018-04-27 09:53:01 -Converting 'String' value 'M00/00/00/wKhHnlrigoCAPA8MAADg9OSIpuo194.png' to type 'String'
2018-04-27 09:53:08 -Checking status of 192.168.71.151:27017
2018-04-27 09:53:08 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:53:18 -Checking status of 192.168.71.151:27017
2018-04-27 09:53:18 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:53:28 -Checking status of 192.168.71.151:27017
2018-04-27 09:53:28 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:53:38 -Checking status of 192.168.71.151:27017
2018-04-27 09:53:38 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:53:48 -Checking status of 192.168.71.151:27017
2018-04-27 09:53:48 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:53:56 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@775865e7 
2018-04-27 09:53:56 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@20055156 
2018-04-27 09:53:58 -Checking status of 192.168.71.151:27017
2018-04-27 09:53:58 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:54:08 -Checking status of 192.168.71.151:27017
2018-04-27 09:54:08 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:54:18 -Checking status of 192.168.71.151:27017
2018-04-27 09:54:18 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:54:28 -Checking status of 192.168.71.151:27017
2018-04-27 09:54:28 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:54:38 -Checking status of 192.168.71.151:27017
2018-04-27 09:54:38 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:54:48 -Checking status of 192.168.71.151:27017
2018-04-27 09:54:48 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:54:56 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@775865e7 
2018-04-27 09:54:56 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@20055156 
2018-04-27 09:54:58 -Checking status of 192.168.71.151:27017
2018-04-27 09:54:58 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:55:08 -Checking status of 192.168.71.151:27017
2018-04-27 09:55:08 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 09:55:18 -Checking status of 192.168.71.151:27017
2018-04-27 09:55:18 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:55:31 -Starting DemoApplication on DESKTOP-4VE2VST with PID 9828 (Y:\MyGit\demo\target\classes started by Qiang in Y:\MyGit\demo)
2018-04-27 09:55:31 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 09:55:31 -The following profiles are active: dev
2018-04-27 09:55:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@291f18: startup date [Fri Apr 27 09:55:31 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:55:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@291f18: startup date [Fri Apr 27 09:55:31 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:55:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:55:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:55:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:55:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:55:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:55:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:55:33 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:55:33 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:55:33 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:55:33 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:55:33 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:55:33 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:55:33 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:55:33 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:55:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:55:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:55:33 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 09:55:34 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:55:34 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:55:34 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:55:34 -Loaded expression factory via original TCCL
2018-04-27 09:55:34 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:55:34 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:55:34 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:55:34 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:55:34 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:55:34 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:55:34 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:55:34 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:55:34 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:55:34 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:55:34 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:55:34 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:55:34 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:55:34 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:55:34 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:55:34 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:55:34 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$9e92ad68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$9e92ad68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb7b45ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb7b45ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$8f5598f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$8f5598f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 09:55:34 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 09:55:34 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 09:55:34 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 09:55:34 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 09:55:34 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 09:55:34 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 09:55:34 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 09:55:34 -Starting Post-processing phase
2018-04-27 09:55:34 -Building annotation class map
2018-04-27 09:55:34 -Building interface class map for 8 classes
2018-04-27 09:55:34 - - Actor implements 0 interfaces
2018-04-27 09:55:34 - - Role implements 1 interfaces
2018-04-27 09:55:34 -   - java.io.Serializable
2018-04-27 09:55:34 - - MongoUser implements 0 interfaces
2018-04-27 09:55:34 - - Role implements 0 interfaces
2018-04-27 09:55:34 - - Movie implements 0 interfaces
2018-04-27 09:55:34 - - Department implements 0 interfaces
2018-04-27 09:55:34 - - BookBean implements 0 interfaces
2018-04-27 09:55:34 - - User implements 1 interfaces
2018-04-27 09:55:34 -   - java.io.Serializable
2018-04-27 09:55:34 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 09:55:34 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 09:55:34 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:55:34 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 09:55:34 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 09:55:34 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 09:55:34 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 09:55:34 -Post-processing: com.example.ren.model.BookBean
2018-04-27 09:55:34 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 09:55:34 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 09:55:34 -Checking for @Transient classes....
2018-04-27 09:55:34 -Registering converters and deregistering transient fields and methods....
2018-04-27 09:55:34 -Post-processing complete
2018-04-27 09:55:34 -Building Index Metadata.
2018-04-27 09:55:34 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:34 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 09:55:35 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:55:35 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 09:55:35 -Initializing ProtocolHandler ["http-nio-8080"]
2018-04-27 09:55:35 -Starting service [Tomcat]
2018-04-27 09:55:35 -Starting Servlet Engine: Apache Tomcat/8.5.28
2018-04-27 09:55:35 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;.]
2018-04-27 09:55:35 -Initializing Spring embedded WebApplicationContext
2018-04-27 09:55:35 -Root WebApplicationContext: initialization completed in 3575 ms
2018-04-27 09:55:35 -Root WebApplicationContext: initialization completed in 3575 ms
2018-04-27 09:55:35 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:55:35 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 09:55:35 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:55:35 -Servlet dispatcherServlet mapped to [/]
2018-04-27 09:55:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:55:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 09:55:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:55:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 09:55:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:55:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 09:55:35 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:55:35 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 09:55:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:55:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 09:55:36 -{dataSource-1} inited
2018-04-27 09:55:36 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:55:36 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 09:55:36 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 09:55:35",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:1610593938, ConnectTime:"2018-04-27 09:55:36", UseCount:1, LastActiveTime:"2018-04-27 09:55:36"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 09:55:36 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 09:55:36 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 09:55:36 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 09:55:36 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 09:55:36 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 09:55:36 -HHH000206: hibernate.properties not found
2018-04-27 09:55:36 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 09:55:36 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 09:55:36 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 09:55:36 -Adding type registration boolean -> org.hibernate.type.BooleanType@377dfb8d
2018-04-27 09:55:36 -Adding type registration boolean -> org.hibernate.type.BooleanType@377dfb8d
2018-04-27 09:55:36 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@377dfb8d
2018-04-27 09:55:36 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40c8067
2018-04-27 09:55:36 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@30b3d899
2018-04-27 09:55:36 -Adding type registration yes_no -> org.hibernate.type.YesNoType@404ced67
2018-04-27 09:55:36 -Adding type registration byte -> org.hibernate.type.ByteType@5e193ef5
2018-04-27 09:55:36 -Adding type registration byte -> org.hibernate.type.ByteType@5e193ef5
2018-04-27 09:55:36 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5e193ef5
2018-04-27 09:55:36 -Adding type registration character -> org.hibernate.type.CharacterType@2017f6e6
2018-04-27 09:55:36 -Adding type registration char -> org.hibernate.type.CharacterType@2017f6e6
2018-04-27 09:55:36 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2017f6e6
2018-04-27 09:55:36 -Adding type registration short -> org.hibernate.type.ShortType@23e61112
2018-04-27 09:55:36 -Adding type registration short -> org.hibernate.type.ShortType@23e61112
2018-04-27 09:55:36 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@23e61112
2018-04-27 09:55:36 -Adding type registration integer -> org.hibernate.type.IntegerType@2c8b8de0
2018-04-27 09:55:36 -Adding type registration int -> org.hibernate.type.IntegerType@2c8b8de0
2018-04-27 09:55:36 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2c8b8de0
2018-04-27 09:55:36 -Adding type registration long -> org.hibernate.type.LongType@1de13f34
2018-04-27 09:55:36 -Adding type registration long -> org.hibernate.type.LongType@1de13f34
2018-04-27 09:55:36 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@1de13f34
2018-04-27 09:55:36 -Adding type registration float -> org.hibernate.type.FloatType@578c3fd9
2018-04-27 09:55:36 -Adding type registration float -> org.hibernate.type.FloatType@578c3fd9
2018-04-27 09:55:36 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@578c3fd9
2018-04-27 09:55:36 -Adding type registration double -> org.hibernate.type.DoubleType@70be89ec
2018-04-27 09:55:36 -Adding type registration double -> org.hibernate.type.DoubleType@70be89ec
2018-04-27 09:55:36 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70be89ec
2018-04-27 09:55:36 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@99a8de3
2018-04-27 09:55:36 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@99a8de3
2018-04-27 09:55:36 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6cdee57
2018-04-27 09:55:36 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6cdee57
2018-04-27 09:55:36 -Adding type registration string -> org.hibernate.type.StringType@6f3bd37f
2018-04-27 09:55:36 -Adding type registration java.lang.String -> org.hibernate.type.StringType@6f3bd37f
2018-04-27 09:55:36 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@20cff21e
2018-04-27 09:55:36 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6af87130
2018-04-27 09:55:36 -Adding type registration url -> org.hibernate.type.UrlType@30508066
2018-04-27 09:55:36 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@30508066
2018-04-27 09:55:36 -Adding type registration Duration -> org.hibernate.type.DurationType@73a845cb
2018-04-27 09:55:36 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@73a845cb
2018-04-27 09:55:36 -Adding type registration Instant -> org.hibernate.type.InstantType@4409cae6
2018-04-27 09:55:36 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4409cae6
2018-04-27 09:55:36 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@307cf964
2018-04-27 09:55:36 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@307cf964
2018-04-27 09:55:36 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a36c83a
2018-04-27 09:55:36 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a36c83a
2018-04-27 09:55:36 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@16f7f59f
2018-04-27 09:55:36 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@16f7f59f
2018-04-27 09:55:36 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6dd79214
2018-04-27 09:55:36 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6dd79214
2018-04-27 09:55:36 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9b2dc56
2018-04-27 09:55:36 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9b2dc56
2018-04-27 09:55:36 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76a9a009
2018-04-27 09:55:36 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76a9a009
2018-04-27 09:55:36 -Adding type registration date -> org.hibernate.type.DateType@7f0d8eff
2018-04-27 09:55:36 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f0d8eff
2018-04-27 09:55:36 -Adding type registration time -> org.hibernate.type.TimeType@73e1ecd0
2018-04-27 09:55:36 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@73e1ecd0
2018-04-27 09:55:36 -Adding type registration timestamp -> org.hibernate.type.TimestampType@7ec3a8bd
2018-04-27 09:55:36 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ec3a8bd
2018-04-27 09:55:36 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ec3a8bd
2018-04-27 09:55:36 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1a2e563e
2018-04-27 09:55:36 -Adding type registration calendar -> org.hibernate.type.CalendarType@3be3e76c
2018-04-27 09:55:36 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3be3e76c
2018-04-27 09:55:36 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3be3e76c
2018-04-27 09:55:36 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7faa0680
2018-04-27 09:55:36 -Adding type registration locale -> org.hibernate.type.LocaleType@489110c2
2018-04-27 09:55:36 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@489110c2
2018-04-27 09:55:36 -Adding type registration currency -> org.hibernate.type.CurrencyType@77c66a4f
2018-04-27 09:55:36 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77c66a4f
2018-04-27 09:55:36 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@51b87df7
2018-04-27 09:55:36 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@51b87df7
2018-04-27 09:55:36 -Adding type registration class -> org.hibernate.type.ClassType@4d81e83a
2018-04-27 09:55:36 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d81e83a
2018-04-27 09:55:36 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@42d9e8d2
2018-04-27 09:55:36 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@42d9e8d2
2018-04-27 09:55:36 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2616b618
2018-04-27 09:55:36 -Adding type registration binary -> org.hibernate.type.BinaryType@1eb9bf60
2018-04-27 09:55:36 -Adding type registration byte[] -> org.hibernate.type.BinaryType@1eb9bf60
2018-04-27 09:55:36 -Adding type registration [B -> org.hibernate.type.BinaryType@1eb9bf60
2018-04-27 09:55:36 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c59a0f7
2018-04-27 09:55:36 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c59a0f7
2018-04-27 09:55:36 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c59a0f7
2018-04-27 09:55:36 -Adding type registration row_version -> org.hibernate.type.RowVersionType@2c47a053
2018-04-27 09:55:36 -Adding type registration image -> org.hibernate.type.ImageType@26c7b1c6
2018-04-27 09:55:36 -Adding type registration characters -> org.hibernate.type.CharArrayType@68e5c7ae
2018-04-27 09:55:36 -Adding type registration char[] -> org.hibernate.type.CharArrayType@68e5c7ae
2018-04-27 09:55:36 -Adding type registration [C -> org.hibernate.type.CharArrayType@68e5c7ae
2018-04-27 09:55:36 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@437281c5
2018-04-27 09:55:36 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@437281c5
2018-04-27 09:55:36 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@437281c5
2018-04-27 09:55:36 -Adding type registration text -> org.hibernate.type.TextType@73e4bb60
2018-04-27 09:55:36 -Adding type registration ntext -> org.hibernate.type.NTextType@7767bd4e
2018-04-27 09:55:36 -Adding type registration blob -> org.hibernate.type.BlobType@2b79c8ff
2018-04-27 09:55:36 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b79c8ff
2018-04-27 09:55:36 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38cfecf3
2018-04-27 09:55:36 -Adding type registration clob -> org.hibernate.type.ClobType@407b8435
2018-04-27 09:55:36 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@407b8435
2018-04-27 09:55:36 -Adding type registration nclob -> org.hibernate.type.NClobType@418f0534
2018-04-27 09:55:36 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@418f0534
2018-04-27 09:55:36 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2aa5bd48
2018-04-27 09:55:36 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ec88aa1
2018-04-27 09:55:36 -Adding type registration serializable -> org.hibernate.type.SerializableType@6aff97d6
2018-04-27 09:55:36 -Adding type registration object -> org.hibernate.type.ObjectType@8f57e4c
2018-04-27 09:55:36 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@8f57e4c
2018-04-27 09:55:36 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1e92c3b6
2018-04-27 09:55:36 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ef4cbe1
2018-04-27 09:55:36 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@207dd1b7
2018-04-27 09:55:36 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2baac4a7
2018-04-27 09:55:36 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@23ad2d17
2018-04-27 09:55:36 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6bce4140
2018-04-27 09:55:36 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@25f0c5e7
2018-04-27 09:55:36 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5882b202
2018-04-27 09:55:36 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 09:55:36 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 09:55:36 -JDBC version : 4.0
2018-04-27 09:55:36 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 09:55:36 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 09:55:36 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 09:55:36 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 09:55:36 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 09:55:36 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 09:55:36 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:55:36 -Import with entity name Role
2018-04-27 09:55:36 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:55:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 09:55:36 -building SimpleValue for id
2018-04-27 09:55:36 -Building property id
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:55:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 09:55:36 -building SimpleValue for name
2018-04-27 09:55:36 -Building property name
2018-04-27 09:55:36 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 09:55:36 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:55:36 -Import with entity name Department
2018-04-27 09:55:36 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:55:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 09:55:36 -building SimpleValue for id
2018-04-27 09:55:36 -Building property id
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:55:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 09:55:36 -building SimpleValue for name
2018-04-27 09:55:36 -Building property name
2018-04-27 09:55:36 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 09:55:36 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 09:55:36 -Import with entity name User
2018-04-27 09:55:36 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -MetadataSourceProcessor property id with lazy=false
2018-04-27 09:55:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 09:55:36 -building SimpleValue for id
2018-04-27 09:55:36 -Building property id
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 09:55:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 09:55:36 -building SimpleValue for createDate
2018-04-27 09:55:36 -Building property createDate
2018-04-27 09:55:36 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -Building property department
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -MetadataSourceProcessor property email with lazy=false
2018-04-27 09:55:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 09:55:36 -building SimpleValue for email
2018-04-27 09:55:36 -Building property email
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -MetadataSourceProcessor property name with lazy=false
2018-04-27 09:55:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 09:55:36 -building SimpleValue for name
2018-04-27 09:55:36 -Building property name
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -MetadataSourceProcessor property password with lazy=false
2018-04-27 09:55:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 09:55:36 -building SimpleValue for password
2018-04-27 09:55:36 -Building property password
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 09:55:36 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 09:55:36 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 09:55:36 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 09:55:36 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 09:55:36 -Building property roles
2018-04-27 09:55:36 -Starting fillSimpleValue for id
2018-04-27 09:55:36 -Starting fillSimpleValue for name
2018-04-27 09:55:36 -Starting fillSimpleValue for id
2018-04-27 09:55:36 -Starting fillSimpleValue for name
2018-04-27 09:55:36 -Starting fillSimpleValue for id
2018-04-27 09:55:36 -Starting fillSimpleValue for createDate
2018-04-27 09:55:36 -Starting fillSimpleValue for email
2018-04-27 09:55:36 -Starting fillSimpleValue for name
2018-04-27 09:55:36 -Starting fillSimpleValue for password
2018-04-27 09:55:36 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 09:55:36 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 09:55:36 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 09:55:36 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:55:36 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 09:55:36 -Mapped collection key: user_id, element: role_id
2018-04-27 09:55:36 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:55:36 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:55:36 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:55:36 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 09:55:36 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 09:55:36 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 09:55:36 -Building session factory
2018-04-27 09:55:36 -SessionFactory name : null
2018-04-27 09:55:36 -Automatic flush during beforeCompletion(): enabled
2018-04-27 09:55:36 -Automatic session close at end of transaction: disabled
2018-04-27 09:55:36 -Statistics: disabled
2018-04-27 09:55:36 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 09:55:36 -Default entity-mode: pojo
2018-04-27 09:55:36 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 09:55:36 -Allow initialization of lazy state outside session : disabled
2018-04-27 09:55:36 -Using BatchFetchStyle : LEGACY
2018-04-27 09:55:36 -Default batch fetch size: -1
2018-04-27 09:55:36 -Maximum outer join fetch depth: 2
2018-04-27 09:55:36 -Default null ordering: NONE
2018-04-27 09:55:36 -Order SQL updates by primary key: disabled
2018-04-27 09:55:36 -Order SQL inserts for batching: disabled
2018-04-27 09:55:36 -multi-tenancy strategy : NONE
2018-04-27 09:55:36 -JTA Track by Thread: enabled
2018-04-27 09:55:36 -Query language substitutions: {}
2018-04-27 09:55:36 -JPA query language strict compliance: disabled
2018-04-27 09:55:36 -Named query checking : enabled
2018-04-27 09:55:36 -Second-level cache: enabled
2018-04-27 09:55:36 -Second-level query cache: disabled
2018-04-27 09:55:36 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6d7b2319
2018-04-27 09:55:36 -Second-level cache region prefix: null
2018-04-27 09:55:36 -Optimize second-level cache for minimal puts: disabled
2018-04-27 09:55:36 -Structured second-level cache entries: disabled
2018-04-27 09:55:36 -Second-level cache direct-reference entries: disabled
2018-04-27 09:55:36 -Automatic eviction of collection cache: disabled
2018-04-27 09:55:36 -JDBC batch size: 15
2018-04-27 09:55:36 -JDBC batch updates for versioned data: enabled
2018-04-27 09:55:36 -Scrollable result sets: enabled
2018-04-27 09:55:36 -Wrap result sets: disabled
2018-04-27 09:55:36 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 09:55:36 -JDBC result set fetch size: null
2018-04-27 09:55:36 -Connection release mode: ON_CLOSE
2018-04-27 09:55:36 -Generate SQL with comments: disabled
2018-04-27 09:55:37 -Session factory constructed with filter configurations : {}
2018-04-27 09:55:37 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.example.ren.DemoApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5408d4b3, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, spring.output.ansi.enabled=always, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, catalina.home=C:\Users\Qiang\AppData\Local\Temp\tomcat.8399222777264110543.8080, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=9828, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\Qiang\AppData\Local\Temp\tomcat.8399222777264110543.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@eded048, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 09:55:35",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:1610593938, ConnectTime:"2018-04-27 09:55:36", UseCount:2, LastActiveTime:"2018-04-27 09:55:36"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 09:55:37 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:55:37 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:55:37 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:55:37 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:55:37 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:55:37 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:55:37 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:55:37 -Loaded expression factory via original TCCL
2018-04-27 09:55:37 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:55:37 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:55:37 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:55:37 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:55:37 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:55:37 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:55:37 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:55:37 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:55:37 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:55:37 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:55:37 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:55:37 -Skipping JACC integration as it was not enabled
2018-04-27 09:55:37 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 09:55:37 -Instantiated session factory
2018-04-27 09:55:37 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:55:37 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:55:37 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 09:55:37 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 09:55:37 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:55:37 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:55:37 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 09:55:37 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 09:55:37 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:55:37 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:55:37 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 09:55:37 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 09:55:37 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 09:55:37 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 09:55:37 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 09:55:37 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 09:55:37 - One-shot delete: delete from user_role where user_id=?
2018-04-27 09:55:37 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 09:55:37 - Version select: select id from role where id =?
2018-04-27 09:55:37 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 09:55:37 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 09:55:37 - Update 0: update role set name=? where id=?
2018-04-27 09:55:37 - Delete 0: delete from role where id=?
2018-04-27 09:55:37 - Identity insert: insert into role (name) values (?)
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@671da0f9]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d90644f]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59f3426f]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cc8adff]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@280d5a82]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@333a44f2]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6efd0a6e]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30228de7]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e159116]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2976ca51]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6996bbc4]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:55:37 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:55:37 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 09:55:37 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 09:55:37 - Version select: select id from department where id =?
2018-04-27 09:55:37 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 09:55:37 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 09:55:37 - Update 0: update department set name=? where id=?
2018-04-27 09:55:37 - Delete 0: delete from department where id=?
2018-04-27 09:55:37 - Identity insert: insert into department (name) values (?)
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7645b7d]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ea84e01]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fd33f48]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@986b619]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c956dda]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24eecabf]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78d6c244]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16e907b6]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ec2bdc]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d132bb6]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225e09f0]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:55:37 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:55:37 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 09:55:37 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 09:55:37 - Version select: select id from user where id =?
2018-04-27 09:55:37 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 09:55:37 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 09:55:37 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 09:55:37 - Delete 0: delete from user where id=?
2018-04-27 09:55:37 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fa212df]
2018-04-27 09:55:37 -Visiting attribute path : createDate
2018-04-27 09:55:37 -Visiting attribute path : department
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1a9173]
2018-04-27 09:55:37 -Visiting attribute path : department.name
2018-04-27 09:55:37 -Visiting attribute path : email
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Visiting attribute path : password
2018-04-27 09:55:37 -Visiting attribute path : roles
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@571d0925]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d977a20]
2018-04-27 09:55:37 -Visiting attribute path : roles.name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ce7490a]
2018-04-27 09:55:37 -Visiting attribute path : createDate
2018-04-27 09:55:37 -Visiting attribute path : department
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1530d0f2]
2018-04-27 09:55:37 -Visiting attribute path : department.name
2018-04-27 09:55:37 -Visiting attribute path : email
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Visiting attribute path : password
2018-04-27 09:55:37 -Visiting attribute path : roles
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73da7f08]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@717a8a76]
2018-04-27 09:55:37 -Visiting attribute path : roles.name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f95272]
2018-04-27 09:55:37 -Visiting attribute path : createDate
2018-04-27 09:55:37 -Visiting attribute path : department
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1da53f4f]
2018-04-27 09:55:37 -Visiting attribute path : email
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Visiting attribute path : password
2018-04-27 09:55:37 -Visiting attribute path : roles
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e7eba9f]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df71be0]
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b841713]
2018-04-27 09:55:37 -Visiting attribute path : createDate
2018-04-27 09:55:37 -Visiting attribute path : department
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fee14b]
2018-04-27 09:55:37 -Visiting attribute path : email
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Visiting attribute path : password
2018-04-27 09:55:37 -Visiting attribute path : roles
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11c3d22f]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a54638b]
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d8f2eec]
2018-04-27 09:55:37 -Visiting attribute path : createDate
2018-04-27 09:55:37 -Visiting attribute path : department
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d585fb]
2018-04-27 09:55:37 -Visiting attribute path : email
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Visiting attribute path : password
2018-04-27 09:55:37 -Visiting attribute path : roles
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1884e671]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c7843c3]
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5158a9f7]
2018-04-27 09:55:37 -Visiting attribute path : createDate
2018-04-27 09:55:37 -Visiting attribute path : department
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4387d2f4]
2018-04-27 09:55:37 -Visiting attribute path : email
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Visiting attribute path : password
2018-04-27 09:55:37 -Visiting attribute path : roles
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1dbff71c]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@93ce24d]
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d949bc4]
2018-04-27 09:55:37 -Visiting attribute path : createDate
2018-04-27 09:55:37 -Visiting attribute path : department
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@121cf6f4]
2018-04-27 09:55:37 -Visiting attribute path : email
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Visiting attribute path : password
2018-04-27 09:55:37 -Visiting attribute path : roles
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cdc4070]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@553fbe94]
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6abe62bb]
2018-04-27 09:55:37 -Visiting attribute path : createDate
2018-04-27 09:55:37 -Visiting attribute path : department
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1218e12]
2018-04-27 09:55:37 -Visiting attribute path : email
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Visiting attribute path : password
2018-04-27 09:55:37 -Visiting attribute path : roles
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29c25bbc]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30704f85]
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b99c937]
2018-04-27 09:55:37 -Visiting attribute path : createDate
2018-04-27 09:55:37 -Visiting attribute path : department
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1de12397]
2018-04-27 09:55:37 -Visiting attribute path : email
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Visiting attribute path : password
2018-04-27 09:55:37 -Visiting attribute path : roles
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f5f5bc9]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aeaff64]
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@403f7aa2]
2018-04-27 09:55:37 -Visiting attribute path : createDate
2018-04-27 09:55:37 -Visiting attribute path : department
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1029cf9]
2018-04-27 09:55:37 -Visiting attribute path : email
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Visiting attribute path : password
2018-04-27 09:55:37 -Visiting attribute path : roles
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c0e4262]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27dfd12b]
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4348fa35]
2018-04-27 09:55:37 -Visiting attribute path : createDate
2018-04-27 09:55:37 -Visiting attribute path : department
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38cb1606]
2018-04-27 09:55:37 -Visiting attribute path : email
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Visiting attribute path : password
2018-04-27 09:55:37 -Visiting attribute path : roles
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61c4cebd]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655909e2]
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 09:55:37 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:55:37 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:55:37 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f49e81a]
2018-04-27 09:55:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b444b5]
2018-04-27 09:55:37 -Visiting attribute path : name
2018-04-27 09:55:37 -Building LoadPlan...
2018-04-27 09:55:37 -processing queryspace <gen:0>
2018-04-27 09:55:37 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 09:55:37 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 09:55:37 -No alter strings for table : department
2018-04-27 09:55:37 -No alter strings for table : role
2018-04-27 09:55:37 -No alter strings for table : user
2018-04-27 09:55:37 -No alter strings for table : user_role
2018-04-27 09:55:37 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 09:55:37 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 09:55:37 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 09:55:37 -Checking 0 named HQL queries
2018-04-27 09:55:37 -Checking 0 named SQL queries
2018-04-27 09:55:37 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@164dea80
2018-04-27 09:55:37 -Registering SessionFactory: 010fef9f-7f8f-41ba-9b90-3466cdeafcb0 (<unnamed>)
2018-04-27 09:55:37 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 09:55:37 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:55:37 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 09:55:37 -init trackerLocator [192.168.71.161:22122]
2018-04-27 09:55:38 -Statistics initialized [enabled=false]
2018-04-27 09:55:38 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@574218f
2018-04-27 09:55:38 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 09:55:38 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:55:38 -throwQueryException() : no errors
2018-04-27 09:55:38 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 09:55:38 -select << begin [level=1, statement=select]
2018-04-27 09:55:38 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:55:38 -Resolved : t -> user0_.id
2018-04-27 09:55:38 -Resolved : t -> user0_.id
2018-04-27 09:55:38 -getDataType() : name -> org.hibernate.type.StringType@6f3bd37f
2018-04-27 09:55:38 -Resolved : t.name -> user0_.name
2018-04-27 09:55:38 -select : finishing up [level=1, statement=select]
2018-04-27 09:55:38 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 09:55:38 -Using FROM fragment [user user0_]
2018-04-27 09:55:38 -select >> end [level=1, statement=select]
2018-04-27 09:55:38 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@6f3bd37f}

2018-04-27 09:55:38 -throwQueryException() : no errors
2018-04-27 09:55:38 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 09:55:38 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 09:55:38 -throwQueryException() : no errors
2018-04-27 09:55:38 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:55:38 -throwQueryException() : no errors
2018-04-27 09:55:38 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 09:55:38 -select << begin [level=1, statement=select]
2018-04-27 09:55:38 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 09:55:38 -Resolved : t -> user0_.id
2018-04-27 09:55:38 -Resolved : t -> user0_.id
2018-04-27 09:55:38 -getDataType() : name -> org.hibernate.type.StringType@6f3bd37f
2018-04-27 09:55:38 -Resolved : t.name -> user0_.name
2018-04-27 09:55:38 -Resolved : t -> user0_.id
2018-04-27 09:55:38 -getDataType() : email -> org.hibernate.type.StringType@6f3bd37f
2018-04-27 09:55:38 -Resolved : t.email -> user0_.email
2018-04-27 09:55:38 -select : finishing up [level=1, statement=select]
2018-04-27 09:55:38 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 09:55:38 -Using FROM fragment [user user0_]
2018-04-27 09:55:38 -select >> end [level=1, statement=select]
2018-04-27 09:55:38 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@6f3bd37f}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@6f3bd37f}

2018-04-27 09:55:38 -throwQueryException() : no errors
2018-04-27 09:55:38 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 09:55:38 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 09:55:38 -throwQueryException() : no errors
2018-04-27 09:55:38 -Using SLF4J as the default logging framework
2018-04-27 09:55:38 --Dio.netty.eventLoopThreads: 4
2018-04-27 09:55:38 --Dio.netty.leakDetection.level: simple
2018-04-27 09:55:38 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 09:55:38 -Platform: Windows
2018-04-27 09:55:38 --Dio.netty.noUnsafe: false
2018-04-27 09:55:38 -Java version: 8
2018-04-27 09:55:38 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 09:55:38 -sun.misc.Unsafe.copyMemory: available
2018-04-27 09:55:38 -java.nio.Buffer.address: available
2018-04-27 09:55:38 -direct buffer constructor: available
2018-04-27 09:55:38 -java.nio.Bits.unaligned: available, true
2018-04-27 09:55:38 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 09:55:38 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 09:55:38 -sun.misc.Unsafe: available
2018-04-27 09:55:38 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 09:55:38 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 09:55:38 --Dio.netty.noPreferDirect: false
2018-04-27 09:55:38 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 09:55:38 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 09:55:38 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 09:55:38 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1c972ae6
2018-04-27 09:55:38 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 09:55:38 -Using Slf4j logging framework
2018-04-27 09:55:38 -Starting UnsafeSupport init in Java 1.8
2018-04-27 09:55:38 -Unsafe is available
2018-04-27 09:55:38 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 09:55:38 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 09:55:38 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 09:55:38 --Dio.netty.allocator.pageSize: 8192
2018-04-27 09:55:38 --Dio.netty.allocator.maxOrder: 11
2018-04-27 09:55:38 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 09:55:38 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 09:55:38 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 09:55:38 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 09:55:38 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 09:55:38 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 09:55:38 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 09:55:38 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 09:55:38 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:55:38 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 09:55:38 -Neo4jMappingContext initialisation completed
2018-04-27 09:55:38 -Neo4jMappingContext initialisation completed
2018-04-27 09:55:39 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:55:39 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 09:55:39 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:55:39 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 09:55:39 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 09:55:39 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 09:55:39 -Opened connection [connectionId{localValue:1, serverValue:17}] to 192.168.71.151:27017
2018-04-27 09:55:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:55:39 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3637781}
2018-04-27 09:55:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.6 ms, state=CONNECTED}]
2018-04-27 09:55:40 -Opened connection [connectionId{localValue:2, serverValue:18}] to 192.168.71.151:27017
2018-04-27 09:55:40 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:18}] to server 192.168.71.151:27017
2018-04-27 09:55:40 -Command execution completed
2018-04-27 09:55:40 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:55:40 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 09:55:40 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:55:40 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 09:55:40 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:55:40 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 09:55:40 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:55:40 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 09:55:40 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:55:40 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 09:55:40 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:55:40 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 09:55:40 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:55:40 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 09:55:40 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:55:40 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 09:55:40 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:55:40 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 09:55:40 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:55:40 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:55:40 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:55:40 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 09:55:40 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:55:40 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 09:55:40 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:55:40 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 09:55:40 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:55:40 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 09:55:40 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:55:40 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 09:55:40 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:55:40 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 09:55:40 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:55:40 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 09:55:40 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:55:40 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 09:55:40 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 09:55:40 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:55:40 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 09:55:40 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:55:40 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 09:55:40 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:55:40 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 09:55:40 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:55:40 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 09:55:40 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:55:40 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 09:55:40 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:55:40 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 09:55:40 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:55:40 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:55:40 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:55:40 -Loaded expression factory via original TCCL
2018-04-27 09:55:40 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 09:55:40 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 09:55:40 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 09:55:40 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 09:55:40 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 09:55:40 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 09:55:40 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 09:55:40 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 09:55:40 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 09:55:40 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 09:55:40 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 09:55:40 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 09:55:40 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 09:55:40 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 09:55:40 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 09:55:40 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 09:55:41 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@291f18: startup date [Fri Apr 27 09:55:31 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:55:41 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@291f18: startup date [Fri Apr 27 09:55:31 GMT+08:00 2018]; root of context hierarchy
2018-04-27 09:55:41 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:55:41 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:55:41 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:55:41 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:55:41 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:55:41 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 09:55:41 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:55:41 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 09:55:41 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:55:41 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 09:55:42 -Registering beans for JMX exposure on startup
2018-04-27 09:55:42 -Registering beans for JMX exposure on startup
2018-04-27 09:55:42 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:55:42 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 09:55:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:55:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 09:55:42 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:55:42 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 09:55:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:55:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 09:55:42 -Starting beans in phase 2147483647
2018-04-27 09:55:42 -Starting beans in phase 2147483647
2018-04-27 09:55:42 -Context refreshed
2018-04-27 09:55:42 -Context refreshed
2018-04-27 09:55:42 -Found 1 custom documentation plugin(s)
2018-04-27 09:55:42 -Found 1 custom documentation plugin(s)
2018-04-27 09:55:42 -Scanning for api listing references
2018-04-27 09:55:42 -Scanning for api listing references
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:55:42 -Generating unique operation named: updateUsingPOST_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: createUsingGET_1
2018-04-27 09:55:42 -Generating unique operation named: createUsingGET_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:55:42 -Generating unique operation named: createUsingHEAD_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:55:42 -Generating unique operation named: createUsingPOST_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:55:42 -Generating unique operation named: createUsingPUT_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:55:42 -Generating unique operation named: createUsingPATCH_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:55:42 -Generating unique operation named: createUsingDELETE_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:55:42 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:55:42 -Generating unique operation named: createUsingTRACE_1
2018-04-27 09:55:42 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:55:42 -Generating unique operation named: deleteUsingGET_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingGET_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingGET_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingHEAD_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingPOST_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingPUT_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingPATCH_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingDELETE_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:55:42 -Generating unique operation named: listUsingTRACE_1
2018-04-27 09:55:42 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:55:42 -Generating unique operation named: saveUsingPOST_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: showUsingGET_1
2018-04-27 09:55:42 -Generating unique operation named: showUsingGET_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:55:42 -Generating unique operation named: showUsingHEAD_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:55:42 -Generating unique operation named: showUsingPOST_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:55:42 -Generating unique operation named: showUsingPUT_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:55:42 -Generating unique operation named: showUsingPATCH_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:55:42 -Generating unique operation named: showUsingDELETE_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:55:42 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:55:42 -Generating unique operation named: showUsingTRACE_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:55:42 -Generating unique operation named: updateUsingGET_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:55:42 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:55:42 -Generating unique operation named: updateUsingPOST_2
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:55:42 -Generating unique operation named: updateUsingPUT_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:55:42 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:55:42 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:55:42 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 09:55:42 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:55:42 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 09:55:42 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:55:42 -Generating unique operation named: updateUsingPOST_3
2018-04-27 09:55:43 -Starting ProtocolHandler ["http-nio-8080"]
2018-04-27 09:55:43 -Using a shared selector for servlet write/read
2018-04-27 09:55:43 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:55:43 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 09:55:43 -Started DemoApplication in 12.213 seconds (JVM running for 13.371)
2018-04-27 09:55:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:55:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2018-04-27 09:55:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:55:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.7 ms, state=CONNECTED}]
2018-04-27 09:56:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:56:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 09:56:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:56:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 09:56:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:56:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 09:56:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:56:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 09:56:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:56:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 09:56:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:56:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:57:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:57:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:57:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:57:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 09:57:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:57:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 09:57:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:57:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 09:57:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:57:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:57:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:57:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 09:58:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:58:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:58:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:58:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:58:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:58:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:58:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:58:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:58:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:58:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:58:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:58:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:59:09 -Checking status of 192.168.71.151:27017
2018-04-27 09:59:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:59:19 -Checking status of 192.168.71.151:27017
2018-04-27 09:59:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 09:59:29 -Checking status of 192.168.71.151:27017
2018-04-27 09:59:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:59:39 -Checking status of 192.168.71.151:27017
2018-04-27 09:59:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:59:49 -Checking status of 192.168.71.151:27017
2018-04-27 09:59:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 09:59:59 -Checking status of 192.168.71.151:27017
2018-04-27 09:59:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:00:09 -Checking status of 192.168.71.151:27017
2018-04-27 10:00:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:00:19 -Checking status of 192.168.71.151:27017
2018-04-27 10:00:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:00:29 -Checking status of 192.168.71.151:27017
2018-04-27 10:00:29 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:00:39 -Checking status of 192.168.71.151:27017
2018-04-27 10:00:39 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:00:49 -Checking status of 192.168.71.151:27017
2018-04-27 10:00:49 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:00:59 -Checking status of 192.168.71.151:27017
2018-04-27 10:00:59 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:01:09 -Checking status of 192.168.71.151:27017
2018-04-27 10:01:09 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:01:19 -Checking status of 192.168.71.151:27017
2018-04-27 10:01:19 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:01:29 -Checking status of 192.168.71.151:27017
2018-04-27 10:01:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.2 ms, state=CONNECTED}]
2018-04-27 10:01:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:01:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.7 ms, state=CONNECTED}]
2018-04-27 10:01:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:01:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 10:02:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:02:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 10:02:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:02:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 10:02:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:02:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 10:02:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:02:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:02:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:02:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:02:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:02:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:03:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:03:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:03:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:03:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:03:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:03:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:03:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:03:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:03:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:03:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:03:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:03:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:04:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:04:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:04:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:04:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:04:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:04:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:04:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:04:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:04:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:04:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:04:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:04:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:05:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:05:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:05:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:05:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:05:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:05:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:05:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:05:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:05:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:05:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:05:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:05:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:06:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:06:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:06:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:06:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:06:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:06:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:06:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:06:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:06:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:06:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:06:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:06:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:07:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:07:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:07:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:07:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:07:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:07:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:07:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:07:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:07:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:07:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:07:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:07:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:08:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:08:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:08:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:08:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2018-04-27 10:08:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:08:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 10:08:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:08:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 10:08:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:08:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 10:08:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:08:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 10:09:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:09:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:09:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:09:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:09:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:09:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:09:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:09:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:09:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:09:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:09:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:09:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:10:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:10:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:10:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:10:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:10:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:10:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:10:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:10:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:10:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:10:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:10:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:10:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:11:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:11:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:11:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:11:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:11:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:11:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:11:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:11:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:11:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:11:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:11:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:11:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:12:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:12:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:12:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:12:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:12:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:12:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:12:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:12:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:12:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:12:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:12:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:12:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:13:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:13:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:13:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:13:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:13:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:13:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:13:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:13:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:13:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:13:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:13:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:13:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 10:14:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:14:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:14:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:14:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:14:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:14:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:14:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:14:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:14:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:14:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:14:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:14:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:15:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:15:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:15:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-27 10:15:02 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 10:15:02 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 10:15:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2018-04-27 10:15:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2018-04-27 10:15:04 -获取到Tracker连接地址/192.168.71.161:22122
2018-04-27 10:15:04 -connect to /192.168.71.161:22122 soTimeout=1501 connectTimeout=601
2018-04-27 10:15:04 -对地址/192.168.71.161:22122发出交易请求TrackerGetStoreStorageCommand
2018-04-27 10:15:04 -发出交易请求..报文头为ProtoHead [contentLength=0, cmd=101, status=0]
2018-04-27 10:15:04 -交易参数为[]
2018-04-27 10:15:04 -服务端返回报文头ProtoHead [contentLength=40, cmd=100, status=0]
2018-04-27 10:15:04 -dump class=com.github.tobato.fastdfs.domain.StorageNode
2018-04-27 10:15:04 -----------------------------------------
2018-04-27 10:15:04 -FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]
2018-04-27 10:15:04 -FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]
2018-04-27 10:15:04 -FieldMateData [field=port, index=2, max=0, size=8, offsize=31]
2018-04-27 10:15:04 -FieldMateData [field=storeIndex, index=3, max=0, size=1, offsize=39]
2018-04-27 10:15:04 -设置值是 FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]group1
2018-04-27 10:15:04 -Setting default value: false
2018-04-27 10:15:04 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 10:15:04 -    No conversion required, value is already a Boolean
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 10:15:04 -    Converted to Byte value '0'
2018-04-27 10:15:04 -Setting default value:  
2018-04-27 10:15:04 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 10:15:04 -    No conversion required, value is already a Character
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 10:15:04 -    Converted to Double value '0.0'
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 10:15:04 -    Converted to Float value '0.0'
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 10:15:04 -    No conversion required, value is already a Integer
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 10:15:04 -    Converted to Long value '0'
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 10:15:04 -    Converted to Short value '0'
2018-04-27 10:15:04 -Setting default value: 0.0
2018-04-27 10:15:04 -Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2018-04-27 10:15:04 -    No conversion required, value is already a BigDecimal
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'BigInteger' value '0' to type 'BigInteger'
2018-04-27 10:15:04 -    No conversion required, value is already a BigInteger
2018-04-27 10:15:04 -Setting default value: false
2018-04-27 10:15:04 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 10:15:04 -    No conversion required, value is already a Boolean
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 10:15:04 -    Converted to Byte value '0'
2018-04-27 10:15:04 -Setting default value:  
2018-04-27 10:15:04 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 10:15:04 -    No conversion required, value is already a Character
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 10:15:04 -    Converted to Double value '0.0'
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 10:15:04 -    Converted to Float value '0.0'
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 10:15:04 -    No conversion required, value is already a Integer
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 10:15:04 -    Converted to Long value '0'
2018-04-27 10:15:04 -Setting default value: 0
2018-04-27 10:15:04 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 10:15:04 -    Converted to Short value '0'
2018-04-27 10:15:04 -Setting default value: 
2018-04-27 10:15:04 -Converting 'String' value '' to type 'String'
2018-04-27 10:15:04 -Setting default value: [Z@483f41c8
2018-04-27 10:15:04 -Converting 'boolean[]' value '[Z@483f41c8' to type 'boolean[]'
2018-04-27 10:15:04 -    No conversion required, value is already a boolean[]
2018-04-27 10:15:04 -Setting default value: [B@22a991e0
2018-04-27 10:15:04 -Converting 'byte[]' value '[B@22a991e0' to type 'byte[]'
2018-04-27 10:15:04 -    No conversion required, value is already a byte[]
2018-04-27 10:15:04 -Setting default value: [C@7da28a41
2018-04-27 10:15:04 -Converting 'char[]' value '[C@7da28a41' to type 'char[]'
2018-04-27 10:15:04 -    No conversion required, value is already a char[]
2018-04-27 10:15:04 -Setting default value: [D@3d3c82ad
2018-04-27 10:15:04 -Converting 'double[]' value '[D@3d3c82ad' to type 'double[]'
2018-04-27 10:15:04 -    No conversion required, value is already a double[]
2018-04-27 10:15:04 -Setting default value: [F@fbfa5c3
2018-04-27 10:15:04 -Converting 'float[]' value '[F@fbfa5c3' to type 'float[]'
2018-04-27 10:15:04 -    No conversion required, value is already a float[]
2018-04-27 10:15:04 -Setting default value: [I@61771345
2018-04-27 10:15:04 -Converting 'int[]' value '[I@61771345' to type 'int[]'
2018-04-27 10:15:04 -    No conversion required, value is already a int[]
2018-04-27 10:15:04 -Setting default value: [J@86e7da8
2018-04-27 10:15:04 -Converting 'long[]' value '[J@86e7da8' to type 'long[]'
2018-04-27 10:15:04 -    No conversion required, value is already a long[]
2018-04-27 10:15:04 -Setting default value: [S@511ebfe2
2018-04-27 10:15:04 -Converting 'short[]' value '[S@511ebfe2' to type 'short[]'
2018-04-27 10:15:04 -    No conversion required, value is already a short[]
2018-04-27 10:15:04 -Setting default value: [Ljava.math.BigDecimal;@237d99bf
2018-04-27 10:15:04 -Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@237d99bf' to type 'BigDecimal[]'
2018-04-27 10:15:04 -    No conversion required, value is already a BigDecimal[]
2018-04-27 10:15:04 -Setting default value: [Ljava.math.BigInteger;@7ac95bae
2018-04-27 10:15:04 -Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@7ac95bae' to type 'BigInteger[]'
2018-04-27 10:15:04 -    No conversion required, value is already a BigInteger[]
2018-04-27 10:15:04 -Setting default value: [Ljava.lang.Boolean;@131fa62
2018-04-27 10:15:04 -Converting 'Boolean[]' value '[Ljava.lang.Boolean;@131fa62' to type 'Boolean[]'
2018-04-27 10:15:04 -    No conversion required, value is already a Boolean[]
2018-04-27 10:15:04 -Setting default value: [Ljava.lang.Byte;@2574a409
2018-04-27 10:15:04 -Converting 'Byte[]' value '[Ljava.lang.Byte;@2574a409' to type 'Byte[]'
2018-04-27 10:15:04 -    No conversion required, value is already a Byte[]
2018-04-27 10:15:04 -Setting default value: [Ljava.lang.Character;@6a8b7179
2018-04-27 10:15:04 -Converting 'Character[]' value '[Ljava.lang.Character;@6a8b7179' to type 'Character[]'
2018-04-27 10:15:04 -    No conversion required, value is already a Character[]
2018-04-27 10:15:04 -Setting default value: [Ljava.lang.Double;@5a2f43ad
2018-04-27 10:15:04 -Converting 'Double[]' value '[Ljava.lang.Double;@5a2f43ad' to type 'Double[]'
2018-04-27 10:15:04 -    No conversion required, value is already a Double[]
2018-04-27 10:15:04 -Setting default value: [Ljava.lang.Float;@54c35060
2018-04-27 10:15:04 -Converting 'Float[]' value '[Ljava.lang.Float;@54c35060' to type 'Float[]'
2018-04-27 10:15:04 -    No conversion required, value is already a Float[]
2018-04-27 10:15:04 -Setting default value: [Ljava.lang.Integer;@5417f21d
2018-04-27 10:15:04 -Converting 'Integer[]' value '[Ljava.lang.Integer;@5417f21d' to type 'Integer[]'
2018-04-27 10:15:04 -    No conversion required, value is already a Integer[]
2018-04-27 10:15:04 -Setting default value: [Ljava.lang.Long;@6526415f
2018-04-27 10:15:04 -Converting 'Long[]' value '[Ljava.lang.Long;@6526415f' to type 'Long[]'
2018-04-27 10:15:04 -    No conversion required, value is already a Long[]
2018-04-27 10:15:04 -Setting default value: [Ljava.lang.Short;@45b4547d
2018-04-27 10:15:04 -Converting 'Short[]' value '[Ljava.lang.Short;@45b4547d' to type 'Short[]'
2018-04-27 10:15:04 -    No conversion required, value is already a Short[]
2018-04-27 10:15:04 -Setting default value: [Ljava.lang.String;@b3a5cfb
2018-04-27 10:15:04 -Converting 'String[]' value '[Ljava.lang.String;@b3a5cfb' to type 'String[]'
2018-04-27 10:15:04 -    No conversion required, value is already a String[]
2018-04-27 10:15:04 -Setting default value: [Ljava.lang.Class;@6056c09b
2018-04-27 10:15:04 -Converting 'Class[]' value '[Ljava.lang.Class;@6056c09b' to type 'Class[]'
2018-04-27 10:15:04 -    No conversion required, value is already a Class[]
2018-04-27 10:15:04 -Setting default value: [Ljava.util.Date;@372d4977
2018-04-27 10:15:04 -Converting 'Date[]' value '[Ljava.util.Date;@372d4977' to type 'Date[]'
2018-04-27 10:15:04 -    No conversion required, value is already a Date[]
2018-04-27 10:15:04 -Setting default value: [Ljava.util.Calendar;@959b727
2018-04-27 10:15:04 -Converting 'Calendar[]' value '[Ljava.util.Calendar;@959b727' to type 'Calendar[]'
2018-04-27 10:15:04 -    No conversion required, value is already a Calendar[]
2018-04-27 10:15:04 -Setting default value: [Ljava.io.File;@2e660e2
2018-04-27 10:15:04 -Converting 'java.io.File[]' value '[Ljava.io.File;@2e660e2' to type 'java.io.File[]'
2018-04-27 10:15:04 -    No conversion required, value is already a java.io.File[]
2018-04-27 10:15:04 -Setting default value: [Ljava.sql.Date;@3d26e381
2018-04-27 10:15:04 -Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@3d26e381' to type 'java.sql.Date[]'
2018-04-27 10:15:04 -    No conversion required, value is already a java.sql.Date[]
2018-04-27 10:15:04 -Setting default value: [Ljava.sql.Time;@490ba9a6
2018-04-27 10:15:04 -Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@490ba9a6' to type 'java.sql.Time[]'
2018-04-27 10:15:04 -    No conversion required, value is already a java.sql.Time[]
2018-04-27 10:15:04 -Setting default value: [Ljava.sql.Timestamp;@72ebff74
2018-04-27 10:15:04 -Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@72ebff74' to type 'java.sql.Timestamp[]'
2018-04-27 10:15:04 -    No conversion required, value is already a java.sql.Timestamp[]
2018-04-27 10:15:04 -Setting default value: [Ljava.net.URL;@b8a0083
2018-04-27 10:15:04 -Converting 'java.net.URL[]' value '[Ljava.net.URL;@b8a0083' to type 'java.net.URL[]'
2018-04-27 10:15:04 -    No conversion required, value is already a java.net.URL[]
2018-04-27 10:15:04 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 10:15:04 -Converting 'String' value 'group1' to type 'String'
2018-04-27 10:15:04 -设置值是 FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]192.168.71.158
2018-04-27 10:15:04 -Convert string '192.168.71.158' to class 'java.lang.String'
2018-04-27 10:15:04 -Converting 'String' value '192.168.71.158' to type 'String'
2018-04-27 10:15:04 -设置值是 FieldMateData [field=port, index=2, max=0, size=8, offsize=31]23000
2018-04-27 10:15:04 -Converting 'Integer' value '23000' to type 'Integer'
2018-04-27 10:15:04 -    No conversion required, value is already a Integer
2018-04-27 10:15:04 -设置值是 FieldMateData [field=storeIndex, index=3, max=0, size=1, offsize=39]0
2018-04-27 10:15:04 -Converting 'Byte' value '0' to type 'Byte'
2018-04-27 10:15:04 -    No conversion required, value is already a Byte
2018-04-27 10:15:04 -connect to /192.168.71.158:23000 soTimeout=1501 connectTimeout=601
2018-04-27 10:15:04 -对地址/192.168.71.158:23000发出交易请求StorageUploadFileCommand
2018-04-27 10:15:04 -发出交易请求..报文头为ProtoHead [contentLength=57603, cmd=11, status=0]
2018-04-27 10:15:04 -交易参数为[0, 0, 0, 0, 0, 0, 0, -32, -12, 112, 110, 103, 0, 0, 0]
2018-04-27 10:15:04 -开始上传文件流大小为57588
2018-04-27 10:15:04 -剩余数据量0
2018-04-27 10:15:04 -服务端返回报文头ProtoHead [contentLength=60, cmd=100, status=0]
2018-04-27 10:15:04 -dump class=com.github.tobato.fastdfs.domain.StorePath
2018-04-27 10:15:04 -----------------------------------------
2018-04-27 10:15:04 -FieldMateData [field=group, index=0, max=16, size=16, offsize=0]
2018-04-27 10:15:04 -FieldMateData [field=path, index=1, max=0, size=0, offsize=16]
2018-04-27 10:15:04 -设置值是 FieldMateData [field=group, index=0, max=16, size=16, offsize=0]group1
2018-04-27 10:15:04 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 10:15:04 -Converting 'String' value 'group1' to type 'String'
2018-04-27 10:15:04 -设置值是 FieldMateData [field=path, index=1, max=0, size=0, offsize=16]M00/00/00/wKhHnlrih6yAMl7UAADg9OSIpuo967.png
2018-04-27 10:15:04 -Convert string 'M00/00/00/wKhHnlrih6yAMl7UAADg9OSIpuo967.png' to class 'java.lang.String'
2018-04-27 10:15:04 -Converting 'String' value 'M00/00/00/wKhHnlrih6yAMl7UAADg9OSIpuo967.png' to type 'String'
2018-04-27 10:15:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:15:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:15:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:15:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:15:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:15:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:15:37 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@36e28f1b 
2018-04-27 10:15:37 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@3b9fa064 
2018-04-27 10:15:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:15:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:15:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:15:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:16:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:16:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:16:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:16:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.1 ms, state=CONNECTED}]
2018-04-27 10:16:13 -Starting FastdfsTests on DESKTOP-4VE2VST with PID 17968 (started by Qiang in Y:\MyGit\demo)
2018-04-27 10:16:13 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 10:16:13 -The following profiles are active: dev
2018-04-27 10:16:13 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@82ea68c: startup date [Fri Apr 27 10:16:13 GMT+08:00 2018]; root of context hierarchy
2018-04-27 10:16:13 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@82ea68c: startup date [Fri Apr 27 10:16:13 GMT+08:00 2018]; root of context hierarchy
2018-04-27 10:16:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 10:16:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 10:16:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 10:16:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 10:16:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 10:16:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 10:16:15 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 10:16:15 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 10:16:15 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 10:16:15 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 10:16:15 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 10:16:15 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 10:16:15 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 10:16:15 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 10:16:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 10:16:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 10:16:15 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 10:16:15 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 10:16:15 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 10:16:15 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 10:16:15 -Loaded expression factory via original TCCL
2018-04-27 10:16:15 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 10:16:15 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 10:16:15 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 10:16:15 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 10:16:15 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 10:16:15 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 10:16:15 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 10:16:15 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 10:16:15 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 10:16:15 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 10:16:15 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 10:16:15 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 10:16:15 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 10:16:15 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 10:16:15 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 10:16:15 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 10:16:15 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$103e383a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:15 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$103e383a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d26d0be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d26d0be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$10123ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$10123ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 10:16:16 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 10:16:16 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 10:16:16 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 10:16:16 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 10:16:16 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 10:16:16 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 10:16:16 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 10:16:16 -Starting Post-processing phase
2018-04-27 10:16:16 -Building annotation class map
2018-04-27 10:16:16 -Building interface class map for 8 classes
2018-04-27 10:16:16 - - Actor implements 0 interfaces
2018-04-27 10:16:16 - - Role implements 1 interfaces
2018-04-27 10:16:16 -   - java.io.Serializable
2018-04-27 10:16:16 - - MongoUser implements 0 interfaces
2018-04-27 10:16:16 - - Role implements 0 interfaces
2018-04-27 10:16:16 - - Movie implements 0 interfaces
2018-04-27 10:16:16 - - Department implements 0 interfaces
2018-04-27 10:16:16 - - BookBean implements 0 interfaces
2018-04-27 10:16:16 - - User implements 1 interfaces
2018-04-27 10:16:16 -   - java.io.Serializable
2018-04-27 10:16:16 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 10:16:16 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 10:16:16 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 10:16:16 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 10:16:16 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 10:16:16 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 10:16:16 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 10:16:16 -Post-processing: com.example.ren.model.BookBean
2018-04-27 10:16:16 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 10:16:16 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 10:16:16 -Checking for @Transient classes....
2018-04-27 10:16:16 -Registering converters and deregistering transient fields and methods....
2018-04-27 10:16:16 -Post-processing complete
2018-04-27 10:16:16 -Building Index Metadata.
2018-04-27 10:16:16 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:16 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 10:16:17 -{dataSource-1} inited
2018-04-27 10:16:17 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 10:16:17 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 10:16:17 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 10:16:16",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:2069584894, ConnectTime:"2018-04-27 10:16:17", UseCount:1, LastActiveTime:"2018-04-27 10:16:17"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 10:16:17 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 10:16:17 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 10:16:17 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 10:16:17 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 10:16:17 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 10:16:17 -HHH000206: hibernate.properties not found
2018-04-27 10:16:17 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 10:16:17 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 10:16:17 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 10:16:18 -Adding type registration boolean -> org.hibernate.type.BooleanType@6d6ac396
2018-04-27 10:16:18 -Adding type registration boolean -> org.hibernate.type.BooleanType@6d6ac396
2018-04-27 10:16:18 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6d6ac396
2018-04-27 10:16:18 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7ecda95b
2018-04-27 10:16:18 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@77b3752b
2018-04-27 10:16:18 -Adding type registration yes_no -> org.hibernate.type.YesNoType@59498d94
2018-04-27 10:16:18 -Adding type registration byte -> org.hibernate.type.ByteType@2eda4eeb
2018-04-27 10:16:18 -Adding type registration byte -> org.hibernate.type.ByteType@2eda4eeb
2018-04-27 10:16:18 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2eda4eeb
2018-04-27 10:16:18 -Adding type registration character -> org.hibernate.type.CharacterType@1af4955e
2018-04-27 10:16:18 -Adding type registration char -> org.hibernate.type.CharacterType@1af4955e
2018-04-27 10:16:18 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1af4955e
2018-04-27 10:16:18 -Adding type registration short -> org.hibernate.type.ShortType@66e21568
2018-04-27 10:16:18 -Adding type registration short -> org.hibernate.type.ShortType@66e21568
2018-04-27 10:16:18 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@66e21568
2018-04-27 10:16:18 -Adding type registration integer -> org.hibernate.type.IntegerType@35dece42
2018-04-27 10:16:18 -Adding type registration int -> org.hibernate.type.IntegerType@35dece42
2018-04-27 10:16:18 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35dece42
2018-04-27 10:16:18 -Adding type registration long -> org.hibernate.type.LongType@697d6ded
2018-04-27 10:16:18 -Adding type registration long -> org.hibernate.type.LongType@697d6ded
2018-04-27 10:16:18 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@697d6ded
2018-04-27 10:16:18 -Adding type registration float -> org.hibernate.type.FloatType@5d508d22
2018-04-27 10:16:18 -Adding type registration float -> org.hibernate.type.FloatType@5d508d22
2018-04-27 10:16:18 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d508d22
2018-04-27 10:16:18 -Adding type registration double -> org.hibernate.type.DoubleType@35650279
2018-04-27 10:16:18 -Adding type registration double -> org.hibernate.type.DoubleType@35650279
2018-04-27 10:16:18 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@35650279
2018-04-27 10:16:18 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3dce6dd8
2018-04-27 10:16:18 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3dce6dd8
2018-04-27 10:16:18 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a7c678b
2018-04-27 10:16:18 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a7c678b
2018-04-27 10:16:18 -Adding type registration string -> org.hibernate.type.StringType@322204dc
2018-04-27 10:16:18 -Adding type registration java.lang.String -> org.hibernate.type.StringType@322204dc
2018-04-27 10:16:18 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61191222
2018-04-27 10:16:18 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2519026b
2018-04-27 10:16:18 -Adding type registration url -> org.hibernate.type.UrlType@27dc627a
2018-04-27 10:16:18 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@27dc627a
2018-04-27 10:16:18 -Adding type registration Duration -> org.hibernate.type.DurationType@16f0ec18
2018-04-27 10:16:18 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@16f0ec18
2018-04-27 10:16:18 -Adding type registration Instant -> org.hibernate.type.InstantType@364fd4ae
2018-04-27 10:16:18 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@364fd4ae
2018-04-27 10:16:18 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b481bf5
2018-04-27 10:16:18 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b481bf5
2018-04-27 10:16:18 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@8e25d3f
2018-04-27 10:16:18 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@8e25d3f
2018-04-27 10:16:18 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@902fdbe
2018-04-27 10:16:18 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@902fdbe
2018-04-27 10:16:18 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f79f192
2018-04-27 10:16:18 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f79f192
2018-04-27 10:16:18 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@ea7a4c3
2018-04-27 10:16:18 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@ea7a4c3
2018-04-27 10:16:18 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32a4ecbe
2018-04-27 10:16:18 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@32a4ecbe
2018-04-27 10:16:18 -Adding type registration date -> org.hibernate.type.DateType@5df7e31b
2018-04-27 10:16:18 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@5df7e31b
2018-04-27 10:16:18 -Adding type registration time -> org.hibernate.type.TimeType@160e99e0
2018-04-27 10:16:18 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@160e99e0
2018-04-27 10:16:18 -Adding type registration timestamp -> org.hibernate.type.TimestampType@1a1ccaaf
2018-04-27 10:16:18 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1a1ccaaf
2018-04-27 10:16:18 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1a1ccaaf
2018-04-27 10:16:18 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@388c519
2018-04-27 10:16:18 -Adding type registration calendar -> org.hibernate.type.CalendarType@2ce03e86
2018-04-27 10:16:18 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2ce03e86
2018-04-27 10:16:18 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2ce03e86
2018-04-27 10:16:18 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@747835f5
2018-04-27 10:16:18 -Adding type registration locale -> org.hibernate.type.LocaleType@1e12a5a6
2018-04-27 10:16:18 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1e12a5a6
2018-04-27 10:16:18 -Adding type registration currency -> org.hibernate.type.CurrencyType@10a18e3e
2018-04-27 10:16:18 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@10a18e3e
2018-04-27 10:16:18 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@ea00de
2018-04-27 10:16:18 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@ea00de
2018-04-27 10:16:18 -Adding type registration class -> org.hibernate.type.ClassType@4cc01c7f
2018-04-27 10:16:18 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4cc01c7f
2018-04-27 10:16:18 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@42e4e589
2018-04-27 10:16:18 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@42e4e589
2018-04-27 10:16:18 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@171dc7c3
2018-04-27 10:16:18 -Adding type registration binary -> org.hibernate.type.BinaryType@22825e1e
2018-04-27 10:16:18 -Adding type registration byte[] -> org.hibernate.type.BinaryType@22825e1e
2018-04-27 10:16:18 -Adding type registration [B -> org.hibernate.type.BinaryType@22825e1e
2018-04-27 10:16:18 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64502326
2018-04-27 10:16:18 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64502326
2018-04-27 10:16:18 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64502326
2018-04-27 10:16:18 -Adding type registration row_version -> org.hibernate.type.RowVersionType@1283ca23
2018-04-27 10:16:18 -Adding type registration image -> org.hibernate.type.ImageType@741ac284
2018-04-27 10:16:18 -Adding type registration characters -> org.hibernate.type.CharArrayType@79a201cf
2018-04-27 10:16:18 -Adding type registration char[] -> org.hibernate.type.CharArrayType@79a201cf
2018-04-27 10:16:18 -Adding type registration [C -> org.hibernate.type.CharArrayType@79a201cf
2018-04-27 10:16:18 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4e375bba
2018-04-27 10:16:18 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4e375bba
2018-04-27 10:16:18 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4e375bba
2018-04-27 10:16:18 -Adding type registration text -> org.hibernate.type.TextType@2443abd6
2018-04-27 10:16:18 -Adding type registration ntext -> org.hibernate.type.NTextType@5348d83c
2018-04-27 10:16:18 -Adding type registration blob -> org.hibernate.type.BlobType@50b46e24
2018-04-27 10:16:18 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@50b46e24
2018-04-27 10:16:18 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7455dacb
2018-04-27 10:16:18 -Adding type registration clob -> org.hibernate.type.ClobType@10980560
2018-04-27 10:16:18 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@10980560
2018-04-27 10:16:18 -Adding type registration nclob -> org.hibernate.type.NClobType@2eada095
2018-04-27 10:16:18 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2eada095
2018-04-27 10:16:18 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@66ec4409
2018-04-27 10:16:18 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4c531172
2018-04-27 10:16:18 -Adding type registration serializable -> org.hibernate.type.SerializableType@48581a3b
2018-04-27 10:16:18 -Adding type registration object -> org.hibernate.type.ObjectType@6c17c0f8
2018-04-27 10:16:18 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6c17c0f8
2018-04-27 10:16:18 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b4872bc
2018-04-27 10:16:18 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@498a612d
2018-04-27 10:16:18 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e1237ab
2018-04-27 10:16:18 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4dfdfe7d
2018-04-27 10:16:18 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1578b8ec
2018-04-27 10:16:18 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f613067
2018-04-27 10:16:18 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c1e14f
2018-04-27 10:16:18 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@226de93c
2018-04-27 10:16:18 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 10:16:18 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 10:16:18 -JDBC version : 4.0
2018-04-27 10:16:18 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 10:16:18 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 10:16:18 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 10:16:18 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 10:16:18 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 10:16:18 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 10:16:19 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 10:16:19 -Import with entity name Department
2018-04-27 10:16:19 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -MetadataSourceProcessor property id with lazy=false
2018-04-27 10:16:19 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 10:16:19 -building SimpleValue for id
2018-04-27 10:16:19 -Building property id
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -MetadataSourceProcessor property name with lazy=false
2018-04-27 10:16:19 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 10:16:19 -building SimpleValue for name
2018-04-27 10:16:19 -Building property name
2018-04-27 10:16:19 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 10:16:19 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 10:16:19 -Import with entity name Role
2018-04-27 10:16:19 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -MetadataSourceProcessor property id with lazy=false
2018-04-27 10:16:19 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 10:16:19 -building SimpleValue for id
2018-04-27 10:16:19 -Building property id
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -MetadataSourceProcessor property name with lazy=false
2018-04-27 10:16:19 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 10:16:19 -building SimpleValue for name
2018-04-27 10:16:19 -Building property name
2018-04-27 10:16:19 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 10:16:19 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 10:16:19 -Import with entity name User
2018-04-27 10:16:19 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -MetadataSourceProcessor property id with lazy=false
2018-04-27 10:16:19 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 10:16:19 -building SimpleValue for id
2018-04-27 10:16:19 -Building property id
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 10:16:19 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 10:16:19 -building SimpleValue for createDate
2018-04-27 10:16:19 -Building property createDate
2018-04-27 10:16:19 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -Building property department
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -MetadataSourceProcessor property email with lazy=false
2018-04-27 10:16:19 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 10:16:19 -building SimpleValue for email
2018-04-27 10:16:19 -Building property email
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -MetadataSourceProcessor property name with lazy=false
2018-04-27 10:16:19 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 10:16:19 -building SimpleValue for name
2018-04-27 10:16:19 -Building property name
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -MetadataSourceProcessor property password with lazy=false
2018-04-27 10:16:19 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 10:16:19 -building SimpleValue for password
2018-04-27 10:16:19 -Building property password
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 10:16:19 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 10:16:19 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 10:16:19 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 10:16:19 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 10:16:19 -Building property roles
2018-04-27 10:16:19 -Starting fillSimpleValue for id
2018-04-27 10:16:19 -Starting fillSimpleValue for name
2018-04-27 10:16:19 -Starting fillSimpleValue for id
2018-04-27 10:16:19 -Starting fillSimpleValue for name
2018-04-27 10:16:19 -Starting fillSimpleValue for id
2018-04-27 10:16:19 -Starting fillSimpleValue for createDate
2018-04-27 10:16:19 -Starting fillSimpleValue for email
2018-04-27 10:16:19 -Starting fillSimpleValue for name
2018-04-27 10:16:19 -Starting fillSimpleValue for password
2018-04-27 10:16:19 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 10:16:19 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 10:16:19 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 10:16:19 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 10:16:19 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 10:16:19 -Mapped collection key: user_id, element: role_id
2018-04-27 10:16:19 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 10:16:19 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 10:16:19 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 10:16:19 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 10:16:19 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 10:16:19 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 10:16:19 -Building session factory
2018-04-27 10:16:19 -SessionFactory name : null
2018-04-27 10:16:19 -Automatic flush during beforeCompletion(): enabled
2018-04-27 10:16:19 -Automatic session close at end of transaction: disabled
2018-04-27 10:16:19 -Statistics: disabled
2018-04-27 10:16:19 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 10:16:19 -Default entity-mode: pojo
2018-04-27 10:16:19 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 10:16:19 -Allow initialization of lazy state outside session : disabled
2018-04-27 10:16:19 -Using BatchFetchStyle : LEGACY
2018-04-27 10:16:19 -Default batch fetch size: -1
2018-04-27 10:16:19 -Maximum outer join fetch depth: 2
2018-04-27 10:16:19 -Default null ordering: NONE
2018-04-27 10:16:19 -Order SQL updates by primary key: disabled
2018-04-27 10:16:19 -Order SQL inserts for batching: disabled
2018-04-27 10:16:19 -multi-tenancy strategy : NONE
2018-04-27 10:16:19 -JTA Track by Thread: enabled
2018-04-27 10:16:19 -Query language substitutions: {}
2018-04-27 10:16:19 -JPA query language strict compliance: disabled
2018-04-27 10:16:19 -Named query checking : enabled
2018-04-27 10:16:19 -Second-level cache: enabled
2018-04-27 10:16:19 -Second-level query cache: disabled
2018-04-27 10:16:19 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2d206a71
2018-04-27 10:16:19 -Second-level cache region prefix: null
2018-04-27 10:16:19 -Optimize second-level cache for minimal puts: disabled
2018-04-27 10:16:19 -Structured second-level cache entries: disabled
2018-04-27 10:16:19 -Second-level cache direct-reference entries: disabled
2018-04-27 10:16:19 -Automatic eviction of collection cache: disabled
2018-04-27 10:16:19 -JDBC batch size: 15
2018-04-27 10:16:19 -JDBC batch updates for versioned data: enabled
2018-04-27 10:16:19 -Scrollable result sets: enabled
2018-04-27 10:16:19 -Wrap result sets: disabled
2018-04-27 10:16:19 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 10:16:19 -JDBC result set fetch size: null
2018-04-27 10:16:19 -Connection release mode: ON_CLOSE
2018-04-27 10:16:19 -Generate SQL with comments: disabled
2018-04-27 10:16:19 -Session factory constructed with filter configurations : {}
2018-04-27 10:16:19 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\test-classes;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-test\2.0.0.RELEASE\spring-boot-starter-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test\2.0.0.RELEASE\spring-boot-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.0.0.RELEASE\spring-boot-test-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;X:\Maven\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;X:\Maven\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;X:\Maven\repository\org\assertj\assertj-core\3.9.1\assertj-core-3.9.1.jar;X:\Maven\repository\org\mockito\mockito-core\2.15.0\mockito-core-2.15.0.jar;X:\Maven\repository\net\bytebuddy\byte-buddy\1.7.10\byte-buddy-1.7.10.jar;X:\Maven\repository\net\bytebuddy\byte-buddy-agent\1.7.10\byte-buddy-agent-1.7.10.jar;X:\Maven\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;X:\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;X:\Maven\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;X:\Maven\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;X:\Maven\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;X:\Maven\repository\org\xmlunit\xmlunit-core\2.5.1\xmlunit-core-2.5.1.jar;X:\Maven\repository\org\springframework\spring-test\4.3.6.RELEASE\spring-test-4.3.6.RELEASE.jar;X:\Maven\repository\junit\junit\4.12\junit-4.12.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 com.example.ren.fastdfs.FastdfsTests,delete, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@50cbcca7, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=17968, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@49491770, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 10:16:16",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:2069584894, ConnectTime:"2018-04-27 10:16:17", UseCount:2, LastActiveTime:"2018-04-27 10:16:18"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 10:16:19 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 10:16:19 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 10:16:19 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 10:16:19 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 10:16:19 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 10:16:19 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 10:16:19 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 10:16:19 -Loaded expression factory via original TCCL
2018-04-27 10:16:19 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 10:16:19 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 10:16:19 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 10:16:19 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 10:16:19 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 10:16:19 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 10:16:19 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 10:16:19 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 10:16:19 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 10:16:19 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 10:16:19 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 10:16:19 -Skipping JACC integration as it was not enabled
2018-04-27 10:16:19 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 10:16:19 -Instantiated session factory
2018-04-27 10:16:19 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 10:16:19 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 10:16:19 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 10:16:19 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 10:16:19 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 10:16:19 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 10:16:19 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 10:16:19 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 10:16:19 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 10:16:19 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 10:16:19 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 10:16:19 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 10:16:19 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 10:16:19 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 10:16:19 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 10:16:19 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 10:16:19 - One-shot delete: delete from user_role where user_id=?
2018-04-27 10:16:19 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 10:16:19 - Version select: select id from role where id =?
2018-04-27 10:16:19 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 10:16:19 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 10:16:19 - Update 0: update role set name=? where id=?
2018-04-27 10:16:19 - Delete 0: delete from role where id=?
2018-04-27 10:16:19 - Identity insert: insert into role (name) values (?)
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42730828]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b09ce57]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b9aeedb]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ea8830]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@790ac3e0]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cee5365]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56d6a1b1]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44da7eb3]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d512652]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b96f8b0]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc0d9b4]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 10:16:19 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 10:16:19 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 10:16:19 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 10:16:19 - Version select: select id from department where id =?
2018-04-27 10:16:19 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 10:16:19 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 10:16:19 - Update 0: update department set name=? where id=?
2018-04-27 10:16:19 - Delete 0: delete from department where id=?
2018-04-27 10:16:19 - Identity insert: insert into department (name) values (?)
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@537ca28e]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35e2b89f]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c063cb9]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26bb92e2]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@658e7ead]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@762bf32d]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b1a30e5]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34fcd292]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@496cedbb]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3957d88b]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fba0dac]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 10:16:19 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 10:16:19 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 10:16:19 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 10:16:19 - Version select: select id from user where id =?
2018-04-27 10:16:19 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 10:16:19 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 10:16:19 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 10:16:19 - Delete 0: delete from user where id=?
2018-04-27 10:16:19 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be38eba]
2018-04-27 10:16:19 -Visiting attribute path : createDate
2018-04-27 10:16:19 -Visiting attribute path : department
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74b1838]
2018-04-27 10:16:19 -Visiting attribute path : department.name
2018-04-27 10:16:19 -Visiting attribute path : email
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Visiting attribute path : password
2018-04-27 10:16:19 -Visiting attribute path : roles
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7afe0e67]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@743bb39a]
2018-04-27 10:16:19 -Visiting attribute path : roles.name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632241f5]
2018-04-27 10:16:19 -Visiting attribute path : createDate
2018-04-27 10:16:19 -Visiting attribute path : department
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@577bfadb]
2018-04-27 10:16:19 -Visiting attribute path : department.name
2018-04-27 10:16:19 -Visiting attribute path : email
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Visiting attribute path : password
2018-04-27 10:16:19 -Visiting attribute path : roles
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54f2df29]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6df791a4]
2018-04-27 10:16:19 -Visiting attribute path : roles.name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@729cd862]
2018-04-27 10:16:19 -Visiting attribute path : createDate
2018-04-27 10:16:19 -Visiting attribute path : department
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@568f4faa]
2018-04-27 10:16:19 -Visiting attribute path : email
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Visiting attribute path : password
2018-04-27 10:16:19 -Visiting attribute path : roles
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c56644f]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@589dfa6f]
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43588265]
2018-04-27 10:16:19 -Visiting attribute path : createDate
2018-04-27 10:16:19 -Visiting attribute path : department
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@100d0218]
2018-04-27 10:16:19 -Visiting attribute path : email
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Visiting attribute path : password
2018-04-27 10:16:19 -Visiting attribute path : roles
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2774dcf4]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b829d5]
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5f29c6]
2018-04-27 10:16:19 -Visiting attribute path : createDate
2018-04-27 10:16:19 -Visiting attribute path : department
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5280688]
2018-04-27 10:16:19 -Visiting attribute path : email
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Visiting attribute path : password
2018-04-27 10:16:19 -Visiting attribute path : roles
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@643f6179]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ab6521]
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@328e4ec2]
2018-04-27 10:16:19 -Visiting attribute path : createDate
2018-04-27 10:16:19 -Visiting attribute path : department
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68fc9167]
2018-04-27 10:16:19 -Visiting attribute path : email
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Visiting attribute path : password
2018-04-27 10:16:19 -Visiting attribute path : roles
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52c46334]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12fccff0]
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d767218]
2018-04-27 10:16:19 -Visiting attribute path : createDate
2018-04-27 10:16:19 -Visiting attribute path : department
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a1b3ae]
2018-04-27 10:16:19 -Visiting attribute path : email
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Visiting attribute path : password
2018-04-27 10:16:19 -Visiting attribute path : roles
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54567b05]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5e2525]
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6546371]
2018-04-27 10:16:19 -Visiting attribute path : createDate
2018-04-27 10:16:19 -Visiting attribute path : department
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c2c44e8]
2018-04-27 10:16:19 -Visiting attribute path : email
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Visiting attribute path : password
2018-04-27 10:16:19 -Visiting attribute path : roles
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7103745]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@227a933d]
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25de8898]
2018-04-27 10:16:19 -Visiting attribute path : createDate
2018-04-27 10:16:19 -Visiting attribute path : department
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd737ea]
2018-04-27 10:16:19 -Visiting attribute path : email
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Visiting attribute path : password
2018-04-27 10:16:19 -Visiting attribute path : roles
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bc2ae16]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a0963be]
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d3bf8db]
2018-04-27 10:16:19 -Visiting attribute path : createDate
2018-04-27 10:16:19 -Visiting attribute path : department
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27bb4dc5]
2018-04-27 10:16:19 -Visiting attribute path : email
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Visiting attribute path : password
2018-04-27 10:16:19 -Visiting attribute path : roles
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@464ede1f]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64910b2d]
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1247c72e]
2018-04-27 10:16:19 -Visiting attribute path : createDate
2018-04-27 10:16:19 -Visiting attribute path : department
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f61e002]
2018-04-27 10:16:19 -Visiting attribute path : email
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Visiting attribute path : password
2018-04-27 10:16:19 -Visiting attribute path : roles
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@334540a0]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f179f51]
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 10:16:19 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 10:16:19 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 10:16:19 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c17bd0b]
2018-04-27 10:16:19 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36dafa24]
2018-04-27 10:16:19 -Visiting attribute path : name
2018-04-27 10:16:19 -Building LoadPlan...
2018-04-27 10:16:19 -processing queryspace <gen:0>
2018-04-27 10:16:19 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 10:16:19 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 10:16:19 -No alter strings for table : department
2018-04-27 10:16:19 -No alter strings for table : role
2018-04-27 10:16:19 -No alter strings for table : user
2018-04-27 10:16:19 -No alter strings for table : user_role
2018-04-27 10:16:19 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 10:16:19 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 10:16:20 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 10:16:20 -Checking 0 named HQL queries
2018-04-27 10:16:20 -Checking 0 named SQL queries
2018-04-27 10:16:20 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3db1ce78
2018-04-27 10:16:20 -Registering SessionFactory: dfd906ca-ec3f-4b69-89e9-a80b8e6efc10 (<unnamed>)
2018-04-27 10:16:20 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 10:16:20 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 10:16:20 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 10:16:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:16:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=53.2 ms, state=CONNECTED}]
2018-04-27 10:16:20 -init trackerLocator [192.168.71.161:22122]
2018-04-27 10:16:21 -Statistics initialized [enabled=false]
2018-04-27 10:16:21 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@702096ef
2018-04-27 10:16:21 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 10:16:21 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 10:16:21 -throwQueryException() : no errors
2018-04-27 10:16:21 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 10:16:21 -select << begin [level=1, statement=select]
2018-04-27 10:16:21 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 10:16:21 -Resolved : t -> user0_.id
2018-04-27 10:16:21 -Resolved : t -> user0_.id
2018-04-27 10:16:21 -getDataType() : name -> org.hibernate.type.StringType@322204dc
2018-04-27 10:16:21 -Resolved : t.name -> user0_.name
2018-04-27 10:16:21 -select : finishing up [level=1, statement=select]
2018-04-27 10:16:21 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 10:16:21 -Using FROM fragment [user user0_]
2018-04-27 10:16:21 -select >> end [level=1, statement=select]
2018-04-27 10:16:21 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@322204dc}

2018-04-27 10:16:21 -throwQueryException() : no errors
2018-04-27 10:16:21 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 10:16:21 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 10:16:21 -throwQueryException() : no errors
2018-04-27 10:16:21 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 10:16:21 -throwQueryException() : no errors
2018-04-27 10:16:21 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 10:16:21 -select << begin [level=1, statement=select]
2018-04-27 10:16:21 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 10:16:21 -Resolved : t -> user0_.id
2018-04-27 10:16:21 -Resolved : t -> user0_.id
2018-04-27 10:16:21 -getDataType() : name -> org.hibernate.type.StringType@322204dc
2018-04-27 10:16:21 -Resolved : t.name -> user0_.name
2018-04-27 10:16:21 -Resolved : t -> user0_.id
2018-04-27 10:16:21 -getDataType() : email -> org.hibernate.type.StringType@322204dc
2018-04-27 10:16:21 -Resolved : t.email -> user0_.email
2018-04-27 10:16:21 -select : finishing up [level=1, statement=select]
2018-04-27 10:16:21 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 10:16:21 -Using FROM fragment [user user0_]
2018-04-27 10:16:21 -select >> end [level=1, statement=select]
2018-04-27 10:16:21 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@322204dc}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@322204dc}

2018-04-27 10:16:21 -throwQueryException() : no errors
2018-04-27 10:16:21 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 10:16:21 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 10:16:21 -throwQueryException() : no errors
2018-04-27 10:16:21 -Using SLF4J as the default logging framework
2018-04-27 10:16:21 --Dio.netty.eventLoopThreads: 4
2018-04-27 10:16:21 --Dio.netty.leakDetection.level: simple
2018-04-27 10:16:21 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 10:16:21 -Platform: Windows
2018-04-27 10:16:21 --Dio.netty.noUnsafe: false
2018-04-27 10:16:21 -Java version: 8
2018-04-27 10:16:21 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 10:16:21 -sun.misc.Unsafe.copyMemory: available
2018-04-27 10:16:21 -java.nio.Buffer.address: available
2018-04-27 10:16:21 -direct buffer constructor: available
2018-04-27 10:16:21 -java.nio.Bits.unaligned: available, true
2018-04-27 10:16:21 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 10:16:21 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 10:16:21 -sun.misc.Unsafe: available
2018-04-27 10:16:21 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 10:16:21 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 10:16:21 --Dio.netty.noPreferDirect: false
2018-04-27 10:16:21 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 10:16:21 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 10:16:21 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 10:16:21 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@225e09f0
2018-04-27 10:16:21 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 10:16:21 -Using Slf4j logging framework
2018-04-27 10:16:21 -Starting UnsafeSupport init in Java 1.8
2018-04-27 10:16:21 -Unsafe is available
2018-04-27 10:16:21 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 10:16:21 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 10:16:21 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 10:16:21 --Dio.netty.allocator.pageSize: 8192
2018-04-27 10:16:21 --Dio.netty.allocator.maxOrder: 11
2018-04-27 10:16:21 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 10:16:21 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 10:16:21 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 10:16:21 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 10:16:21 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 10:16:21 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 10:16:21 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 10:16:21 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 10:16:21 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 10:16:22 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 10:16:22 -Neo4jMappingContext initialisation completed
2018-04-27 10:16:22 -Neo4jMappingContext initialisation completed
2018-04-27 10:16:23 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 10:16:23 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 10:16:23 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 10:16:23 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 10:16:23 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 10:16:23 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 10:16:24 -Opened connection [connectionId{localValue:1, serverValue:19}] to 192.168.71.151:27017
2018-04-27 10:16:24 -Checking status of 192.168.71.151:27017
2018-04-27 10:16:24 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=9745342}
2018-04-27 10:16:24 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=9.7 ms, state=CONNECTED}]
2018-04-27 10:16:24 -Opened connection [connectionId{localValue:2, serverValue:20}] to 192.168.71.151:27017
2018-04-27 10:16:24 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:20}] to server 192.168.71.151:27017
2018-04-27 10:16:24 -Command execution completed
2018-04-27 10:16:24 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 10:16:24 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 10:16:24 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 10:16:24 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 10:16:24 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 10:16:24 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 10:16:24 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 10:16:24 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 10:16:24 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 10:16:24 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 10:16:24 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 10:16:24 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 10:16:24 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 10:16:24 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 10:16:24 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 10:16:24 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 10:16:24 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 10:16:24 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 10:16:24 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 10:16:24 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 10:16:24 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 10:16:24 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 10:16:24 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 10:16:24 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 10:16:24 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 10:16:24 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 10:16:24 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 10:16:24 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 10:16:24 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 10:16:24 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 10:16:24 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 10:16:24 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 10:16:24 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 10:16:24 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 10:16:24 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 10:16:24 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 10:16:24 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 10:16:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 10:16:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 10:16:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 10:16:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 10:16:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 10:16:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 10:16:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 10:16:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 10:16:24 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 10:16:24 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 10:16:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 10:16:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 10:16:25 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 10:16:25 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 10:16:25 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 10:16:25 -Loaded expression factory via original TCCL
2018-04-27 10:16:25 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 10:16:25 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 10:16:25 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 10:16:25 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 10:16:25 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 10:16:25 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 10:16:25 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 10:16:25 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 10:16:25 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 10:16:25 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 10:16:25 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 10:16:25 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 10:16:25 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 10:16:25 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 10:16:25 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 10:16:25 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 10:16:26 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@82ea68c: startup date [Fri Apr 27 10:16:13 GMT+08:00 2018]; root of context hierarchy
2018-04-27 10:16:26 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@82ea68c: startup date [Fri Apr 27 10:16:13 GMT+08:00 2018]; root of context hierarchy
2018-04-27 10:16:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 10:16:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 10:16:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 10:16:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 10:16:26 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 10:16:26 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 10:16:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 10:16:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 10:16:27 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 10:16:27 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 10:16:27 -Registering beans for JMX exposure on startup
2018-04-27 10:16:27 -Registering beans for JMX exposure on startup
2018-04-27 10:16:27 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 10:16:27 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 10:16:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 10:16:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 10:16:27 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 10:16:27 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 10:16:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 10:16:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 10:16:27 -Starting beans in phase 2147483647
2018-04-27 10:16:27 -Starting beans in phase 2147483647
2018-04-27 10:16:27 -Context refreshed
2018-04-27 10:16:27 -Context refreshed
2018-04-27 10:16:27 -Found 1 custom documentation plugin(s)
2018-04-27 10:16:27 -Found 1 custom documentation plugin(s)
2018-04-27 10:16:27 -Scanning for api listing references
2018-04-27 10:16:27 -Scanning for api listing references
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:27 -Generating unique operation named: updateUsingPOST_1
2018-04-27 10:16:27 -Generating unique operation named: updateUsingPOST_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: createUsingGET_1
2018-04-27 10:16:28 -Generating unique operation named: createUsingGET_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: createUsingHEAD_1
2018-04-27 10:16:28 -Generating unique operation named: createUsingHEAD_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: createUsingPOST_1
2018-04-27 10:16:28 -Generating unique operation named: createUsingPOST_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: createUsingPUT_1
2018-04-27 10:16:28 -Generating unique operation named: createUsingPUT_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: createUsingPATCH_1
2018-04-27 10:16:28 -Generating unique operation named: createUsingPATCH_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: createUsingDELETE_1
2018-04-27 10:16:28 -Generating unique operation named: createUsingDELETE_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 10:16:28 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: createUsingTRACE_1
2018-04-27 10:16:28 -Generating unique operation named: createUsingTRACE_1
2018-04-27 10:16:28 -Generating unique operation named: deleteUsingGET_1
2018-04-27 10:16:28 -Generating unique operation named: deleteUsingGET_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingGET_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingGET_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingHEAD_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingHEAD_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingPOST_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingPOST_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingPUT_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingPUT_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingPATCH_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingPATCH_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingDELETE_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingDELETE_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingTRACE_1
2018-04-27 10:16:28 -Generating unique operation named: listUsingTRACE_1
2018-04-27 10:16:28 -Generating unique operation named: saveUsingPOST_1
2018-04-27 10:16:28 -Generating unique operation named: saveUsingPOST_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: showUsingGET_1
2018-04-27 10:16:28 -Generating unique operation named: showUsingGET_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: showUsingHEAD_1
2018-04-27 10:16:28 -Generating unique operation named: showUsingHEAD_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: showUsingPOST_1
2018-04-27 10:16:28 -Generating unique operation named: showUsingPOST_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: showUsingPUT_1
2018-04-27 10:16:28 -Generating unique operation named: showUsingPUT_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: showUsingPATCH_1
2018-04-27 10:16:28 -Generating unique operation named: showUsingPATCH_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: showUsingDELETE_1
2018-04-27 10:16:28 -Generating unique operation named: showUsingDELETE_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 10:16:28 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: showUsingTRACE_1
2018-04-27 10:16:28 -Generating unique operation named: showUsingTRACE_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: updateUsingGET_1
2018-04-27 10:16:28 -Generating unique operation named: updateUsingGET_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 10:16:28 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: updateUsingPOST_2
2018-04-27 10:16:28 -Generating unique operation named: updateUsingPOST_2
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: updateUsingPUT_1
2018-04-27 10:16:28 -Generating unique operation named: updateUsingPUT_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 10:16:28 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 10:16:28 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 10:16:28 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 10:16:28 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 10:16:28 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 10:16:28 -Generating unique operation named: updateUsingPOST_3
2018-04-27 10:16:28 -Generating unique operation named: updateUsingPOST_3
2018-04-27 10:16:28 -Started FastdfsTests in 15.716 seconds (JVM running for 18.22)
2018-04-27 10:16:28 -获取到Tracker连接地址/192.168.71.161:22122
2018-04-27 10:16:28 -connect to /192.168.71.161:22122 soTimeout=1501 connectTimeout=601
2018-04-27 10:16:28 -对地址/192.168.71.161:22122发出交易请求TrackerGetFetchStorageCommand
2018-04-27 10:16:28 -Setting default value: false
2018-04-27 10:16:28 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 10:16:28 -    No conversion required, value is already a Boolean
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 10:16:28 -    Converted to Byte value '0'
2018-04-27 10:16:28 -Setting default value:  
2018-04-27 10:16:28 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 10:16:28 -    No conversion required, value is already a Character
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 10:16:28 -    Converted to Double value '0.0'
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 10:16:28 -    Converted to Float value '0.0'
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 10:16:28 -    No conversion required, value is already a Integer
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 10:16:28 -    Converted to Long value '0'
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 10:16:28 -    Converted to Short value '0'
2018-04-27 10:16:28 -Setting default value: 0.0
2018-04-27 10:16:28 -Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2018-04-27 10:16:28 -    No conversion required, value is already a BigDecimal
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'BigInteger' value '0' to type 'BigInteger'
2018-04-27 10:16:28 -    No conversion required, value is already a BigInteger
2018-04-27 10:16:28 -Setting default value: false
2018-04-27 10:16:28 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 10:16:28 -    No conversion required, value is already a Boolean
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 10:16:28 -    Converted to Byte value '0'
2018-04-27 10:16:28 -Setting default value:  
2018-04-27 10:16:28 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 10:16:28 -    No conversion required, value is already a Character
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 10:16:28 -    Converted to Double value '0.0'
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 10:16:28 -    Converted to Float value '0.0'
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 10:16:28 -    No conversion required, value is already a Integer
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 10:16:28 -    Converted to Long value '0'
2018-04-27 10:16:28 -Setting default value: 0
2018-04-27 10:16:28 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 10:16:28 -    Converted to Short value '0'
2018-04-27 10:16:28 -Setting default value: 
2018-04-27 10:16:28 -Converting 'String' value '' to type 'String'
2018-04-27 10:16:28 -Setting default value: [Z@48301bfe
2018-04-27 10:16:28 -Converting 'boolean[]' value '[Z@48301bfe' to type 'boolean[]'
2018-04-27 10:16:28 -    No conversion required, value is already a boolean[]
2018-04-27 10:16:28 -Setting default value: [B@6dd1f239
2018-04-27 10:16:28 -Converting 'byte[]' value '[B@6dd1f239' to type 'byte[]'
2018-04-27 10:16:28 -    No conversion required, value is already a byte[]
2018-04-27 10:16:28 -Setting default value: [C@28d97205
2018-04-27 10:16:28 -Converting 'char[]' value '[C@28d97205' to type 'char[]'
2018-04-27 10:16:28 -    No conversion required, value is already a char[]
2018-04-27 10:16:28 -Setting default value: [D@7e58b0f6
2018-04-27 10:16:28 -Converting 'double[]' value '[D@7e58b0f6' to type 'double[]'
2018-04-27 10:16:28 -    No conversion required, value is already a double[]
2018-04-27 10:16:28 -Setting default value: [F@367fbb28
2018-04-27 10:16:28 -Converting 'float[]' value '[F@367fbb28' to type 'float[]'
2018-04-27 10:16:28 -    No conversion required, value is already a float[]
2018-04-27 10:16:28 -Setting default value: [I@54ddd7e4
2018-04-27 10:16:28 -Converting 'int[]' value '[I@54ddd7e4' to type 'int[]'
2018-04-27 10:16:28 -    No conversion required, value is already a int[]
2018-04-27 10:16:28 -Setting default value: [J@37f7ce20
2018-04-27 10:16:28 -Converting 'long[]' value '[J@37f7ce20' to type 'long[]'
2018-04-27 10:16:28 -    No conversion required, value is already a long[]
2018-04-27 10:16:28 -Setting default value: [S@c931728
2018-04-27 10:16:28 -Converting 'short[]' value '[S@c931728' to type 'short[]'
2018-04-27 10:16:28 -    No conversion required, value is already a short[]
2018-04-27 10:16:28 -Setting default value: [Ljava.math.BigDecimal;@477e5b69
2018-04-27 10:16:28 -Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@477e5b69' to type 'BigDecimal[]'
2018-04-27 10:16:28 -    No conversion required, value is already a BigDecimal[]
2018-04-27 10:16:28 -Setting default value: [Ljava.math.BigInteger;@74a991cf
2018-04-27 10:16:28 -Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@74a991cf' to type 'BigInteger[]'
2018-04-27 10:16:28 -    No conversion required, value is already a BigInteger[]
2018-04-27 10:16:28 -Setting default value: [Ljava.lang.Boolean;@5507584d
2018-04-27 10:16:28 -Converting 'Boolean[]' value '[Ljava.lang.Boolean;@5507584d' to type 'Boolean[]'
2018-04-27 10:16:28 -    No conversion required, value is already a Boolean[]
2018-04-27 10:16:28 -Setting default value: [Ljava.lang.Byte;@1e5e2e06
2018-04-27 10:16:28 -Converting 'Byte[]' value '[Ljava.lang.Byte;@1e5e2e06' to type 'Byte[]'
2018-04-27 10:16:28 -    No conversion required, value is already a Byte[]
2018-04-27 10:16:28 -Setting default value: [Ljava.lang.Character;@26c1f3eb
2018-04-27 10:16:28 -Converting 'Character[]' value '[Ljava.lang.Character;@26c1f3eb' to type 'Character[]'
2018-04-27 10:16:28 -    No conversion required, value is already a Character[]
2018-04-27 10:16:28 -Setting default value: [Ljava.lang.Double;@79982bcc
2018-04-27 10:16:28 -Converting 'Double[]' value '[Ljava.lang.Double;@79982bcc' to type 'Double[]'
2018-04-27 10:16:28 -    No conversion required, value is already a Double[]
2018-04-27 10:16:28 -Setting default value: [Ljava.lang.Float;@16b2d182
2018-04-27 10:16:28 -Converting 'Float[]' value '[Ljava.lang.Float;@16b2d182' to type 'Float[]'
2018-04-27 10:16:28 -    No conversion required, value is already a Float[]
2018-04-27 10:16:28 -Setting default value: [Ljava.lang.Integer;@79f3f34c
2018-04-27 10:16:28 -Converting 'Integer[]' value '[Ljava.lang.Integer;@79f3f34c' to type 'Integer[]'
2018-04-27 10:16:28 -    No conversion required, value is already a Integer[]
2018-04-27 10:16:28 -Setting default value: [Ljava.lang.Long;@50841932
2018-04-27 10:16:28 -Converting 'Long[]' value '[Ljava.lang.Long;@50841932' to type 'Long[]'
2018-04-27 10:16:28 -    No conversion required, value is already a Long[]
2018-04-27 10:16:28 -Setting default value: [Ljava.lang.Short;@68fa8ea5
2018-04-27 10:16:28 -Converting 'Short[]' value '[Ljava.lang.Short;@68fa8ea5' to type 'Short[]'
2018-04-27 10:16:28 -    No conversion required, value is already a Short[]
2018-04-27 10:16:28 -Setting default value: [Ljava.lang.String;@68c47cf9
2018-04-27 10:16:28 -Converting 'String[]' value '[Ljava.lang.String;@68c47cf9' to type 'String[]'
2018-04-27 10:16:28 -    No conversion required, value is already a String[]
2018-04-27 10:16:28 -Setting default value: [Ljava.lang.Class;@ecb8b3e
2018-04-27 10:16:28 -Converting 'Class[]' value '[Ljava.lang.Class;@ecb8b3e' to type 'Class[]'
2018-04-27 10:16:28 -    No conversion required, value is already a Class[]
2018-04-27 10:16:28 -Setting default value: [Ljava.util.Date;@7e764e5c
2018-04-27 10:16:28 -Converting 'Date[]' value '[Ljava.util.Date;@7e764e5c' to type 'Date[]'
2018-04-27 10:16:28 -    No conversion required, value is already a Date[]
2018-04-27 10:16:28 -Setting default value: [Ljava.util.Calendar;@92de794
2018-04-27 10:16:28 -Converting 'Calendar[]' value '[Ljava.util.Calendar;@92de794' to type 'Calendar[]'
2018-04-27 10:16:28 -    No conversion required, value is already a Calendar[]
2018-04-27 10:16:28 -Setting default value: [Ljava.io.File;@17a5ae7b
2018-04-27 10:16:28 -Converting 'java.io.File[]' value '[Ljava.io.File;@17a5ae7b' to type 'java.io.File[]'
2018-04-27 10:16:28 -    No conversion required, value is already a java.io.File[]
2018-04-27 10:16:28 -Setting default value: [Ljava.sql.Date;@183a84f4
2018-04-27 10:16:28 -Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@183a84f4' to type 'java.sql.Date[]'
2018-04-27 10:16:28 -    No conversion required, value is already a java.sql.Date[]
2018-04-27 10:16:28 -Setting default value: [Ljava.sql.Time;@11771fd6
2018-04-27 10:16:28 -Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@11771fd6' to type 'java.sql.Time[]'
2018-04-27 10:16:28 -    No conversion required, value is already a java.sql.Time[]
2018-04-27 10:16:28 -Setting default value: [Ljava.sql.Timestamp;@4d142b53
2018-04-27 10:16:28 -Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@4d142b53' to type 'java.sql.Timestamp[]'
2018-04-27 10:16:28 -    No conversion required, value is already a java.sql.Timestamp[]
2018-04-27 10:16:28 -Setting default value: [Ljava.net.URL;@128ca7af
2018-04-27 10:16:28 -Converting 'java.net.URL[]' value '[Ljava.net.URL;@128ca7af' to type 'java.net.URL[]'
2018-04-27 10:16:28 -    No conversion required, value is already a java.net.URL[]
2018-04-27 10:16:28 -发出交易请求..报文头为ProtoHead [contentLength=60, cmd=103, status=0]
2018-04-27 10:16:28 -交易参数为[103, 114, 111, 117, 112, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 48, 48, 47, 48, 48, 47, 48, 48, 47, 119, 75, 104, 72, 110, 108, 114, 105, 104, 54, 121, 65, 77, 108, 55, 85, 65, 65, 68, 103, 57, 79, 83, 73, 112, 117, 111, 57, 54, 55, 46, 112, 110, 103]
2018-04-27 10:16:28 -服务端返回报文头ProtoHead [contentLength=39, cmd=100, status=0]
2018-04-27 10:16:28 -dump class=com.github.tobato.fastdfs.domain.StorageNodeInfo
2018-04-27 10:16:28 -----------------------------------------
2018-04-27 10:16:28 -FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]
2018-04-27 10:16:28 -FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]
2018-04-27 10:16:28 -FieldMateData [field=port, index=2, max=0, size=8, offsize=31]
2018-04-27 10:16:28 -设置值是 FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]group1
2018-04-27 10:16:28 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 10:16:28 -Converting 'String' value 'group1' to type 'String'
2018-04-27 10:16:28 -设置值是 FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]192.168.71.158
2018-04-27 10:16:28 -Convert string '192.168.71.158' to class 'java.lang.String'
2018-04-27 10:16:28 -Converting 'String' value '192.168.71.158' to type 'String'
2018-04-27 10:16:28 -设置值是 FieldMateData [field=port, index=2, max=0, size=8, offsize=31]23000
2018-04-27 10:16:28 -Converting 'Integer' value '23000' to type 'Integer'
2018-04-27 10:16:28 -    No conversion required, value is already a Integer
2018-04-27 10:16:28 -connect to /192.168.71.158:23000 soTimeout=1501 connectTimeout=601
2018-04-27 10:16:28 -对地址/192.168.71.158:23000发出交易请求StorageDeleteFileCommand
2018-04-27 10:16:28 -发出交易请求..报文头为ProtoHead [contentLength=60, cmd=12, status=0]
2018-04-27 10:16:28 -交易参数为[103, 114, 111, 117, 112, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 48, 48, 47, 48, 48, 47, 48, 48, 47, 119, 75, 104, 72, 110, 108, 114, 105, 104, 54, 121, 65, 77, 108, 55, 85, 65, 65, 68, 103, 57, 79, 83, 73, 112, 117, 111, 57, 54, 55, 46, 112, 110, 103]
2018-04-27 10:16:28 -服务端返回报文头ProtoHead [contentLength=0, cmd=100, status=0]
2018-04-27 10:16:28 -Closing org.springframework.web.context.support.GenericWebApplicationContext@82ea68c: startup date [Fri Apr 27 10:16:13 GMT+08:00 2018]; root of context hierarchy
2018-04-27 10:16:28 -Closing org.springframework.web.context.support.GenericWebApplicationContext@82ea68c: startup date [Fri Apr 27 10:16:13 GMT+08:00 2018]; root of context hierarchy
2018-04-27 10:16:28 -Stopping beans in phase 2147483647
2018-04-27 10:16:28 -Stopping beans in phase 2147483647
2018-04-27 10:16:28 -Unregistering JMX-exposed beans on shutdown
2018-04-27 10:16:28 -Unregistering JMX-exposed beans on shutdown
2018-04-27 10:16:28 -Unregistering JMX-exposed beans
2018-04-27 10:16:28 -Unregistering JMX-exposed beans
2018-04-27 10:16:28 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 10:16:28 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 10:16:28 -disconnect from Socket[addr=/192.168.71.161,port=22122,localport=60792]
2018-04-27 10:16:28 -disconnect from Socket[addr=/192.168.71.158,port=23000,localport=60793]
2018-04-27 10:16:28 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 10:16:28 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 10:16:28 -HHH000031: Closing
2018-04-27 10:16:28 -External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
2018-04-27 10:16:28 -Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2018-04-27 10:16:28 -Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2018-04-27 10:16:28 -{dataSource-1} closed
2018-04-27 10:16:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:16:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=42.7 ms, state=CONNECTED}]
2018-04-27 10:16:37 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@36e28f1b 
2018-04-27 10:16:37 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@3b9fa064 
2018-04-27 10:16:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:16:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=34.3 ms, state=CONNECTED}]
2018-04-27 10:16:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:16:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=27.6 ms, state=CONNECTED}]
2018-04-27 10:17:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:17:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=22.3 ms, state=CONNECTED}]
2018-04-27 10:17:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:17:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=18.0 ms, state=CONNECTED}]
2018-04-27 10:17:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:17:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=14.6 ms, state=CONNECTED}]
2018-04-27 10:17:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:17:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=11.8 ms, state=CONNECTED}]
2018-04-27 10:17:37 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@36e28f1b 
2018-04-27 10:17:37 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@3b9fa064 
2018-04-27 10:17:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:17:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=9.7 ms, state=CONNECTED}]
2018-04-27 10:17:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:17:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=8.1 ms, state=CONNECTED}]
2018-04-27 10:18:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:18:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.6 ms, state=CONNECTED}]
2018-04-27 10:18:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:18:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=7.6 ms, state=CONNECTED}]
2018-04-27 10:18:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:18:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.2 ms, state=CONNECTED}]
2018-04-27 10:18:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:18:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.1 ms, state=CONNECTED}]
2018-04-27 10:18:37 -disconnect from Socket[addr=/192.168.71.161,port=22122,localport=60679]
2018-04-27 10:18:37 -disconnect from Socket[addr=/192.168.71.158,port=23000,localport=60680]
2018-04-27 10:18:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:18:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.3 ms, state=CONNECTED}]
2018-04-27 10:18:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:18:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.6 ms, state=CONNECTED}]
2018-04-27 10:19:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:19:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.0 ms, state=CONNECTED}]
2018-04-27 10:19:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:19:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.6 ms, state=CONNECTED}]
2018-04-27 10:19:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:19:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 10:19:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:19:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 10:19:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:19:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 10:19:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:19:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 10:20:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:20:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 10:20:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:20:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 10:20:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:20:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 10:20:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:20:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 10:20:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:20:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:20:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:20:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:21:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:21:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:21:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:21:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:21:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:21:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:21:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:21:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:21:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:21:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:21:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:21:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:22:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:22:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:22:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:22:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:22:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:22:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:22:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:22:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:22:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:22:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:22:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:22:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:23:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:23:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:23:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:23:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:23:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:23:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:23:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:23:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 10:23:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:23:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 10:23:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:23:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:24:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:24:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:24:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:24:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:24:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:24:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:24:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:24:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:24:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:24:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:24:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:24:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:25:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:25:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:25:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:25:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:25:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:25:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:25:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:25:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:25:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:25:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:25:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:25:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:26:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:26:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:26:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:26:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:26:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:26:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:26:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:26:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:26:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:26:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:26:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:26:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:27:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:27:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:27:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:27:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:27:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:27:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:27:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:27:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:27:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:27:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:27:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:27:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:28:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:28:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:28:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:28:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:28:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:28:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:28:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:28:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:28:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:28:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:28:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:28:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 10:29:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:29:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 10:29:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:29:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:29:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:29:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:29:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:29:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:29:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:29:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:29:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:29:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:30:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:30:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:30:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:30:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:30:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:30:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:30:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:30:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:30:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:30:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:30:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:30:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:31:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:31:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:31:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:31:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:31:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:31:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:31:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:31:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 10:31:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:31:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:31:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:31:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:32:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:32:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:32:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:32:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:32:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:32:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:32:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:32:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:32:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:32:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:32:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:32:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:33:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:33:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:33:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:33:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:33:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:33:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:33:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:33:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:33:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:33:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:33:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:33:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:34:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:34:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:34:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:34:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:34:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:34:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:34:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:34:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:34:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:34:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:34:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:34:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:35:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:35:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:35:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:35:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:35:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:35:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:35:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:35:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:35:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:35:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:35:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:35:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:36:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:36:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:36:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:36:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:36:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:36:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:36:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:36:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:36:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:36:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:36:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:36:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:37:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:37:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:37:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:37:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:37:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:37:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:37:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:37:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:37:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:37:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:37:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:37:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:38:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:38:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:38:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:38:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:38:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:38:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:38:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:38:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:38:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:38:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:38:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:38:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:39:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:39:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:39:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:39:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.1 ms, state=CONNECTED}]
2018-04-27 10:39:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:39:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.2 ms, state=CONNECTED}]
2018-04-27 10:39:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:39:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.5 ms, state=CONNECTED}]
2018-04-27 10:39:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:39:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2018-04-27 10:39:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:39:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.0 ms, state=CONNECTED}]
2018-04-27 10:40:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:40:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2018-04-27 10:40:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:40:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 10:40:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:40:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 10:40:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:40:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 10:40:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:40:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 10:40:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:40:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 10:41:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:41:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:41:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:41:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:41:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:41:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:41:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:41:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:41:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:41:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:41:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:41:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:42:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:42:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:42:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:42:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:42:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:42:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:42:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:42:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:42:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:42:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:42:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:42:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:43:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:43:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:43:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:43:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 10:43:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:43:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:43:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:43:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:43:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:43:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:43:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:43:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:44:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:44:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:44:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:44:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:44:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:44:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:44:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:44:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:44:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:44:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:44:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:44:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:45:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:45:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:45:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:45:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:45:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:45:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:45:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:45:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:45:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:45:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:45:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:45:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:46:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:46:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:46:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:46:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:46:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:46:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:46:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:46:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:46:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:46:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:46:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:46:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:47:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:47:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:47:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:47:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:47:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:47:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:47:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:47:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:47:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:47:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:47:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:47:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:48:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:48:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:48:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:48:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:48:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:48:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:48:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:48:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:48:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:48:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:48:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:48:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:49:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:49:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:49:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:49:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:49:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:49:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:49:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:49:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:49:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:49:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:49:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:49:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:50:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:50:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:50:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:50:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:50:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:50:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:50:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:50:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:50:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:50:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:50:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:50:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:51:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:51:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:51:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:51:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:51:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:51:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:51:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:51:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:51:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:51:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:51:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:51:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:52:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:52:00 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:52:10 -Checking status of 192.168.71.151:27017
2018-04-27 10:52:10 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:52:20 -Checking status of 192.168.71.151:27017
2018-04-27 10:52:20 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:52:30 -Checking status of 192.168.71.151:27017
2018-04-27 10:52:30 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:52:40 -Checking status of 192.168.71.151:27017
2018-04-27 10:52:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:52:50 -Checking status of 192.168.71.151:27017
2018-04-27 10:52:50 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:53:00 -Checking status of 192.168.71.151:27017
2018-04-27 10:53:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:53:11 -Checking status of 192.168.71.151:27017
2018-04-27 10:53:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:53:21 -Checking status of 192.168.71.151:27017
2018-04-27 10:53:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:53:31 -Checking status of 192.168.71.151:27017
2018-04-27 10:53:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:53:41 -Checking status of 192.168.71.151:27017
2018-04-27 10:53:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:53:51 -Checking status of 192.168.71.151:27017
2018-04-27 10:53:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 10:54:01 -Checking status of 192.168.71.151:27017
2018-04-27 10:54:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:54:11 -Checking status of 192.168.71.151:27017
2018-04-27 10:54:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:54:21 -Checking status of 192.168.71.151:27017
2018-04-27 10:54:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:54:31 -Checking status of 192.168.71.151:27017
2018-04-27 10:54:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:54:41 -Checking status of 192.168.71.151:27017
2018-04-27 10:54:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:54:51 -Checking status of 192.168.71.151:27017
2018-04-27 10:54:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:55:01 -Checking status of 192.168.71.151:27017
2018-04-27 10:55:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:55:11 -Checking status of 192.168.71.151:27017
2018-04-27 10:55:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:55:21 -Checking status of 192.168.71.151:27017
2018-04-27 10:55:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:55:31 -Checking status of 192.168.71.151:27017
2018-04-27 10:55:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:55:41 -Checking status of 192.168.71.151:27017
2018-04-27 10:55:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:55:51 -Checking status of 192.168.71.151:27017
2018-04-27 10:55:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:56:01 -Checking status of 192.168.71.151:27017
2018-04-27 10:56:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:56:11 -Checking status of 192.168.71.151:27017
2018-04-27 10:56:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:56:21 -Checking status of 192.168.71.151:27017
2018-04-27 10:56:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:56:31 -Checking status of 192.168.71.151:27017
2018-04-27 10:56:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:56:41 -Checking status of 192.168.71.151:27017
2018-04-27 10:56:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:56:51 -Checking status of 192.168.71.151:27017
2018-04-27 10:56:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:57:01 -Checking status of 192.168.71.151:27017
2018-04-27 10:57:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:57:11 -Checking status of 192.168.71.151:27017
2018-04-27 10:57:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 10:57:21 -Checking status of 192.168.71.151:27017
2018-04-27 10:57:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 10:57:31 -Checking status of 192.168.71.151:27017
2018-04-27 10:57:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 10:57:41 -Checking status of 192.168.71.151:27017
2018-04-27 10:57:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:57:51 -Checking status of 192.168.71.151:27017
2018-04-27 10:57:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:58:01 -Checking status of 192.168.71.151:27017
2018-04-27 10:58:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:58:11 -Checking status of 192.168.71.151:27017
2018-04-27 10:58:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:58:21 -Checking status of 192.168.71.151:27017
2018-04-27 10:58:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:58:31 -Checking status of 192.168.71.151:27017
2018-04-27 10:58:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:58:41 -Checking status of 192.168.71.151:27017
2018-04-27 10:58:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 10:58:51 -Checking status of 192.168.71.151:27017
2018-04-27 10:58:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 10:59:01 -Checking status of 192.168.71.151:27017
2018-04-27 10:59:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 10:59:11 -Checking status of 192.168.71.151:27017
2018-04-27 10:59:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 10:59:21 -Checking status of 192.168.71.151:27017
2018-04-27 10:59:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:59:31 -Checking status of 192.168.71.151:27017
2018-04-27 10:59:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 10:59:41 -Checking status of 192.168.71.151:27017
2018-04-27 10:59:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 10:59:51 -Checking status of 192.168.71.151:27017
2018-04-27 10:59:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:00:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:00:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 11:00:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:00:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.0 ms, state=CONNECTED}]
2018-04-27 11:00:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:00:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.5 ms, state=CONNECTED}]
2018-04-27 11:00:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:00:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.7 ms, state=CONNECTED}]
2018-04-27 11:00:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:00:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2018-04-27 11:00:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:00:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.8 ms, state=CONNECTED}]
2018-04-27 11:01:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:01:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2018-04-27 11:01:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:01:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 11:01:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:01:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 11:01:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:01:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 11:01:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:01:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 11:01:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:01:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 11:02:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:02:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:02:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:02:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:02:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:02:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:02:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:02:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:02:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:02:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:02:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:02:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:03:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:03:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:03:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:03:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:03:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:03:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:03:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:03:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:03:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:03:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:03:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:03:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:04:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:04:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:04:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:04:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:04:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:04:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:04:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:04:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:04:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:04:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:04:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:04:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:05:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:05:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:05:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:05:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:05:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:05:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:05:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:05:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 11:05:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:05:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 11:05:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:05:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 11:06:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:06:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 11:06:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:06:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:06:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:06:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:06:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:06:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:06:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:06:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 11:06:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:06:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:07:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:07:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:07:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:07:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:07:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:07:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:07:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:07:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:07:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:07:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:07:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:07:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:08:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:08:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:08:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:08:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:08:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:08:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:08:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:08:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:08:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:08:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:08:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:08:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:09:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:09:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:09:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:09:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:09:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:09:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:09:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:09:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:09:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:09:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:09:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:09:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:10:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:10:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:10:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:10:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:10:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:10:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:10:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:10:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:10:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:10:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:10:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:10:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:11:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:11:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:11:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:11:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:11:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:11:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:11:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:11:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:11:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:11:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:11:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:11:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:12:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:12:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:12:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:12:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:12:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:12:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:12:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:12:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:12:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:12:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:12:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:12:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:13:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:13:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 11:13:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:13:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 11:13:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:13:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:13:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:13:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 11:13:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:13:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 11:13:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:13:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:14:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:14:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:14:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:14:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:14:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:14:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 11:14:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:14:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 11:14:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:14:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:14:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:14:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:15:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:15:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:15:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:15:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 11:15:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:15:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 11:15:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:15:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:15:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:15:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 11:15:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:15:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 11:16:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:16:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 11:16:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:16:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 11:16:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:16:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 11:16:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:16:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 11:16:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:16:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 11:16:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:16:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:17:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:17:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 11:17:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:17:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:17:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:17:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:17:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:17:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 11:17:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:17:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 11:17:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:17:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:18:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:18:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:18:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:18:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:18:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:18:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:18:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:18:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:18:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:18:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:18:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:18:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:19:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:19:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:19:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:19:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:19:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:19:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:19:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:19:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:19:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:19:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:19:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:19:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:20:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:20:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:20:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:20:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:20:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:20:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:20:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:20:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:20:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:20:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:20:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:20:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:21:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:21:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:21:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:21:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:21:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:21:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:21:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:21:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:21:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:21:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:21:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:21:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:22:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:22:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:22:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:22:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:22:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:22:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:22:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:22:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:22:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:22:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:22:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:22:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:23:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:23:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:23:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:23:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:23:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:23:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:23:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:23:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:23:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:23:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:23:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:23:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:24:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:24:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:24:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:24:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:24:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:24:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:24:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:24:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:24:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:24:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:24:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:24:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:25:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:25:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:25:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:25:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:25:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:25:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:25:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:25:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:25:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:25:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:25:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:25:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:26:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:26:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:26:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:26:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:26:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:26:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:26:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:26:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:26:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:26:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:26:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:26:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:27:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:27:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:27:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:27:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:27:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:27:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:27:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:27:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:27:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:27:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:27:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:27:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:28:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:28:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:28:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:28:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:28:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:28:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:28:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:28:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:28:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:28:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:28:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:28:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:29:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:29:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:29:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:29:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:29:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:29:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:29:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:29:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:29:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:29:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:29:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:29:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:30:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:30:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:30:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:30:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 11:30:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:30:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:30:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:30:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:30:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:30:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:30:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:30:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:31:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:31:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:31:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:31:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:31:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:31:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:31:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:31:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:31:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:31:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:31:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:31:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:32:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:32:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:32:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:32:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:32:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:32:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:32:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:32:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:32:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:32:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:32:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:32:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:33:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:33:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:33:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:33:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:33:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:33:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:33:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:33:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:33:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:33:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:33:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:33:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:34:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:34:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:34:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:34:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:34:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:34:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:34:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:34:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:34:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:34:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:34:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:34:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:35:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:35:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:35:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:35:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:35:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:35:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:35:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:35:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:35:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:35:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:35:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:35:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:36:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:36:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:36:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:36:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:36:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:36:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:36:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:36:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:36:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:36:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:36:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:36:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:37:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:37:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:37:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:37:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:37:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:37:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:37:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:37:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:37:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:37:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 11:37:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:37:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 11:38:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:38:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 11:38:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:38:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 11:38:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:38:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 11:38:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:38:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:38:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:38:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:38:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:38:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:39:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:39:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:39:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:39:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:39:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:39:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:39:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:39:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:39:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:39:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:39:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:39:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:40:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:40:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:40:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:40:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:40:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:40:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:40:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:40:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:40:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:40:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:40:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:40:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:41:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:41:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:41:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:41:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:41:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:41:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:41:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:41:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:41:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:41:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:41:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:41:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:42:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:42:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:42:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:42:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:42:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:42:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:42:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:42:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:42:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:42:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:42:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:42:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:43:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:43:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:43:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:43:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:43:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:43:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:43:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:43:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:43:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:43:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:43:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:43:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:44:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:44:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:44:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:44:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:44:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:44:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:44:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:44:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:44:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:44:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:44:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:44:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:45:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:45:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:45:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:45:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:45:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:45:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:45:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:45:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:45:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:45:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:45:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:45:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:46:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:46:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:46:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:46:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:46:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:46:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:46:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:46:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:46:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:46:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:46:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:46:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:47:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:47:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:47:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:47:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:47:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:47:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:47:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:47:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:47:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:47:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:47:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:47:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:48:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:48:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:48:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:48:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:48:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:48:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:48:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:48:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:48:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:48:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:48:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:48:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:49:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:49:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:49:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:49:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:49:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:49:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:49:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:49:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:49:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:49:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:49:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:49:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:50:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:50:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:50:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:50:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:50:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:50:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:50:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:50:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:50:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:50:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:50:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:50:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:51:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:51:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:51:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:51:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:51:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:51:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:51:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:51:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:51:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:51:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:51:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:51:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:52:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:52:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:52:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:52:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:52:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:52:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:52:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:52:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:52:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:52:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:52:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:52:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:53:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:53:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:53:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:53:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:53:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:53:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:53:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:53:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:53:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:53:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:53:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:53:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:54:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:54:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:54:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:54:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:54:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:54:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:54:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:54:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:54:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:54:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:54:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:54:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:55:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:55:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:55:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:55:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:55:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:55:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:55:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:55:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:55:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:55:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:55:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:55:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:56:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:56:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:56:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:56:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:56:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:56:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:56:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:56:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 11:56:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:56:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:56:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:56:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:57:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:57:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:57:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:57:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:57:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:57:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:57:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:57:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:57:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:57:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 11:57:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:57:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:58:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:58:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:58:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:58:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 11:58:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:58:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:58:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:58:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 11:58:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:58:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 11:58:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:58:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:59:01 -Checking status of 192.168.71.151:27017
2018-04-27 11:59:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:59:11 -Checking status of 192.168.71.151:27017
2018-04-27 11:59:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:59:21 -Checking status of 192.168.71.151:27017
2018-04-27 11:59:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 11:59:31 -Checking status of 192.168.71.151:27017
2018-04-27 11:59:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:59:41 -Checking status of 192.168.71.151:27017
2018-04-27 11:59:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 11:59:51 -Checking status of 192.168.71.151:27017
2018-04-27 11:59:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:00:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:00:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:00:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:00:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:00:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:00:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:00:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:00:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:00:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:00:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:00:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:00:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:01:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:01:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:01:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:01:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:01:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:01:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:01:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:01:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:01:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:01:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:01:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:01:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:02:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:02:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:02:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:02:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:02:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:02:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:02:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:02:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:02:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:02:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:02:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:02:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:03:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:03:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:03:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:03:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:03:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:03:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:03:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:03:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:03:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:03:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:03:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:03:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:04:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:04:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:04:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:04:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:04:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:04:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:04:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:04:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:04:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:04:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.7 ms, state=CONNECTED}]
2018-04-27 12:04:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:04:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2018-04-27 12:05:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:05:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 12:05:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:05:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 12:05:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:05:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 12:05:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:05:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 12:05:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:05:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:05:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:05:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:06:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:06:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:06:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:06:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:06:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:06:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:06:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:06:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:06:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:06:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:06:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:06:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:07:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:07:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:07:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:07:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:07:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:07:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:07:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:07:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:07:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:07:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:07:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:07:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:08:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:08:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:08:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:08:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:08:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:08:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:08:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:08:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:08:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:08:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:08:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:08:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:09:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:09:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:09:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:09:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:09:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:09:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:09:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:09:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:09:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:09:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:09:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:09:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:10:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:10:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:10:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:10:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:10:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:10:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:10:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:10:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:10:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:10:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:10:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:10:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:11:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:11:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:11:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:11:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:11:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:11:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:11:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:11:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:11:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:11:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:11:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:11:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:12:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:12:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:12:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:12:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:12:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:12:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:12:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:12:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:12:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:12:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:12:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:12:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:13:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:13:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:13:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:13:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:13:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:13:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:13:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:13:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:13:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:13:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:13:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:13:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:14:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:14:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:14:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:14:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:14:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:14:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:14:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:14:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:14:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:14:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:14:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:14:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:15:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:15:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:15:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:15:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:15:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:15:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:15:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:15:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:15:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:15:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:15:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:15:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:16:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:16:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:16:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:16:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:16:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:16:21 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:16:31 -Checking status of 192.168.71.151:27017
2018-04-27 12:16:31 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:16:41 -Checking status of 192.168.71.151:27017
2018-04-27 12:16:41 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:16:51 -Checking status of 192.168.71.151:27017
2018-04-27 12:16:51 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:17:01 -Checking status of 192.168.71.151:27017
2018-04-27 12:17:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:17:11 -Checking status of 192.168.71.151:27017
2018-04-27 12:17:11 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:17:21 -Checking status of 192.168.71.151:27017
2018-04-27 12:17:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.3 ms, state=CONNECTED}]
2018-04-27 12:17:25 -Starting FastdfsTests on DESKTOP-4VE2VST with PID 17664 (started by Qiang in Y:\MyGit\demo)
2018-04-27 12:17:25 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 12:17:25 -The following profiles are active: dev
2018-04-27 12:17:25 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 12:17:25 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:17:25 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 12:17:25 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:17:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:17:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:17:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:17:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:17:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:17:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:17:27 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 12:17:27 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 12:17:27 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 12:17:27 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 12:17:27 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 12:17:27 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 12:17:27 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 12:17:27 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 12:17:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:17:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 12:17:27 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 12:17:28 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 12:17:28 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 12:17:28 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 12:17:28 -Loaded expression factory via original TCCL
2018-04-27 12:17:28 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 12:17:28 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 12:17:28 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 12:17:28 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 12:17:28 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 12:17:28 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 12:17:28 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 12:17:28 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 12:17:28 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 12:17:28 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 12:17:28 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 12:17:28 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 12:17:28 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 12:17:28 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 12:17:28 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 12:17:28 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 12:17:28 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$eaac022f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:28 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$eaac022f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7949ab3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7949ab3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$db6eedbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$db6eedbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 12:17:29 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 12:17:29 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 12:17:29 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 12:17:29 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 12:17:29 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 12:17:29 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 12:17:29 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 12:17:29 -Starting Post-processing phase
2018-04-27 12:17:29 -Building annotation class map
2018-04-27 12:17:29 -Building interface class map for 8 classes
2018-04-27 12:17:29 - - Actor implements 0 interfaces
2018-04-27 12:17:29 - - Role implements 1 interfaces
2018-04-27 12:17:29 -   - java.io.Serializable
2018-04-27 12:17:29 - - MongoUser implements 0 interfaces
2018-04-27 12:17:29 - - Role implements 0 interfaces
2018-04-27 12:17:29 - - Movie implements 0 interfaces
2018-04-27 12:17:29 - - Department implements 0 interfaces
2018-04-27 12:17:29 - - BookBean implements 0 interfaces
2018-04-27 12:17:29 - - User implements 1 interfaces
2018-04-27 12:17:29 -   - java.io.Serializable
2018-04-27 12:17:29 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 12:17:29 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 12:17:29 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 12:17:29 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 12:17:29 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 12:17:29 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 12:17:29 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 12:17:29 -Post-processing: com.example.ren.model.BookBean
2018-04-27 12:17:29 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 12:17:29 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 12:17:29 -Checking for @Transient classes....
2018-04-27 12:17:29 -Registering converters and deregistering transient fields and methods....
2018-04-27 12:17:29 -Post-processing complete
2018-04-27 12:17:29 -Building Index Metadata.
2018-04-27 12:17:29 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:29 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:17:30 -{dataSource-1} inited
2018-04-27 12:17:30 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 12:17:30 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 12:17:30 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 12:17:29",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:512029640, ConnectTime:"2018-04-27 12:17:30", UseCount:1, LastActiveTime:"2018-04-27 12:17:30"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 12:17:30 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 12:17:30 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 12:17:30 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 12:17:30 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 12:17:30 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 12:17:30 -HHH000206: hibernate.properties not found
2018-04-27 12:17:31 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 12:17:31 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 12:17:31 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 12:17:31 -Adding type registration boolean -> org.hibernate.type.BooleanType@41bfa9e9
2018-04-27 12:17:31 -Adding type registration boolean -> org.hibernate.type.BooleanType@41bfa9e9
2018-04-27 12:17:31 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@41bfa9e9
2018-04-27 12:17:31 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@202d9236
2018-04-27 12:17:31 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@7ecda95b
2018-04-27 12:17:31 -Adding type registration yes_no -> org.hibernate.type.YesNoType@713a35c5
2018-04-27 12:17:31 -Adding type registration byte -> org.hibernate.type.ByteType@59498d94
2018-04-27 12:17:31 -Adding type registration byte -> org.hibernate.type.ByteType@59498d94
2018-04-27 12:17:31 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@59498d94
2018-04-27 12:17:31 -Adding type registration character -> org.hibernate.type.CharacterType@357bc488
2018-04-27 12:17:31 -Adding type registration char -> org.hibernate.type.CharacterType@357bc488
2018-04-27 12:17:31 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@357bc488
2018-04-27 12:17:31 -Adding type registration short -> org.hibernate.type.ShortType@1af4955e
2018-04-27 12:17:31 -Adding type registration short -> org.hibernate.type.ShortType@1af4955e
2018-04-27 12:17:31 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1af4955e
2018-04-27 12:17:31 -Adding type registration integer -> org.hibernate.type.IntegerType@ee21292
2018-04-27 12:17:31 -Adding type registration int -> org.hibernate.type.IntegerType@ee21292
2018-04-27 12:17:31 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ee21292
2018-04-27 12:17:31 -Adding type registration long -> org.hibernate.type.LongType@35dece42
2018-04-27 12:17:31 -Adding type registration long -> org.hibernate.type.LongType@35dece42
2018-04-27 12:17:31 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@35dece42
2018-04-27 12:17:31 -Adding type registration float -> org.hibernate.type.FloatType@5efeb117
2018-04-27 12:17:31 -Adding type registration float -> org.hibernate.type.FloatType@5efeb117
2018-04-27 12:17:31 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5efeb117
2018-04-27 12:17:31 -Adding type registration double -> org.hibernate.type.DoubleType@5d508d22
2018-04-27 12:17:31 -Adding type registration double -> org.hibernate.type.DoubleType@5d508d22
2018-04-27 12:17:31 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5d508d22
2018-04-27 12:17:31 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@182e7eda
2018-04-27 12:17:31 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@182e7eda
2018-04-27 12:17:31 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@faea4da
2018-04-27 12:17:31 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@faea4da
2018-04-27 12:17:31 -Adding type registration string -> org.hibernate.type.StringType@b4732dc
2018-04-27 12:17:31 -Adding type registration java.lang.String -> org.hibernate.type.StringType@b4732dc
2018-04-27 12:17:31 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@168ad26f
2018-04-27 12:17:31 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@778a1250
2018-04-27 12:17:31 -Adding type registration url -> org.hibernate.type.UrlType@4d464510
2018-04-27 12:17:31 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@4d464510
2018-04-27 12:17:31 -Adding type registration Duration -> org.hibernate.type.DurationType@1a950fdd
2018-04-27 12:17:31 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1a950fdd
2018-04-27 12:17:31 -Adding type registration Instant -> org.hibernate.type.InstantType@16f0ec18
2018-04-27 12:17:31 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@16f0ec18
2018-04-27 12:17:31 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@359066bc
2018-04-27 12:17:31 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@359066bc
2018-04-27 12:17:31 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b481bf5
2018-04-27 12:17:31 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b481bf5
2018-04-27 12:17:31 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@8e25d3f
2018-04-27 12:17:31 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@8e25d3f
2018-04-27 12:17:31 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b57c345
2018-04-27 12:17:31 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b57c345
2018-04-27 12:17:31 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21ea996f
2018-04-27 12:17:31 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21ea996f
2018-04-27 12:17:31 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e3f0aea
2018-04-27 12:17:31 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e3f0aea
2018-04-27 12:17:31 -Adding type registration date -> org.hibernate.type.DateType@32a4ecbe
2018-04-27 12:17:31 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@32a4ecbe
2018-04-27 12:17:31 -Adding type registration time -> org.hibernate.type.TimeType@196624bf
2018-04-27 12:17:31 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@196624bf
2018-04-27 12:17:31 -Adding type registration timestamp -> org.hibernate.type.TimestampType@5934153e
2018-04-27 12:17:31 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5934153e
2018-04-27 12:17:31 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5934153e
2018-04-27 12:17:31 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f3e9fbb
2018-04-27 12:17:31 -Adding type registration calendar -> org.hibernate.type.CalendarType@7b53b1ad
2018-04-27 12:17:31 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b53b1ad
2018-04-27 12:17:31 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b53b1ad
2018-04-27 12:17:31 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fbd3e75
2018-04-27 12:17:31 -Adding type registration locale -> org.hibernate.type.LocaleType@1c628f6a
2018-04-27 12:17:31 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1c628f6a
2018-04-27 12:17:31 -Adding type registration currency -> org.hibernate.type.CurrencyType@7bee8621
2018-04-27 12:17:31 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7bee8621
2018-04-27 12:17:31 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f9ab79d
2018-04-27 12:17:31 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f9ab79d
2018-04-27 12:17:31 -Adding type registration class -> org.hibernate.type.ClassType@4792f119
2018-04-27 12:17:31 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4792f119
2018-04-27 12:17:31 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36c7cbe1
2018-04-27 12:17:31 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36c7cbe1
2018-04-27 12:17:31 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@794f11cd
2018-04-27 12:17:31 -Adding type registration binary -> org.hibernate.type.BinaryType@499ee966
2018-04-27 12:17:31 -Adding type registration byte[] -> org.hibernate.type.BinaryType@499ee966
2018-04-27 12:17:31 -Adding type registration [B -> org.hibernate.type.BinaryType@499ee966
2018-04-27 12:17:31 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c1f8dbd
2018-04-27 12:17:31 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c1f8dbd
2018-04-27 12:17:31 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c1f8dbd
2018-04-27 12:17:31 -Adding type registration row_version -> org.hibernate.type.RowVersionType@1d6751e3
2018-04-27 12:17:31 -Adding type registration image -> org.hibernate.type.ImageType@4b56b031
2018-04-27 12:17:31 -Adding type registration characters -> org.hibernate.type.CharArrayType@733e6df7
2018-04-27 12:17:31 -Adding type registration char[] -> org.hibernate.type.CharArrayType@733e6df7
2018-04-27 12:17:31 -Adding type registration [C -> org.hibernate.type.CharArrayType@733e6df7
2018-04-27 12:17:31 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32227215
2018-04-27 12:17:31 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32227215
2018-04-27 12:17:31 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32227215
2018-04-27 12:17:31 -Adding type registration text -> org.hibernate.type.TextType@59845579
2018-04-27 12:17:31 -Adding type registration ntext -> org.hibernate.type.NTextType@4d4436d0
2018-04-27 12:17:31 -Adding type registration blob -> org.hibernate.type.BlobType@4e140497
2018-04-27 12:17:31 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4e140497
2018-04-27 12:17:31 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@31acfd4e
2018-04-27 12:17:31 -Adding type registration clob -> org.hibernate.type.ClobType@58eac00e
2018-04-27 12:17:31 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58eac00e
2018-04-27 12:17:31 -Adding type registration nclob -> org.hibernate.type.NClobType@415d88de
2018-04-27 12:17:31 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@415d88de
2018-04-27 12:17:31 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@310a7859
2018-04-27 12:17:31 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4c07d1fc
2018-04-27 12:17:31 -Adding type registration serializable -> org.hibernate.type.SerializableType@4c531172
2018-04-27 12:17:31 -Adding type registration object -> org.hibernate.type.ObjectType@1f71194d
2018-04-27 12:17:31 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1f71194d
2018-04-27 12:17:31 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7a083b96
2018-04-27 12:17:31 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6da4feeb
2018-04-27 12:17:31 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c604965
2018-04-27 12:17:31 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@57f8951a
2018-04-27 12:17:31 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c17c0f8
2018-04-27 12:17:31 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@260e3837
2018-04-27 12:17:31 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@88b76f2
2018-04-27 12:17:31 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b4872bc
2018-04-27 12:17:31 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 12:17:31 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 12:17:31 -JDBC version : 4.0
2018-04-27 12:17:31 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 12:17:31 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 12:17:31 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 12:17:31 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 12:17:31 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 12:17:31 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 12:17:31 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 12:17:31 -Import with entity name Department
2018-04-27 12:17:31 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 12:17:31 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:31 -MetadataSourceProcessor property id with lazy=false
2018-04-27 12:17:31 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 12:17:31 -building SimpleValue for id
2018-04-27 12:17:31 -Building property id
2018-04-27 12:17:31 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:31 -MetadataSourceProcessor property name with lazy=false
2018-04-27 12:17:31 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 12:17:31 -building SimpleValue for name
2018-04-27 12:17:31 -Building property name
2018-04-27 12:17:31 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 12:17:31 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 12:17:31 -Import with entity name Role
2018-04-27 12:17:31 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 12:17:31 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:31 -MetadataSourceProcessor property id with lazy=false
2018-04-27 12:17:31 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 12:17:31 -building SimpleValue for id
2018-04-27 12:17:31 -Building property id
2018-04-27 12:17:31 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:31 -MetadataSourceProcessor property name with lazy=false
2018-04-27 12:17:31 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 12:17:31 -building SimpleValue for name
2018-04-27 12:17:31 -Building property name
2018-04-27 12:17:31 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 12:17:31 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 12:17:31 -Import with entity name User
2018-04-27 12:17:31 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 12:17:31 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:31 -MetadataSourceProcessor property id with lazy=false
2018-04-27 12:17:31 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 12:17:31 -building SimpleValue for id
2018-04-27 12:17:31 -Building property id
2018-04-27 12:17:31 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:31 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 12:17:31 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 12:17:31 -building SimpleValue for createDate
2018-04-27 12:17:31 -Building property createDate
2018-04-27 12:17:31 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 12:17:31 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:31 -Building property department
2018-04-27 12:17:31 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:31 -MetadataSourceProcessor property email with lazy=false
2018-04-27 12:17:31 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 12:17:31 -building SimpleValue for email
2018-04-27 12:17:31 -Building property email
2018-04-27 12:17:31 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:31 -MetadataSourceProcessor property name with lazy=false
2018-04-27 12:17:31 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 12:17:31 -building SimpleValue for name
2018-04-27 12:17:31 -Building property name
2018-04-27 12:17:31 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:31 -MetadataSourceProcessor property password with lazy=false
2018-04-27 12:17:31 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 12:17:31 -building SimpleValue for password
2018-04-27 12:17:31 -Building property password
2018-04-27 12:17:31 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:17:32 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 12:17:32 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 12:17:32 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 12:17:32 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 12:17:32 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 12:17:32 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 12:17:32 -Building property roles
2018-04-27 12:17:32 -Starting fillSimpleValue for id
2018-04-27 12:17:32 -Starting fillSimpleValue for name
2018-04-27 12:17:32 -Starting fillSimpleValue for id
2018-04-27 12:17:32 -Starting fillSimpleValue for name
2018-04-27 12:17:32 -Starting fillSimpleValue for id
2018-04-27 12:17:32 -Starting fillSimpleValue for createDate
2018-04-27 12:17:32 -Starting fillSimpleValue for email
2018-04-27 12:17:32 -Starting fillSimpleValue for name
2018-04-27 12:17:32 -Starting fillSimpleValue for password
2018-04-27 12:17:32 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 12:17:32 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 12:17:32 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 12:17:32 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 12:17:32 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 12:17:32 -Mapped collection key: user_id, element: role_id
2018-04-27 12:17:32 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 12:17:32 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 12:17:32 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 12:17:32 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 12:17:32 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 12:17:32 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 12:17:32 -Building session factory
2018-04-27 12:17:32 -SessionFactory name : null
2018-04-27 12:17:32 -Automatic flush during beforeCompletion(): enabled
2018-04-27 12:17:32 -Automatic session close at end of transaction: disabled
2018-04-27 12:17:32 -Statistics: disabled
2018-04-27 12:17:32 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 12:17:32 -Default entity-mode: pojo
2018-04-27 12:17:32 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 12:17:32 -Allow initialization of lazy state outside session : disabled
2018-04-27 12:17:32 -Using BatchFetchStyle : LEGACY
2018-04-27 12:17:32 -Default batch fetch size: -1
2018-04-27 12:17:32 -Maximum outer join fetch depth: 2
2018-04-27 12:17:32 -Default null ordering: NONE
2018-04-27 12:17:32 -Order SQL updates by primary key: disabled
2018-04-27 12:17:32 -Order SQL inserts for batching: disabled
2018-04-27 12:17:32 -multi-tenancy strategy : NONE
2018-04-27 12:17:32 -JTA Track by Thread: enabled
2018-04-27 12:17:32 -Query language substitutions: {}
2018-04-27 12:17:32 -JPA query language strict compliance: disabled
2018-04-27 12:17:32 -Named query checking : enabled
2018-04-27 12:17:32 -Second-level cache: enabled
2018-04-27 12:17:32 -Second-level query cache: disabled
2018-04-27 12:17:32 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2d4a3e13
2018-04-27 12:17:32 -Second-level cache region prefix: null
2018-04-27 12:17:32 -Optimize second-level cache for minimal puts: disabled
2018-04-27 12:17:32 -Structured second-level cache entries: disabled
2018-04-27 12:17:32 -Second-level cache direct-reference entries: disabled
2018-04-27 12:17:32 -Automatic eviction of collection cache: disabled
2018-04-27 12:17:32 -JDBC batch size: 15
2018-04-27 12:17:32 -JDBC batch updates for versioned data: enabled
2018-04-27 12:17:32 -Scrollable result sets: enabled
2018-04-27 12:17:32 -Wrap result sets: disabled
2018-04-27 12:17:32 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 12:17:32 -JDBC result set fetch size: null
2018-04-27 12:17:32 -Connection release mode: ON_CLOSE
2018-04-27 12:17:32 -Generate SQL with comments: disabled
2018-04-27 12:17:32 -Session factory constructed with filter configurations : {}
2018-04-27 12:17:32 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\test-classes;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-test\2.0.0.RELEASE\spring-boot-starter-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test\2.0.0.RELEASE\spring-boot-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.0.0.RELEASE\spring-boot-test-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;X:\Maven\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;X:\Maven\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;X:\Maven\repository\org\assertj\assertj-core\3.9.1\assertj-core-3.9.1.jar;X:\Maven\repository\org\mockito\mockito-core\2.15.0\mockito-core-2.15.0.jar;X:\Maven\repository\net\bytebuddy\byte-buddy\1.7.10\byte-buddy-1.7.10.jar;X:\Maven\repository\net\bytebuddy\byte-buddy-agent\1.7.10\byte-buddy-agent-1.7.10.jar;X:\Maven\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;X:\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;X:\Maven\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;X:\Maven\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;X:\Maven\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;X:\Maven\repository\org\xmlunit\xmlunit-core\2.5.1\xmlunit-core-2.5.1.jar;X:\Maven\repository\org\springframework\spring-test\4.3.6.RELEASE\spring-test-4.3.6.RELEASE.jar;X:\Maven\repository\junit\junit\4.12\junit-4.12.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 com.example.ren.fastdfs.FastdfsTests,delete, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6dae70f9, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=17664, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d81e83a, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 12:17:29",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:512029640, ConnectTime:"2018-04-27 12:17:30", UseCount:2, LastActiveTime:"2018-04-27 12:17:31"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 12:17:32 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 12:17:32 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 12:17:32 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 12:17:32 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 12:17:32 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 12:17:32 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 12:17:32 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 12:17:32 -Loaded expression factory via original TCCL
2018-04-27 12:17:32 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 12:17:32 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 12:17:32 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 12:17:32 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 12:17:32 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 12:17:32 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 12:17:32 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 12:17:32 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 12:17:32 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 12:17:32 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 12:17:32 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 12:17:32 -Skipping JACC integration as it was not enabled
2018-04-27 12:17:32 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 12:17:32 -Instantiated session factory
2018-04-27 12:17:32 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 12:17:32 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 12:17:32 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 12:17:32 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 12:17:32 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 12:17:32 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 12:17:32 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 12:17:32 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 12:17:32 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 12:17:32 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 12:17:32 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 12:17:32 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 12:17:32 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 12:17:32 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 12:17:32 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 12:17:32 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 12:17:32 - One-shot delete: delete from user_role where user_id=?
2018-04-27 12:17:32 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 12:17:32 - Version select: select id from role where id =?
2018-04-27 12:17:32 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 12:17:32 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 12:17:32 - Update 0: update role set name=? where id=?
2018-04-27 12:17:32 - Delete 0: delete from role where id=?
2018-04-27 12:17:32 - Identity insert: insert into role (name) values (?)
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7404ddca]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c579202]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11c7a0b4]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@653a5967]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@766b6d02]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c4f4330]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63485d7]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59a09be]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb2fb2b]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796c68bf]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7163e3]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:17:32 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:17:32 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:17:32 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 12:17:32 - Version select: select id from department where id =?
2018-04-27 12:17:32 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 12:17:32 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 12:17:32 - Update 0: update department set name=? where id=?
2018-04-27 12:17:32 - Delete 0: delete from department where id=?
2018-04-27 12:17:32 - Identity insert: insert into department (name) values (?)
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7606bd03]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4927e5]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ff0e6d4]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a7aa4f]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b322873]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ad889be]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63de4fa]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18907af2]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cfd5cd2]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d7740f0]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1de7f898]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:17:32 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:17:32 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:17:32 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 12:17:32 - Version select: select id from user where id =?
2018-04-27 12:17:32 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 12:17:32 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 12:17:32 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 12:17:32 - Delete 0: delete from user where id=?
2018-04-27 12:17:32 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b6def36]
2018-04-27 12:17:32 -Visiting attribute path : createDate
2018-04-27 12:17:32 -Visiting attribute path : department
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e37fb82]
2018-04-27 12:17:32 -Visiting attribute path : department.name
2018-04-27 12:17:32 -Visiting attribute path : email
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Visiting attribute path : password
2018-04-27 12:17:32 -Visiting attribute path : roles
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21733cbe]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31228d83]
2018-04-27 12:17:32 -Visiting attribute path : roles.name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99c4993]
2018-04-27 12:17:32 -Visiting attribute path : createDate
2018-04-27 12:17:32 -Visiting attribute path : department
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9729a97]
2018-04-27 12:17:32 -Visiting attribute path : department.name
2018-04-27 12:17:32 -Visiting attribute path : email
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Visiting attribute path : password
2018-04-27 12:17:32 -Visiting attribute path : roles
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36463b09]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4adf3582]
2018-04-27 12:17:32 -Visiting attribute path : roles.name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64bba0eb]
2018-04-27 12:17:32 -Visiting attribute path : createDate
2018-04-27 12:17:32 -Visiting attribute path : department
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25ae1f80]
2018-04-27 12:17:32 -Visiting attribute path : email
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Visiting attribute path : password
2018-04-27 12:17:32 -Visiting attribute path : roles
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54f2df29]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6df791a4]
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655203e3]
2018-04-27 12:17:32 -Visiting attribute path : createDate
2018-04-27 12:17:32 -Visiting attribute path : department
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@729cd862]
2018-04-27 12:17:32 -Visiting attribute path : email
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Visiting attribute path : password
2018-04-27 12:17:32 -Visiting attribute path : roles
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23b71d24]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@568f4faa]
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c56644f]
2018-04-27 12:17:32 -Visiting attribute path : createDate
2018-04-27 12:17:32 -Visiting attribute path : department
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43588265]
2018-04-27 12:17:32 -Visiting attribute path : email
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Visiting attribute path : password
2018-04-27 12:17:32 -Visiting attribute path : roles
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f8667bb]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@100d0218]
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2774dcf4]
2018-04-27 12:17:32 -Visiting attribute path : createDate
2018-04-27 12:17:32 -Visiting attribute path : department
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c5f29c6]
2018-04-27 12:17:32 -Visiting attribute path : email
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Visiting attribute path : password
2018-04-27 12:17:32 -Visiting attribute path : roles
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4baf997]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5280688]
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@643f6179]
2018-04-27 12:17:32 -Visiting attribute path : createDate
2018-04-27 12:17:32 -Visiting attribute path : department
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@328e4ec2]
2018-04-27 12:17:32 -Visiting attribute path : email
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Visiting attribute path : password
2018-04-27 12:17:32 -Visiting attribute path : roles
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7757025d]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68fc9167]
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c46334]
2018-04-27 12:17:32 -Visiting attribute path : createDate
2018-04-27 12:17:32 -Visiting attribute path : department
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d767218]
2018-04-27 12:17:32 -Visiting attribute path : email
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Visiting attribute path : password
2018-04-27 12:17:32 -Visiting attribute path : roles
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@510da778]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a1b3ae]
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54567b05]
2018-04-27 12:17:32 -Visiting attribute path : createDate
2018-04-27 12:17:32 -Visiting attribute path : department
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6546371]
2018-04-27 12:17:32 -Visiting attribute path : email
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Visiting attribute path : password
2018-04-27 12:17:32 -Visiting attribute path : roles
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b458cd6]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c2c44e8]
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7103745]
2018-04-27 12:17:32 -Visiting attribute path : createDate
2018-04-27 12:17:32 -Visiting attribute path : department
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25de8898]
2018-04-27 12:17:32 -Visiting attribute path : email
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Visiting attribute path : password
2018-04-27 12:17:32 -Visiting attribute path : roles
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bfb93cf]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd737ea]
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc2ae16]
2018-04-27 12:17:32 -Visiting attribute path : createDate
2018-04-27 12:17:32 -Visiting attribute path : department
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d3bf8db]
2018-04-27 12:17:32 -Visiting attribute path : email
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Visiting attribute path : password
2018-04-27 12:17:32 -Visiting attribute path : roles
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49e7e8f1]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27bb4dc5]
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:17:32 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 12:17:32 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 12:17:32 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68d6f48e]
2018-04-27 12:17:32 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c96403e]
2018-04-27 12:17:32 -Visiting attribute path : name
2018-04-27 12:17:32 -Building LoadPlan...
2018-04-27 12:17:32 -processing queryspace <gen:0>
2018-04-27 12:17:32 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 12:17:32 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 12:17:32 -No alter strings for table : department
2018-04-27 12:17:32 -No alter strings for table : role
2018-04-27 12:17:32 -No alter strings for table : user
2018-04-27 12:17:32 -No alter strings for table : user_role
2018-04-27 12:17:32 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 12:17:32 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 12:17:32 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 12:17:32 -Checking 0 named HQL queries
2018-04-27 12:17:32 -Checking 0 named SQL queries
2018-04-27 12:17:32 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ab63a04
2018-04-27 12:17:32 -Registering SessionFactory: f6028980-facd-4255-b81b-7df20eb1f5c7 (<unnamed>)
2018-04-27 12:17:32 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 12:17:32 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 12:17:32 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 12:17:33 -init trackerLocator [192.168.71.161:22122]
2018-04-27 12:17:33 -Statistics initialized [enabled=false]
2018-04-27 12:17:33 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@778c2e7c
2018-04-27 12:17:33 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 12:17:33 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 12:17:33 -throwQueryException() : no errors
2018-04-27 12:17:33 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 12:17:33 -select << begin [level=1, statement=select]
2018-04-27 12:17:33 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 12:17:33 -Resolved : t -> user0_.id
2018-04-27 12:17:33 -Resolved : t -> user0_.id
2018-04-27 12:17:33 -getDataType() : name -> org.hibernate.type.StringType@b4732dc
2018-04-27 12:17:33 -Resolved : t.name -> user0_.name
2018-04-27 12:17:33 -select : finishing up [level=1, statement=select]
2018-04-27 12:17:33 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 12:17:33 -Using FROM fragment [user user0_]
2018-04-27 12:17:33 -select >> end [level=1, statement=select]
2018-04-27 12:17:33 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@b4732dc}

2018-04-27 12:17:33 -throwQueryException() : no errors
2018-04-27 12:17:33 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 12:17:33 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 12:17:33 -throwQueryException() : no errors
2018-04-27 12:17:33 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 12:17:33 -throwQueryException() : no errors
2018-04-27 12:17:33 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 12:17:33 -select << begin [level=1, statement=select]
2018-04-27 12:17:33 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 12:17:33 -Resolved : t -> user0_.id
2018-04-27 12:17:33 -Resolved : t -> user0_.id
2018-04-27 12:17:33 -getDataType() : name -> org.hibernate.type.StringType@b4732dc
2018-04-27 12:17:33 -Resolved : t.name -> user0_.name
2018-04-27 12:17:33 -Resolved : t -> user0_.id
2018-04-27 12:17:33 -getDataType() : email -> org.hibernate.type.StringType@b4732dc
2018-04-27 12:17:33 -Resolved : t.email -> user0_.email
2018-04-27 12:17:33 -select : finishing up [level=1, statement=select]
2018-04-27 12:17:33 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 12:17:33 -Using FROM fragment [user user0_]
2018-04-27 12:17:33 -select >> end [level=1, statement=select]
2018-04-27 12:17:33 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@b4732dc}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@b4732dc}

2018-04-27 12:17:33 -throwQueryException() : no errors
2018-04-27 12:17:33 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 12:17:33 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 12:17:33 -throwQueryException() : no errors
2018-04-27 12:17:33 -Using SLF4J as the default logging framework
2018-04-27 12:17:33 --Dio.netty.eventLoopThreads: 4
2018-04-27 12:17:34 --Dio.netty.leakDetection.level: simple
2018-04-27 12:17:34 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 12:17:34 -Platform: Windows
2018-04-27 12:17:34 --Dio.netty.noUnsafe: false
2018-04-27 12:17:34 -Java version: 8
2018-04-27 12:17:34 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 12:17:34 -sun.misc.Unsafe.copyMemory: available
2018-04-27 12:17:34 -java.nio.Buffer.address: available
2018-04-27 12:17:34 -direct buffer constructor: available
2018-04-27 12:17:34 -java.nio.Bits.unaligned: available, true
2018-04-27 12:17:34 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 12:17:34 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 12:17:34 -sun.misc.Unsafe: available
2018-04-27 12:17:34 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 12:17:34 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 12:17:34 --Dio.netty.noPreferDirect: false
2018-04-27 12:17:34 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 12:17:34 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 12:17:34 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 12:17:34 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@448086ab
2018-04-27 12:17:34 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 12:17:34 -Using Slf4j logging framework
2018-04-27 12:17:34 -Starting UnsafeSupport init in Java 1.8
2018-04-27 12:17:34 -Unsafe is available
2018-04-27 12:17:34 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 12:17:34 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 12:17:34 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 12:17:34 --Dio.netty.allocator.pageSize: 8192
2018-04-27 12:17:34 --Dio.netty.allocator.maxOrder: 11
2018-04-27 12:17:34 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 12:17:34 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 12:17:34 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 12:17:34 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 12:17:34 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 12:17:34 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 12:17:34 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 12:17:34 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 12:17:34 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 12:17:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 12:17:34 -Neo4jMappingContext initialisation completed
2018-04-27 12:17:34 -Neo4jMappingContext initialisation completed
2018-04-27 12:17:35 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 12:17:35 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 12:17:35 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 12:17:35 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 12:17:36 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 12:17:36 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 12:17:36 -Opened connection [connectionId{localValue:1, serverValue:21}] to 192.168.71.151:27017
2018-04-27 12:17:36 -Checking status of 192.168.71.151:27017
2018-04-27 12:17:36 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3942671}
2018-04-27 12:17:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.9 ms, state=CONNECTED}]
2018-04-27 12:17:36 -Opened connection [connectionId{localValue:2, serverValue:22}] to 192.168.71.151:27017
2018-04-27 12:17:36 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:22}] to server 192.168.71.151:27017
2018-04-27 12:17:36 -Command execution completed
2018-04-27 12:17:37 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 12:17:37 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 12:17:37 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 12:17:37 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 12:17:37 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 12:17:37 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 12:17:37 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 12:17:37 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 12:17:37 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 12:17:37 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 12:17:37 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 12:17:37 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 12:17:37 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 12:17:37 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 12:17:37 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 12:17:37 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 12:17:37 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 12:17:37 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 12:17:37 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 12:17:37 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 12:17:37 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 12:17:37 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 12:17:37 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 12:17:37 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 12:17:37 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 12:17:37 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 12:17:37 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 12:17:37 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 12:17:37 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 12:17:37 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 12:17:37 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 12:17:37 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 12:17:37 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 12:17:37 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 12:17:37 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 12:17:37 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 12:17:37 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:17:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 12:17:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 12:17:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 12:17:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 12:17:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 12:17:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 12:17:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 12:17:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 12:17:37 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 12:17:37 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 12:17:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 12:17:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 12:17:38 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 12:17:38 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 12:17:38 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 12:17:38 -Loaded expression factory via original TCCL
2018-04-27 12:17:38 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 12:17:38 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 12:17:38 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 12:17:38 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 12:17:38 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 12:17:38 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 12:17:38 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 12:17:38 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 12:17:38 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 12:17:38 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 12:17:38 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 12:17:38 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 12:17:38 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 12:17:38 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 12:17:38 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 12:17:38 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 12:17:39 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 12:17:25 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:17:39 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 12:17:25 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:17:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:17:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:17:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:17:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:17:39 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 12:17:39 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 12:17:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:17:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:17:40 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 12:17:40 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 12:17:40 -Registering beans for JMX exposure on startup
2018-04-27 12:17:40 -Registering beans for JMX exposure on startup
2018-04-27 12:17:40 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 12:17:40 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 12:17:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 12:17:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 12:17:40 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 12:17:40 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 12:17:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 12:17:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 12:17:40 -Starting beans in phase 2147483647
2018-04-27 12:17:40 -Starting beans in phase 2147483647
2018-04-27 12:17:40 -Context refreshed
2018-04-27 12:17:40 -Context refreshed
2018-04-27 12:17:40 -Found 1 custom documentation plugin(s)
2018-04-27 12:17:40 -Found 1 custom documentation plugin(s)
2018-04-27 12:17:40 -Scanning for api listing references
2018-04-27 12:17:40 -Scanning for api listing references
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: updateUsingPOST_1
2018-04-27 12:17:41 -Generating unique operation named: updateUsingPOST_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: createUsingGET_1
2018-04-27 12:17:41 -Generating unique operation named: createUsingGET_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: createUsingHEAD_1
2018-04-27 12:17:41 -Generating unique operation named: createUsingHEAD_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: createUsingPOST_1
2018-04-27 12:17:41 -Generating unique operation named: createUsingPOST_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: createUsingPUT_1
2018-04-27 12:17:41 -Generating unique operation named: createUsingPUT_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: createUsingPATCH_1
2018-04-27 12:17:41 -Generating unique operation named: createUsingPATCH_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: createUsingDELETE_1
2018-04-27 12:17:41 -Generating unique operation named: createUsingDELETE_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 12:17:41 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: createUsingTRACE_1
2018-04-27 12:17:41 -Generating unique operation named: createUsingTRACE_1
2018-04-27 12:17:41 -Generating unique operation named: deleteUsingGET_1
2018-04-27 12:17:41 -Generating unique operation named: deleteUsingGET_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingGET_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingGET_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingHEAD_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingHEAD_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingPOST_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingPOST_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingPUT_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingPUT_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingPATCH_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingPATCH_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingDELETE_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingDELETE_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingTRACE_1
2018-04-27 12:17:41 -Generating unique operation named: listUsingTRACE_1
2018-04-27 12:17:41 -Generating unique operation named: saveUsingPOST_1
2018-04-27 12:17:41 -Generating unique operation named: saveUsingPOST_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: showUsingGET_1
2018-04-27 12:17:41 -Generating unique operation named: showUsingGET_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: showUsingHEAD_1
2018-04-27 12:17:41 -Generating unique operation named: showUsingHEAD_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: showUsingPOST_1
2018-04-27 12:17:41 -Generating unique operation named: showUsingPOST_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: showUsingPUT_1
2018-04-27 12:17:41 -Generating unique operation named: showUsingPUT_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: showUsingPATCH_1
2018-04-27 12:17:41 -Generating unique operation named: showUsingPATCH_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: showUsingDELETE_1
2018-04-27 12:17:41 -Generating unique operation named: showUsingDELETE_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 12:17:41 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: showUsingTRACE_1
2018-04-27 12:17:41 -Generating unique operation named: showUsingTRACE_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: updateUsingGET_1
2018-04-27 12:17:41 -Generating unique operation named: updateUsingGET_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 12:17:41 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: updateUsingPOST_2
2018-04-27 12:17:41 -Generating unique operation named: updateUsingPOST_2
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: updateUsingPUT_1
2018-04-27 12:17:41 -Generating unique operation named: updateUsingPUT_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 12:17:41 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 12:17:41 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 12:17:41 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:17:41 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 12:17:41 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 12:17:41 -Generating unique operation named: updateUsingPOST_3
2018-04-27 12:17:41 -Generating unique operation named: updateUsingPOST_3
2018-04-27 12:17:41 -Started FastdfsTests in 17.312 seconds (JVM running for 19.306)
2018-04-27 12:17:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:17:42 -获取到Tracker连接地址/192.168.71.161:22122
2018-04-27 12:17:42 -connect to /192.168.71.161:22122 soTimeout=1501 connectTimeout=601
2018-04-27 12:17:42 -对地址/192.168.71.161:22122发出交易请求TrackerGetFetchStorageCommand
2018-04-27 12:17:42 -Setting default value: false
2018-04-27 12:17:42 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 12:17:42 -    No conversion required, value is already a Boolean
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 12:17:42 -    Converted to Byte value '0'
2018-04-27 12:17:42 -Setting default value:  
2018-04-27 12:17:42 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 12:17:42 -    No conversion required, value is already a Character
2018-04-27 12:17:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=12.3 ms, state=CONNECTED}]
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 12:17:42 -    Converted to Double value '0.0'
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 12:17:42 -    Converted to Float value '0.0'
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 12:17:42 -    No conversion required, value is already a Integer
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 12:17:42 -    Converted to Long value '0'
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 12:17:42 -    Converted to Short value '0'
2018-04-27 12:17:42 -Setting default value: 0.0
2018-04-27 12:17:42 -Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2018-04-27 12:17:42 -    No conversion required, value is already a BigDecimal
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'BigInteger' value '0' to type 'BigInteger'
2018-04-27 12:17:42 -    No conversion required, value is already a BigInteger
2018-04-27 12:17:42 -Setting default value: false
2018-04-27 12:17:42 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 12:17:42 -    No conversion required, value is already a Boolean
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 12:17:42 -    Converted to Byte value '0'
2018-04-27 12:17:42 -Setting default value:  
2018-04-27 12:17:42 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 12:17:42 -    No conversion required, value is already a Character
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 12:17:42 -    Converted to Double value '0.0'
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 12:17:42 -    Converted to Float value '0.0'
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 12:17:42 -    No conversion required, value is already a Integer
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 12:17:42 -    Converted to Long value '0'
2018-04-27 12:17:42 -Setting default value: 0
2018-04-27 12:17:42 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 12:17:42 -    Converted to Short value '0'
2018-04-27 12:17:42 -Setting default value: 
2018-04-27 12:17:42 -Converting 'String' value '' to type 'String'
2018-04-27 12:17:42 -Setting default value: [Z@346a2799
2018-04-27 12:17:42 -Converting 'boolean[]' value '[Z@346a2799' to type 'boolean[]'
2018-04-27 12:17:42 -    No conversion required, value is already a boolean[]
2018-04-27 12:17:42 -Setting default value: [B@17344d7
2018-04-27 12:17:42 -Converting 'byte[]' value '[B@17344d7' to type 'byte[]'
2018-04-27 12:17:42 -    No conversion required, value is already a byte[]
2018-04-27 12:17:42 -Setting default value: [C@75b4db22
2018-04-27 12:17:42 -Converting 'char[]' value '[C@75b4db22' to type 'char[]'
2018-04-27 12:17:42 -    No conversion required, value is already a char[]
2018-04-27 12:17:42 -Setting default value: [D@670aac24
2018-04-27 12:17:42 -Converting 'double[]' value '[D@670aac24' to type 'double[]'
2018-04-27 12:17:42 -    No conversion required, value is already a double[]
2018-04-27 12:17:42 -Setting default value: [F@23909b3
2018-04-27 12:17:42 -Converting 'float[]' value '[F@23909b3' to type 'float[]'
2018-04-27 12:17:42 -    No conversion required, value is already a float[]
2018-04-27 12:17:42 -Setting default value: [I@1977b0df
2018-04-27 12:17:42 -Converting 'int[]' value '[I@1977b0df' to type 'int[]'
2018-04-27 12:17:42 -    No conversion required, value is already a int[]
2018-04-27 12:17:42 -Setting default value: [J@4a490518
2018-04-27 12:17:42 -Converting 'long[]' value '[J@4a490518' to type 'long[]'
2018-04-27 12:17:42 -    No conversion required, value is already a long[]
2018-04-27 12:17:42 -Setting default value: [S@7890fbf9
2018-04-27 12:17:42 -Converting 'short[]' value '[S@7890fbf9' to type 'short[]'
2018-04-27 12:17:42 -    No conversion required, value is already a short[]
2018-04-27 12:17:42 -Setting default value: [Ljava.math.BigDecimal;@32ae11c9
2018-04-27 12:17:42 -Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@32ae11c9' to type 'BigDecimal[]'
2018-04-27 12:17:42 -    No conversion required, value is already a BigDecimal[]
2018-04-27 12:17:42 -Setting default value: [Ljava.math.BigInteger;@14980819
2018-04-27 12:17:42 -Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@14980819' to type 'BigInteger[]'
2018-04-27 12:17:42 -    No conversion required, value is already a BigInteger[]
2018-04-27 12:17:42 -Setting default value: [Ljava.lang.Boolean;@294a12b5
2018-04-27 12:17:42 -Converting 'Boolean[]' value '[Ljava.lang.Boolean;@294a12b5' to type 'Boolean[]'
2018-04-27 12:17:42 -    No conversion required, value is already a Boolean[]
2018-04-27 12:17:42 -Setting default value: [Ljava.lang.Byte;@628aea61
2018-04-27 12:17:42 -Converting 'Byte[]' value '[Ljava.lang.Byte;@628aea61' to type 'Byte[]'
2018-04-27 12:17:42 -    No conversion required, value is already a Byte[]
2018-04-27 12:17:42 -Setting default value: [Ljava.lang.Character;@3606eee9
2018-04-27 12:17:42 -Converting 'Character[]' value '[Ljava.lang.Character;@3606eee9' to type 'Character[]'
2018-04-27 12:17:42 -    No conversion required, value is already a Character[]
2018-04-27 12:17:42 -Setting default value: [Ljava.lang.Double;@1e34840f
2018-04-27 12:17:42 -Converting 'Double[]' value '[Ljava.lang.Double;@1e34840f' to type 'Double[]'
2018-04-27 12:17:42 -    No conversion required, value is already a Double[]
2018-04-27 12:17:42 -Setting default value: [Ljava.lang.Float;@6792f2c6
2018-04-27 12:17:42 -Converting 'Float[]' value '[Ljava.lang.Float;@6792f2c6' to type 'Float[]'
2018-04-27 12:17:42 -    No conversion required, value is already a Float[]
2018-04-27 12:17:42 -Setting default value: [Ljava.lang.Integer;@52fed5b7
2018-04-27 12:17:42 -Converting 'Integer[]' value '[Ljava.lang.Integer;@52fed5b7' to type 'Integer[]'
2018-04-27 12:17:42 -    No conversion required, value is already a Integer[]
2018-04-27 12:17:42 -Setting default value: [Ljava.lang.Long;@530e08a7
2018-04-27 12:17:42 -Converting 'Long[]' value '[Ljava.lang.Long;@530e08a7' to type 'Long[]'
2018-04-27 12:17:42 -    No conversion required, value is already a Long[]
2018-04-27 12:17:42 -Setting default value: [Ljava.lang.Short;@6920fa35
2018-04-27 12:17:42 -Converting 'Short[]' value '[Ljava.lang.Short;@6920fa35' to type 'Short[]'
2018-04-27 12:17:42 -    No conversion required, value is already a Short[]
2018-04-27 12:17:42 -Setting default value: [Ljava.lang.String;@19542115
2018-04-27 12:17:42 -Converting 'String[]' value '[Ljava.lang.String;@19542115' to type 'String[]'
2018-04-27 12:17:42 -    No conversion required, value is already a String[]
2018-04-27 12:17:42 -Setting default value: [Ljava.lang.Class;@3da30ce5
2018-04-27 12:17:42 -Converting 'Class[]' value '[Ljava.lang.Class;@3da30ce5' to type 'Class[]'
2018-04-27 12:17:42 -    No conversion required, value is already a Class[]
2018-04-27 12:17:42 -Setting default value: [Ljava.util.Date;@1e4b70c6
2018-04-27 12:17:42 -Converting 'Date[]' value '[Ljava.util.Date;@1e4b70c6' to type 'Date[]'
2018-04-27 12:17:42 -    No conversion required, value is already a Date[]
2018-04-27 12:17:42 -Setting default value: [Ljava.util.Calendar;@48301bfe
2018-04-27 12:17:42 -Converting 'Calendar[]' value '[Ljava.util.Calendar;@48301bfe' to type 'Calendar[]'
2018-04-27 12:17:42 -    No conversion required, value is already a Calendar[]
2018-04-27 12:17:42 -Setting default value: [Ljava.io.File;@28d97205
2018-04-27 12:17:42 -Converting 'java.io.File[]' value '[Ljava.io.File;@28d97205' to type 'java.io.File[]'
2018-04-27 12:17:42 -    No conversion required, value is already a java.io.File[]
2018-04-27 12:17:42 -Setting default value: [Ljava.sql.Date;@367fbb28
2018-04-27 12:17:42 -Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@367fbb28' to type 'java.sql.Date[]'
2018-04-27 12:17:42 -    No conversion required, value is already a java.sql.Date[]
2018-04-27 12:17:42 -Setting default value: [Ljava.sql.Time;@37f7ce20
2018-04-27 12:17:42 -Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@37f7ce20' to type 'java.sql.Time[]'
2018-04-27 12:17:42 -    No conversion required, value is already a java.sql.Time[]
2018-04-27 12:17:42 -Setting default value: [Ljava.sql.Timestamp;@477e5b69
2018-04-27 12:17:42 -Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@477e5b69' to type 'java.sql.Timestamp[]'
2018-04-27 12:17:42 -    No conversion required, value is already a java.sql.Timestamp[]
2018-04-27 12:17:42 -Setting default value: [Ljava.net.URL;@74a991cf
2018-04-27 12:17:42 -Converting 'java.net.URL[]' value '[Ljava.net.URL;@74a991cf' to type 'java.net.URL[]'
2018-04-27 12:17:42 -    No conversion required, value is already a java.net.URL[]
2018-04-27 12:17:42 -发出交易请求..报文头为ProtoHead [contentLength=60, cmd=103, status=0]
2018-04-27 12:17:42 -交易参数为[103, 114, 111, 117, 112, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 48, 48, 47, 48, 48, 47, 48, 48, 47, 119, 75, 104, 72, 110, 108, 114, 105, 104, 54, 121, 65, 77, 108, 55, 85, 65, 65, 68, 103, 57, 79, 83, 73, 112, 117, 111, 57, 54, 55, 46, 112, 110, 103]
2018-04-27 12:17:42 -服务端返回报文头ProtoHead [contentLength=39, cmd=100, status=0]
2018-04-27 12:17:42 -dump class=com.github.tobato.fastdfs.domain.StorageNodeInfo
2018-04-27 12:17:42 -----------------------------------------
2018-04-27 12:17:42 -FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]
2018-04-27 12:17:42 -FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]
2018-04-27 12:17:42 -FieldMateData [field=port, index=2, max=0, size=8, offsize=31]
2018-04-27 12:17:42 -设置值是 FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]group1
2018-04-27 12:17:42 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 12:17:42 -Converting 'String' value 'group1' to type 'String'
2018-04-27 12:17:42 -设置值是 FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]192.168.71.158
2018-04-27 12:17:42 -Convert string '192.168.71.158' to class 'java.lang.String'
2018-04-27 12:17:42 -Converting 'String' value '192.168.71.158' to type 'String'
2018-04-27 12:17:42 -设置值是 FieldMateData [field=port, index=2, max=0, size=8, offsize=31]23000
2018-04-27 12:17:42 -Converting 'Integer' value '23000' to type 'Integer'
2018-04-27 12:17:42 -    No conversion required, value is already a Integer
2018-04-27 12:17:42 -connect to /192.168.71.158:23000 soTimeout=1501 connectTimeout=601
2018-04-27 12:17:42 -对地址/192.168.71.158:23000发出交易请求StorageDeleteFileCommand
2018-04-27 12:17:42 -发出交易请求..报文头为ProtoHead [contentLength=60, cmd=12, status=0]
2018-04-27 12:17:42 -交易参数为[103, 114, 111, 117, 112, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 48, 48, 47, 48, 48, 47, 48, 48, 47, 119, 75, 104, 72, 110, 108, 114, 105, 104, 54, 121, 65, 77, 108, 55, 85, 65, 65, 68, 103, 57, 79, 83, 73, 112, 117, 111, 57, 54, 55, 46, 112, 110, 103]
2018-04-27 12:17:42 -服务端返回报文头ProtoHead [contentLength=0, cmd=100, status=2]
2018-04-27 12:17:42 -Closing org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 12:17:25 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:17:42 -Closing org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 12:17:25 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:17:42 -Stopping beans in phase 2147483647
2018-04-27 12:17:42 -Stopping beans in phase 2147483647
2018-04-27 12:17:42 -Unregistering JMX-exposed beans on shutdown
2018-04-27 12:17:42 -Unregistering JMX-exposed beans on shutdown
2018-04-27 12:17:42 -Unregistering JMX-exposed beans
2018-04-27 12:17:42 -Unregistering JMX-exposed beans
2018-04-27 12:17:42 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 12:17:42 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 12:17:42 -disconnect from Socket[addr=/192.168.71.161,port=22122,localport=51859]
2018-04-27 12:17:42 -disconnect from Socket[addr=/192.168.71.158,port=23000,localport=51860]
2018-04-27 12:17:42 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 12:17:42 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 12:17:42 -HHH000031: Closing
2018-04-27 12:17:42 -External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
2018-04-27 12:17:42 -Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2018-04-27 12:17:42 -Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2018-04-27 12:17:42 -{dataSource-1} closed
2018-04-27 12:17:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:17:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=10.0 ms, state=CONNECTED}]
2018-04-27 12:18:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:18:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=8.2 ms, state=CONNECTED}]
2018-04-27 12:18:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:18:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.7 ms, state=CONNECTED}]
2018-04-27 12:18:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:18:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.6 ms, state=CONNECTED}]
2018-04-27 12:18:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:18:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.6 ms, state=CONNECTED}]
2018-04-27 12:18:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:18:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.0 ms, state=CONNECTED}]
2018-04-27 12:18:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:18:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.3 ms, state=CONNECTED}]
2018-04-27 12:19:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:19:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.8 ms, state=CONNECTED}]
2018-04-27 12:19:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:19:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 12:19:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:19:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 12:19:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:19:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 12:19:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:19:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 12:19:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:19:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 12:20:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:20:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 12:20:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:20:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:20:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:20:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:20:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:20:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:20:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:20:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:20:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:20:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:21:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:21:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:21:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:21:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:21:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:21:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:21:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:21:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:21:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:21:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:21:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:21:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:22:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:22:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:22:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:22:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:22:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:22:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2018-04-27 12:22:23 -Starting FastdfsTests on DESKTOP-4VE2VST with PID 12264 (started by Qiang in Y:\MyGit\demo)
2018-04-27 12:22:23 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 12:22:23 -The following profiles are active: dev
2018-04-27 12:22:23 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 12:22:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:22:23 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 12:22:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:22:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:22:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:22:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:22:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:22:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:22:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:22:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 12:22:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 12:22:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 12:22:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 12:22:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 12:22:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 12:22:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 12:22:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 12:22:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:22:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 12:22:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 12:22:27 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 12:22:27 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 12:22:27 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 12:22:27 -Loaded expression factory via original TCCL
2018-04-27 12:22:27 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 12:22:27 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 12:22:27 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 12:22:27 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 12:22:27 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 12:22:27 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 12:22:27 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 12:22:27 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 12:22:27 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 12:22:27 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 12:22:27 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 12:22:27 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 12:22:27 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 12:22:27 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 12:22:27 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 12:22:27 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 12:22:27 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$484ea83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:27 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$484ea83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$216d8307] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$216d8307] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:27 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$f547d613] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:27 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$f547d613] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:28 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:28 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:28 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:28 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:28 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:28 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:28 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 12:22:28 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 12:22:28 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 12:22:28 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 12:22:28 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 12:22:28 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 12:22:28 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 12:22:28 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 12:22:28 -Starting Post-processing phase
2018-04-27 12:22:28 -Building annotation class map
2018-04-27 12:22:28 -Building interface class map for 8 classes
2018-04-27 12:22:28 - - Actor implements 0 interfaces
2018-04-27 12:22:28 - - Role implements 1 interfaces
2018-04-27 12:22:28 -   - java.io.Serializable
2018-04-27 12:22:28 - - MongoUser implements 0 interfaces
2018-04-27 12:22:28 - - Role implements 0 interfaces
2018-04-27 12:22:28 - - Movie implements 0 interfaces
2018-04-27 12:22:28 - - Department implements 0 interfaces
2018-04-27 12:22:28 - - BookBean implements 0 interfaces
2018-04-27 12:22:28 - - User implements 1 interfaces
2018-04-27 12:22:28 -   - java.io.Serializable
2018-04-27 12:22:28 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 12:22:28 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 12:22:28 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 12:22:28 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 12:22:28 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 12:22:28 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 12:22:28 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 12:22:28 -Post-processing: com.example.ren.model.BookBean
2018-04-27 12:22:28 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 12:22:28 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 12:22:28 -Checking for @Transient classes....
2018-04-27 12:22:28 -Registering converters and deregistering transient fields and methods....
2018-04-27 12:22:28 -Post-processing complete
2018-04-27 12:22:28 -Building Index Metadata.
2018-04-27 12:22:28 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:28 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 12:22:29 -{dataSource-1} inited
2018-04-27 12:22:29 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 12:22:29 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 12:22:29 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 12:22:28",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:1456006896, ConnectTime:"2018-04-27 12:22:29", UseCount:1, LastActiveTime:"2018-04-27 12:22:29"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 12:22:29 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 12:22:29 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 12:22:29 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 12:22:29 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 12:22:29 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 12:22:29 -HHH000206: hibernate.properties not found
2018-04-27 12:22:29 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 12:22:29 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 12:22:29 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 12:22:30 -Adding type registration boolean -> org.hibernate.type.BooleanType@319642db
2018-04-27 12:22:30 -Adding type registration boolean -> org.hibernate.type.BooleanType@319642db
2018-04-27 12:22:30 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@319642db
2018-04-27 12:22:30 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d0100ea
2018-04-27 12:22:30 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@9a20cbd
2018-04-27 12:22:30 -Adding type registration yes_no -> org.hibernate.type.YesNoType@2c0c4c0a
2018-04-27 12:22:30 -Adding type registration byte -> org.hibernate.type.ByteType@611b35d6
2018-04-27 12:22:30 -Adding type registration byte -> org.hibernate.type.ByteType@611b35d6
2018-04-27 12:22:30 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@611b35d6
2018-04-27 12:22:30 -Adding type registration character -> org.hibernate.type.CharacterType@3d615b2e
2018-04-27 12:22:30 -Adding type registration char -> org.hibernate.type.CharacterType@3d615b2e
2018-04-27 12:22:30 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3d615b2e
2018-04-27 12:22:30 -Adding type registration short -> org.hibernate.type.ShortType@5efeb117
2018-04-27 12:22:30 -Adding type registration short -> org.hibernate.type.ShortType@5efeb117
2018-04-27 12:22:30 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5efeb117
2018-04-27 12:22:30 -Adding type registration integer -> org.hibernate.type.IntegerType@114a5e0
2018-04-27 12:22:30 -Adding type registration int -> org.hibernate.type.IntegerType@114a5e0
2018-04-27 12:22:30 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@114a5e0
2018-04-27 12:22:30 -Adding type registration long -> org.hibernate.type.LongType@2ed9f6f8
2018-04-27 12:22:30 -Adding type registration long -> org.hibernate.type.LongType@2ed9f6f8
2018-04-27 12:22:30 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@2ed9f6f8
2018-04-27 12:22:30 -Adding type registration float -> org.hibernate.type.FloatType@faea4da
2018-04-27 12:22:30 -Adding type registration float -> org.hibernate.type.FloatType@faea4da
2018-04-27 12:22:30 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@faea4da
2018-04-27 12:22:30 -Adding type registration double -> org.hibernate.type.DoubleType@3a7c678b
2018-04-27 12:22:30 -Adding type registration double -> org.hibernate.type.DoubleType@3a7c678b
2018-04-27 12:22:30 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a7c678b
2018-04-27 12:22:30 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@55acec99
2018-04-27 12:22:30 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@55acec99
2018-04-27 12:22:30 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@64e7d698
2018-04-27 12:22:30 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@64e7d698
2018-04-27 12:22:30 -Adding type registration string -> org.hibernate.type.StringType@77724cbe
2018-04-27 12:22:30 -Adding type registration java.lang.String -> org.hibernate.type.StringType@77724cbe
2018-04-27 12:22:30 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@16d07cf3
2018-04-27 12:22:30 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@623e0631
2018-04-27 12:22:30 -Adding type registration url -> org.hibernate.type.UrlType@12417468
2018-04-27 12:22:30 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@12417468
2018-04-27 12:22:30 -Adding type registration Duration -> org.hibernate.type.DurationType@67fb5025
2018-04-27 12:22:30 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@67fb5025
2018-04-27 12:22:30 -Adding type registration Instant -> org.hibernate.type.InstantType@79b18230
2018-04-27 12:22:30 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@79b18230
2018-04-27 12:22:30 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@902fdbe
2018-04-27 12:22:30 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@902fdbe
2018-04-27 12:22:30 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2a8b33ba
2018-04-27 12:22:30 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2a8b33ba
2018-04-27 12:22:30 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2401856
2018-04-27 12:22:30 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2401856
2018-04-27 12:22:30 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e3f0aea
2018-04-27 12:22:30 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e3f0aea
2018-04-27 12:22:30 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@515b9d4a
2018-04-27 12:22:30 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@515b9d4a
2018-04-27 12:22:30 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@365afe87
2018-04-27 12:22:30 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@365afe87
2018-04-27 12:22:30 -Adding type registration date -> org.hibernate.type.DateType@7fbd3e75
2018-04-27 12:22:30 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@7fbd3e75
2018-04-27 12:22:30 -Adding type registration time -> org.hibernate.type.TimeType@1c628f6a
2018-04-27 12:22:30 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1c628f6a
2018-04-27 12:22:30 -Adding type registration timestamp -> org.hibernate.type.TimestampType@7bee8621
2018-04-27 12:22:30 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7bee8621
2018-04-27 12:22:30 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7bee8621
2018-04-27 12:22:30 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4877919f
2018-04-27 12:22:30 -Adding type registration calendar -> org.hibernate.type.CalendarType@69364b2d
2018-04-27 12:22:30 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69364b2d
2018-04-27 12:22:30 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69364b2d
2018-04-27 12:22:30 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5bde57ab
2018-04-27 12:22:30 -Adding type registration locale -> org.hibernate.type.LocaleType@2b80e5a9
2018-04-27 12:22:30 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b80e5a9
2018-04-27 12:22:30 -Adding type registration currency -> org.hibernate.type.CurrencyType@562919fe
2018-04-27 12:22:30 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@562919fe
2018-04-27 12:22:30 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@42e4e589
2018-04-27 12:22:30 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@42e4e589
2018-04-27 12:22:30 -Adding type registration class -> org.hibernate.type.ClassType@4cdba2ed
2018-04-27 12:22:30 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4cdba2ed
2018-04-27 12:22:30 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6dca31eb
2018-04-27 12:22:30 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6dca31eb
2018-04-27 12:22:30 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2e7af36e
2018-04-27 12:22:30 -Adding type registration binary -> org.hibernate.type.BinaryType@7fe07361
2018-04-27 12:22:30 -Adding type registration byte[] -> org.hibernate.type.BinaryType@7fe07361
2018-04-27 12:22:30 -Adding type registration [B -> org.hibernate.type.BinaryType@7fe07361
2018-04-27 12:22:30 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@108e9837
2018-04-27 12:22:30 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@108e9837
2018-04-27 12:22:30 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@108e9837
2018-04-27 12:22:30 -Adding type registration row_version -> org.hibernate.type.RowVersionType@30c19bff
2018-04-27 12:22:30 -Adding type registration image -> org.hibernate.type.ImageType@39da5e49
2018-04-27 12:22:30 -Adding type registration characters -> org.hibernate.type.CharArrayType@5934ca1e
2018-04-27 12:22:30 -Adding type registration char[] -> org.hibernate.type.CharArrayType@5934ca1e
2018-04-27 12:22:30 -Adding type registration [C -> org.hibernate.type.CharArrayType@5934ca1e
2018-04-27 12:22:30 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4b87074a
2018-04-27 12:22:30 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4b87074a
2018-04-27 12:22:30 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4b87074a
2018-04-27 12:22:30 -Adding type registration text -> org.hibernate.type.TextType@27585351
2018-04-27 12:22:30 -Adding type registration ntext -> org.hibernate.type.NTextType@56826a75
2018-04-27 12:22:30 -Adding type registration blob -> org.hibernate.type.BlobType@5696c927
2018-04-27 12:22:30 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5696c927
2018-04-27 12:22:30 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@d54d0f5
2018-04-27 12:22:30 -Adding type registration clob -> org.hibernate.type.ClobType@415d88de
2018-04-27 12:22:30 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@415d88de
2018-04-27 12:22:30 -Adding type registration nclob -> org.hibernate.type.NClobType@531ec978
2018-04-27 12:22:30 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@531ec978
2018-04-27 12:22:30 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@195580ba
2018-04-27 12:22:30 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a140ce5
2018-04-27 12:22:30 -Adding type registration serializable -> org.hibernate.type.SerializableType@57f8951a
2018-04-27 12:22:30 -Adding type registration object -> org.hibernate.type.ObjectType@364b1061
2018-04-27 12:22:30 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@364b1061
2018-04-27 12:22:30 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7df6d663
2018-04-27 12:22:30 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@13d019a4
2018-04-27 12:22:30 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c30c81d
2018-04-27 12:22:30 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@415a3f6a
2018-04-27 12:22:30 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@a54acec
2018-04-27 12:22:30 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19da993b
2018-04-27 12:22:30 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3380ca3d
2018-04-27 12:22:30 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@23310248
2018-04-27 12:22:30 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 12:22:30 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 12:22:30 -JDBC version : 4.0
2018-04-27 12:22:30 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 12:22:30 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 12:22:30 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 12:22:30 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 12:22:30 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 12:22:30 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 12:22:30 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 12:22:30 -Import with entity name Department
2018-04-27 12:22:30 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -MetadataSourceProcessor property id with lazy=false
2018-04-27 12:22:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 12:22:30 -building SimpleValue for id
2018-04-27 12:22:30 -Building property id
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -MetadataSourceProcessor property name with lazy=false
2018-04-27 12:22:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 12:22:30 -building SimpleValue for name
2018-04-27 12:22:30 -Building property name
2018-04-27 12:22:30 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 12:22:30 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 12:22:30 -Import with entity name Role
2018-04-27 12:22:30 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -MetadataSourceProcessor property id with lazy=false
2018-04-27 12:22:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 12:22:30 -building SimpleValue for id
2018-04-27 12:22:30 -Building property id
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -MetadataSourceProcessor property name with lazy=false
2018-04-27 12:22:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 12:22:30 -building SimpleValue for name
2018-04-27 12:22:30 -Building property name
2018-04-27 12:22:30 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 12:22:30 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 12:22:30 -Import with entity name User
2018-04-27 12:22:30 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -MetadataSourceProcessor property id with lazy=false
2018-04-27 12:22:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 12:22:30 -building SimpleValue for id
2018-04-27 12:22:30 -Building property id
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 12:22:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 12:22:30 -building SimpleValue for createDate
2018-04-27 12:22:30 -Building property createDate
2018-04-27 12:22:30 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -Building property department
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -MetadataSourceProcessor property email with lazy=false
2018-04-27 12:22:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 12:22:30 -building SimpleValue for email
2018-04-27 12:22:30 -Building property email
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -MetadataSourceProcessor property name with lazy=false
2018-04-27 12:22:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 12:22:30 -building SimpleValue for name
2018-04-27 12:22:30 -Building property name
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -MetadataSourceProcessor property password with lazy=false
2018-04-27 12:22:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 12:22:30 -building SimpleValue for password
2018-04-27 12:22:30 -Building property password
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 12:22:30 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 12:22:30 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 12:22:30 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 12:22:30 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 12:22:30 -Building property roles
2018-04-27 12:22:30 -Starting fillSimpleValue for id
2018-04-27 12:22:30 -Starting fillSimpleValue for name
2018-04-27 12:22:30 -Starting fillSimpleValue for id
2018-04-27 12:22:30 -Starting fillSimpleValue for name
2018-04-27 12:22:30 -Starting fillSimpleValue for id
2018-04-27 12:22:30 -Starting fillSimpleValue for createDate
2018-04-27 12:22:30 -Starting fillSimpleValue for email
2018-04-27 12:22:30 -Starting fillSimpleValue for name
2018-04-27 12:22:30 -Starting fillSimpleValue for password
2018-04-27 12:22:30 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 12:22:30 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 12:22:30 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 12:22:30 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 12:22:30 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 12:22:30 -Mapped collection key: user_id, element: role_id
2018-04-27 12:22:30 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 12:22:30 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 12:22:30 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 12:22:30 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 12:22:30 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 12:22:30 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 12:22:31 -Building session factory
2018-04-27 12:22:31 -SessionFactory name : null
2018-04-27 12:22:31 -Automatic flush during beforeCompletion(): enabled
2018-04-27 12:22:31 -Automatic session close at end of transaction: disabled
2018-04-27 12:22:31 -Statistics: disabled
2018-04-27 12:22:31 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 12:22:31 -Default entity-mode: pojo
2018-04-27 12:22:31 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 12:22:31 -Allow initialization of lazy state outside session : disabled
2018-04-27 12:22:31 -Using BatchFetchStyle : LEGACY
2018-04-27 12:22:31 -Default batch fetch size: -1
2018-04-27 12:22:31 -Maximum outer join fetch depth: 2
2018-04-27 12:22:31 -Default null ordering: NONE
2018-04-27 12:22:31 -Order SQL updates by primary key: disabled
2018-04-27 12:22:31 -Order SQL inserts for batching: disabled
2018-04-27 12:22:31 -multi-tenancy strategy : NONE
2018-04-27 12:22:31 -JTA Track by Thread: enabled
2018-04-27 12:22:31 -Query language substitutions: {}
2018-04-27 12:22:31 -JPA query language strict compliance: disabled
2018-04-27 12:22:31 -Named query checking : enabled
2018-04-27 12:22:31 -Second-level cache: enabled
2018-04-27 12:22:31 -Second-level query cache: disabled
2018-04-27 12:22:31 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@42a0786f
2018-04-27 12:22:31 -Second-level cache region prefix: null
2018-04-27 12:22:31 -Optimize second-level cache for minimal puts: disabled
2018-04-27 12:22:31 -Structured second-level cache entries: disabled
2018-04-27 12:22:31 -Second-level cache direct-reference entries: disabled
2018-04-27 12:22:31 -Automatic eviction of collection cache: disabled
2018-04-27 12:22:31 -JDBC batch size: 15
2018-04-27 12:22:31 -JDBC batch updates for versioned data: enabled
2018-04-27 12:22:31 -Scrollable result sets: enabled
2018-04-27 12:22:31 -Wrap result sets: disabled
2018-04-27 12:22:31 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 12:22:31 -JDBC result set fetch size: null
2018-04-27 12:22:31 -Connection release mode: ON_CLOSE
2018-04-27 12:22:31 -Generate SQL with comments: disabled
2018-04-27 12:22:31 -Session factory constructed with filter configurations : {}
2018-04-27 12:22:31 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\test-classes;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-test\2.0.0.RELEASE\spring-boot-starter-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test\2.0.0.RELEASE\spring-boot-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.0.0.RELEASE\spring-boot-test-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;X:\Maven\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;X:\Maven\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;X:\Maven\repository\org\assertj\assertj-core\3.9.1\assertj-core-3.9.1.jar;X:\Maven\repository\org\mockito\mockito-core\2.15.0\mockito-core-2.15.0.jar;X:\Maven\repository\net\bytebuddy\byte-buddy\1.7.10\byte-buddy-1.7.10.jar;X:\Maven\repository\net\bytebuddy\byte-buddy-agent\1.7.10\byte-buddy-agent-1.7.10.jar;X:\Maven\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;X:\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;X:\Maven\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;X:\Maven\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;X:\Maven\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;X:\Maven\repository\org\xmlunit\xmlunit-core\2.5.1\xmlunit-core-2.5.1.jar;X:\Maven\repository\org\springframework\spring-test\4.3.6.RELEASE\spring-test-4.3.6.RELEASE.jar;X:\Maven\repository\junit\junit\4.12\junit-4.12.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 com.example.ren.fastdfs.FastdfsTests,uploadStringTest, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@736b21ee, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=12264, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@60deefed, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 12:22:28",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:1456006896, ConnectTime:"2018-04-27 12:22:29", UseCount:2, LastActiveTime:"2018-04-27 12:22:30"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 12:22:31 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 12:22:31 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 12:22:31 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 12:22:31 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 12:22:31 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 12:22:31 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 12:22:31 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 12:22:31 -Loaded expression factory via original TCCL
2018-04-27 12:22:31 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 12:22:31 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 12:22:31 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 12:22:31 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 12:22:31 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 12:22:31 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 12:22:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 12:22:31 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 12:22:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 12:22:31 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 12:22:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 12:22:31 -Skipping JACC integration as it was not enabled
2018-04-27 12:22:31 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 12:22:31 -Instantiated session factory
2018-04-27 12:22:31 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 12:22:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 12:22:31 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 12:22:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 12:22:31 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 12:22:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 12:22:31 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 12:22:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 12:22:31 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 12:22:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 12:22:31 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 12:22:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 12:22:31 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 12:22:31 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 12:22:31 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 12:22:31 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 12:22:31 - One-shot delete: delete from user_role where user_id=?
2018-04-27 12:22:31 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 12:22:31 - Version select: select id from role where id =?
2018-04-27 12:22:31 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 12:22:31 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 12:22:31 - Update 0: update role set name=? where id=?
2018-04-27 12:22:31 - Delete 0: delete from role where id=?
2018-04-27 12:22:31 - Identity insert: insert into role (name) values (?)
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38f617f4]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d512652]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b96f8b0]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc0d9b4]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e4f4092]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4416e18d]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3120495d]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b75b890]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@439d545c]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2b6acb]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a0f349]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:22:31 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:22:31 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 12:22:31 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 12:22:31 - Version select: select id from department where id =?
2018-04-27 12:22:31 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 12:22:31 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 12:22:31 - Update 0: update department set name=? where id=?
2018-04-27 12:22:31 - Delete 0: delete from department where id=?
2018-04-27 12:22:31 - Identity insert: insert into department (name) values (?)
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34fcd292]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@496cedbb]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3957d88b]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fba0dac]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cbe455c]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be38eba]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce3409b]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66234b0f]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb544f]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5c902]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0e1a9a]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:22:31 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:22:31 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 12:22:31 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 12:22:31 - Version select: select id from user where id =?
2018-04-27 12:22:31 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 12:22:31 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 12:22:31 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 12:22:31 - Delete 0: delete from user where id=?
2018-04-27 12:22:31 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bf2aa32]
2018-04-27 12:22:31 -Visiting attribute path : createDate
2018-04-27 12:22:31 -Visiting attribute path : department
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83b0d0f]
2018-04-27 12:22:31 -Visiting attribute path : department.name
2018-04-27 12:22:31 -Visiting attribute path : email
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Visiting attribute path : password
2018-04-27 12:22:31 -Visiting attribute path : roles
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16bbaab3]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99c4993]
2018-04-27 12:22:31 -Visiting attribute path : roles.name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@589dfa6f]
2018-04-27 12:22:31 -Visiting attribute path : createDate
2018-04-27 12:22:31 -Visiting attribute path : department
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8667bb]
2018-04-27 12:22:31 -Visiting attribute path : department.name
2018-04-27 12:22:31 -Visiting attribute path : email
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Visiting attribute path : password
2018-04-27 12:22:31 -Visiting attribute path : roles
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2774dcf4]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b829d5]
2018-04-27 12:22:31 -Visiting attribute path : roles.name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5280688]
2018-04-27 12:22:31 -Visiting attribute path : createDate
2018-04-27 12:22:31 -Visiting attribute path : department
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ab6521]
2018-04-27 12:22:31 -Visiting attribute path : email
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Visiting attribute path : password
2018-04-27 12:22:31 -Visiting attribute path : roles
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@328e4ec2]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7757025d]
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68fc9167]
2018-04-27 12:22:31 -Visiting attribute path : createDate
2018-04-27 12:22:31 -Visiting attribute path : department
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12fccff0]
2018-04-27 12:22:31 -Visiting attribute path : email
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Visiting attribute path : password
2018-04-27 12:22:31 -Visiting attribute path : roles
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d767218]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@510da778]
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a1b3ae]
2018-04-27 12:22:31 -Visiting attribute path : createDate
2018-04-27 12:22:31 -Visiting attribute path : department
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5e2525]
2018-04-27 12:22:31 -Visiting attribute path : email
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Visiting attribute path : password
2018-04-27 12:22:31 -Visiting attribute path : roles
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6546371]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b458cd6]
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c2c44e8]
2018-04-27 12:22:31 -Visiting attribute path : createDate
2018-04-27 12:22:31 -Visiting attribute path : department
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@227a933d]
2018-04-27 12:22:31 -Visiting attribute path : email
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Visiting attribute path : password
2018-04-27 12:22:31 -Visiting attribute path : roles
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25de8898]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bfb93cf]
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd737ea]
2018-04-27 12:22:31 -Visiting attribute path : createDate
2018-04-27 12:22:31 -Visiting attribute path : department
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a0963be]
2018-04-27 12:22:31 -Visiting attribute path : email
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Visiting attribute path : password
2018-04-27 12:22:31 -Visiting attribute path : roles
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d3bf8db]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e7e8f1]
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27bb4dc5]
2018-04-27 12:22:31 -Visiting attribute path : createDate
2018-04-27 12:22:31 -Visiting attribute path : department
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64910b2d]
2018-04-27 12:22:31 -Visiting attribute path : email
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Visiting attribute path : password
2018-04-27 12:22:31 -Visiting attribute path : roles
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1247c72e]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fef75c6]
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f61e002]
2018-04-27 12:22:31 -Visiting attribute path : createDate
2018-04-27 12:22:31 -Visiting attribute path : department
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f179f51]
2018-04-27 12:22:31 -Visiting attribute path : email
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Visiting attribute path : password
2018-04-27 12:22:31 -Visiting attribute path : roles
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b428830]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7308aa]
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42aa1324]
2018-04-27 12:22:31 -Visiting attribute path : createDate
2018-04-27 12:22:31 -Visiting attribute path : department
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ef8e623]
2018-04-27 12:22:31 -Visiting attribute path : email
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Visiting attribute path : password
2018-04-27 12:22:31 -Visiting attribute path : roles
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d8d970e]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fac80a8]
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6987a133]
2018-04-27 12:22:31 -Visiting attribute path : createDate
2018-04-27 12:22:31 -Visiting attribute path : department
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1934339]
2018-04-27 12:22:31 -Visiting attribute path : email
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Visiting attribute path : password
2018-04-27 12:22:31 -Visiting attribute path : roles
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4af12a63]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eab8437]
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 12:22:31 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 12:22:31 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 12:22:31 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6684f7f2]
2018-04-27 12:22:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1682e6a]
2018-04-27 12:22:31 -Visiting attribute path : name
2018-04-27 12:22:31 -Building LoadPlan...
2018-04-27 12:22:31 -processing queryspace <gen:0>
2018-04-27 12:22:31 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 12:22:31 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 12:22:31 -No alter strings for table : department
2018-04-27 12:22:31 -No alter strings for table : role
2018-04-27 12:22:31 -No alter strings for table : user
2018-04-27 12:22:31 -No alter strings for table : user_role
2018-04-27 12:22:31 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 12:22:31 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 12:22:31 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 12:22:31 -Checking 0 named HQL queries
2018-04-27 12:22:31 -Checking 0 named SQL queries
2018-04-27 12:22:31 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6aad919c
2018-04-27 12:22:31 -Registering SessionFactory: 664809ab-32b8-4997-835e-3bc039cf6b83 (<unnamed>)
2018-04-27 12:22:31 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 12:22:31 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 12:22:31 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 12:22:31 -init trackerLocator [192.168.71.161:22122]
2018-04-27 12:22:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:22:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.5 ms, state=CONNECTED}]
2018-04-27 12:22:32 -Statistics initialized [enabled=false]
2018-04-27 12:22:32 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@52433946
2018-04-27 12:22:32 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 12:22:32 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 12:22:32 -throwQueryException() : no errors
2018-04-27 12:22:32 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 12:22:32 -select << begin [level=1, statement=select]
2018-04-27 12:22:32 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 12:22:32 -Resolved : t -> user0_.id
2018-04-27 12:22:32 -Resolved : t -> user0_.id
2018-04-27 12:22:32 -getDataType() : name -> org.hibernate.type.StringType@77724cbe
2018-04-27 12:22:32 -Resolved : t.name -> user0_.name
2018-04-27 12:22:32 -select : finishing up [level=1, statement=select]
2018-04-27 12:22:32 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 12:22:32 -Using FROM fragment [user user0_]
2018-04-27 12:22:32 -select >> end [level=1, statement=select]
2018-04-27 12:22:32 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@77724cbe}

2018-04-27 12:22:32 -throwQueryException() : no errors
2018-04-27 12:22:32 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 12:22:32 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 12:22:33 -throwQueryException() : no errors
2018-04-27 12:22:33 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 12:22:33 -throwQueryException() : no errors
2018-04-27 12:22:33 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 12:22:33 -select << begin [level=1, statement=select]
2018-04-27 12:22:33 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 12:22:33 -Resolved : t -> user0_.id
2018-04-27 12:22:33 -Resolved : t -> user0_.id
2018-04-27 12:22:33 -getDataType() : name -> org.hibernate.type.StringType@77724cbe
2018-04-27 12:22:33 -Resolved : t.name -> user0_.name
2018-04-27 12:22:33 -Resolved : t -> user0_.id
2018-04-27 12:22:33 -getDataType() : email -> org.hibernate.type.StringType@77724cbe
2018-04-27 12:22:33 -Resolved : t.email -> user0_.email
2018-04-27 12:22:33 -select : finishing up [level=1, statement=select]
2018-04-27 12:22:33 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 12:22:33 -Using FROM fragment [user user0_]
2018-04-27 12:22:33 -select >> end [level=1, statement=select]
2018-04-27 12:22:33 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@77724cbe}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@77724cbe}

2018-04-27 12:22:33 -throwQueryException() : no errors
2018-04-27 12:22:33 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 12:22:33 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 12:22:33 -throwQueryException() : no errors
2018-04-27 12:22:33 -Using SLF4J as the default logging framework
2018-04-27 12:22:33 --Dio.netty.eventLoopThreads: 4
2018-04-27 12:22:33 --Dio.netty.leakDetection.level: simple
2018-04-27 12:22:33 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 12:22:33 -Platform: Windows
2018-04-27 12:22:33 --Dio.netty.noUnsafe: false
2018-04-27 12:22:33 -Java version: 8
2018-04-27 12:22:33 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 12:22:33 -sun.misc.Unsafe.copyMemory: available
2018-04-27 12:22:33 -java.nio.Buffer.address: available
2018-04-27 12:22:33 -direct buffer constructor: available
2018-04-27 12:22:33 -java.nio.Bits.unaligned: available, true
2018-04-27 12:22:33 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 12:22:33 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 12:22:33 -sun.misc.Unsafe: available
2018-04-27 12:22:33 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 12:22:33 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 12:22:33 --Dio.netty.noPreferDirect: false
2018-04-27 12:22:33 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 12:22:33 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 12:22:33 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 12:22:33 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3caf5c96
2018-04-27 12:22:33 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 12:22:33 -Using Slf4j logging framework
2018-04-27 12:22:33 -Starting UnsafeSupport init in Java 1.8
2018-04-27 12:22:33 -Unsafe is available
2018-04-27 12:22:33 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 12:22:33 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 12:22:33 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 12:22:33 --Dio.netty.allocator.pageSize: 8192
2018-04-27 12:22:33 --Dio.netty.allocator.maxOrder: 11
2018-04-27 12:22:33 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 12:22:33 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 12:22:33 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 12:22:33 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 12:22:33 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 12:22:33 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 12:22:33 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 12:22:33 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 12:22:33 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 12:22:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 12:22:34 -Neo4jMappingContext initialisation completed
2018-04-27 12:22:34 -Neo4jMappingContext initialisation completed
2018-04-27 12:22:34 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 12:22:34 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 12:22:34 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 12:22:34 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 12:22:35 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 12:22:35 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 12:22:35 -Opened connection [connectionId{localValue:1, serverValue:23}] to 192.168.71.151:27017
2018-04-27 12:22:35 -Checking status of 192.168.71.151:27017
2018-04-27 12:22:35 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3393781}
2018-04-27 12:22:35 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.4 ms, state=CONNECTED}]
2018-04-27 12:22:35 -Opened connection [connectionId{localValue:2, serverValue:24}] to 192.168.71.151:27017
2018-04-27 12:22:35 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:24}] to server 192.168.71.151:27017
2018-04-27 12:22:35 -Command execution completed
2018-04-27 12:22:36 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 12:22:36 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 12:22:36 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 12:22:36 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 12:22:36 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 12:22:36 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-04-27 12:22:36 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 12:22:36 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 12:22:36 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 12:22:36 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 12:22:36 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 12:22:36 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 12:22:36 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 12:22:36 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 12:22:36 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 12:22:36 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 12:22:36 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 12:22:36 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 12:22:36 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 12:22:36 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 12:22:36 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 12:22:36 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 12:22:36 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 12:22:36 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 12:22:36 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 12:22:36 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 12:22:36 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 12:22:36 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 12:22:36 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 12:22:36 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 12:22:36 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 12:22:36 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 12:22:36 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 12:22:36 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 12:22:36 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 12:22:36 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 12:22:36 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 12:22:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 12:22:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 12:22:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 12:22:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 12:22:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 12:22:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 12:22:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 12:22:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 12:22:36 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 12:22:36 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 12:22:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 12:22:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 12:22:37 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 12:22:37 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 12:22:37 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 12:22:37 -Loaded expression factory via original TCCL
2018-04-27 12:22:37 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 12:22:37 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 12:22:37 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 12:22:37 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 12:22:37 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 12:22:37 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 12:22:37 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 12:22:37 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 12:22:37 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 12:22:37 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 12:22:37 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 12:22:37 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 12:22:37 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 12:22:37 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 12:22:37 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 12:22:37 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 12:22:37 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 12:22:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:22:37 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 12:22:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:22:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:22:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:22:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:22:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:22:37 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 12:22:37 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 12:22:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:22:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 12:22:38 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 12:22:38 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 12:22:39 -Registering beans for JMX exposure on startup
2018-04-27 12:22:39 -Registering beans for JMX exposure on startup
2018-04-27 12:22:39 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 12:22:39 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 12:22:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 12:22:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 12:22:39 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 12:22:39 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 12:22:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 12:22:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 12:22:39 -Starting beans in phase 2147483647
2018-04-27 12:22:39 -Starting beans in phase 2147483647
2018-04-27 12:22:39 -Context refreshed
2018-04-27 12:22:39 -Context refreshed
2018-04-27 12:22:39 -Found 1 custom documentation plugin(s)
2018-04-27 12:22:39 -Found 1 custom documentation plugin(s)
2018-04-27 12:22:39 -Scanning for api listing references
2018-04-27 12:22:39 -Scanning for api listing references
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:39 -Generating unique operation named: updateUsingPOST_1
2018-04-27 12:22:39 -Generating unique operation named: updateUsingPOST_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: createUsingGET_1
2018-04-27 12:22:40 -Generating unique operation named: createUsingGET_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: createUsingHEAD_1
2018-04-27 12:22:40 -Generating unique operation named: createUsingHEAD_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: createUsingPOST_1
2018-04-27 12:22:40 -Generating unique operation named: createUsingPOST_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: createUsingPUT_1
2018-04-27 12:22:40 -Generating unique operation named: createUsingPUT_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: createUsingPATCH_1
2018-04-27 12:22:40 -Generating unique operation named: createUsingPATCH_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: createUsingDELETE_1
2018-04-27 12:22:40 -Generating unique operation named: createUsingDELETE_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 12:22:40 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: createUsingTRACE_1
2018-04-27 12:22:40 -Generating unique operation named: createUsingTRACE_1
2018-04-27 12:22:40 -Generating unique operation named: deleteUsingGET_1
2018-04-27 12:22:40 -Generating unique operation named: deleteUsingGET_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingGET_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingGET_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingHEAD_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingHEAD_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingPOST_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingPOST_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingPUT_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingPUT_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingPATCH_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingPATCH_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingDELETE_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingDELETE_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingTRACE_1
2018-04-27 12:22:40 -Generating unique operation named: listUsingTRACE_1
2018-04-27 12:22:40 -Generating unique operation named: saveUsingPOST_1
2018-04-27 12:22:40 -Generating unique operation named: saveUsingPOST_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: showUsingGET_1
2018-04-27 12:22:40 -Generating unique operation named: showUsingGET_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: showUsingHEAD_1
2018-04-27 12:22:40 -Generating unique operation named: showUsingHEAD_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: showUsingPOST_1
2018-04-27 12:22:40 -Generating unique operation named: showUsingPOST_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: showUsingPUT_1
2018-04-27 12:22:40 -Generating unique operation named: showUsingPUT_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: showUsingPATCH_1
2018-04-27 12:22:40 -Generating unique operation named: showUsingPATCH_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: showUsingDELETE_1
2018-04-27 12:22:40 -Generating unique operation named: showUsingDELETE_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 12:22:40 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: showUsingTRACE_1
2018-04-27 12:22:40 -Generating unique operation named: showUsingTRACE_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: updateUsingGET_1
2018-04-27 12:22:40 -Generating unique operation named: updateUsingGET_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 12:22:40 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: updateUsingPOST_2
2018-04-27 12:22:40 -Generating unique operation named: updateUsingPOST_2
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: updateUsingPUT_1
2018-04-27 12:22:40 -Generating unique operation named: updateUsingPUT_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 12:22:40 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 12:22:40 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 12:22:40 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 12:22:40 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 12:22:40 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 12:22:40 -Generating unique operation named: updateUsingPOST_3
2018-04-27 12:22:40 -Generating unique operation named: updateUsingPOST_3
2018-04-27 12:22:40 -Started FastdfsTests in 18.109 seconds (JVM running for 20.372)
2018-04-27 12:22:40 -获取到Tracker连接地址/192.168.71.161:22122
2018-04-27 12:22:40 -connect to /192.168.71.161:22122 soTimeout=1501 connectTimeout=601
2018-04-27 12:22:40 -对地址/192.168.71.161:22122发出交易请求TrackerGetStoreStorageCommand
2018-04-27 12:22:40 -发出交易请求..报文头为ProtoHead [contentLength=0, cmd=101, status=0]
2018-04-27 12:22:40 -交易参数为[]
2018-04-27 12:22:40 -服务端返回报文头ProtoHead [contentLength=40, cmd=100, status=0]
2018-04-27 12:22:40 -dump class=com.github.tobato.fastdfs.domain.StorageNode
2018-04-27 12:22:40 -----------------------------------------
2018-04-27 12:22:40 -FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]
2018-04-27 12:22:40 -FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]
2018-04-27 12:22:40 -FieldMateData [field=port, index=2, max=0, size=8, offsize=31]
2018-04-27 12:22:40 -FieldMateData [field=storeIndex, index=3, max=0, size=1, offsize=39]
2018-04-27 12:22:40 -设置值是 FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]group1
2018-04-27 12:22:40 -Setting default value: false
2018-04-27 12:22:40 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 12:22:40 -    No conversion required, value is already a Boolean
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 12:22:40 -    Converted to Byte value '0'
2018-04-27 12:22:40 -Setting default value:  
2018-04-27 12:22:40 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 12:22:40 -    No conversion required, value is already a Character
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 12:22:40 -    Converted to Double value '0.0'
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 12:22:40 -    Converted to Float value '0.0'
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 12:22:40 -    No conversion required, value is already a Integer
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 12:22:40 -    Converted to Long value '0'
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 12:22:40 -    Converted to Short value '0'
2018-04-27 12:22:40 -Setting default value: 0.0
2018-04-27 12:22:40 -Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2018-04-27 12:22:40 -    No conversion required, value is already a BigDecimal
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'BigInteger' value '0' to type 'BigInteger'
2018-04-27 12:22:40 -    No conversion required, value is already a BigInteger
2018-04-27 12:22:40 -Setting default value: false
2018-04-27 12:22:40 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 12:22:40 -    No conversion required, value is already a Boolean
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 12:22:40 -    Converted to Byte value '0'
2018-04-27 12:22:40 -Setting default value:  
2018-04-27 12:22:40 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 12:22:40 -    No conversion required, value is already a Character
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 12:22:40 -    Converted to Double value '0.0'
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 12:22:40 -    Converted to Float value '0.0'
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 12:22:40 -    No conversion required, value is already a Integer
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 12:22:40 -    Converted to Long value '0'
2018-04-27 12:22:40 -Setting default value: 0
2018-04-27 12:22:40 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 12:22:40 -    Converted to Short value '0'
2018-04-27 12:22:40 -Setting default value: 
2018-04-27 12:22:40 -Converting 'String' value '' to type 'String'
2018-04-27 12:22:40 -Setting default value: [Z@42457891
2018-04-27 12:22:40 -Converting 'boolean[]' value '[Z@42457891' to type 'boolean[]'
2018-04-27 12:22:40 -    No conversion required, value is already a boolean[]
2018-04-27 12:22:40 -Setting default value: [B@92de794
2018-04-27 12:22:40 -Converting 'byte[]' value '[B@92de794' to type 'byte[]'
2018-04-27 12:22:40 -    No conversion required, value is already a byte[]
2018-04-27 12:22:40 -Setting default value: [C@5bed0ff4
2018-04-27 12:22:40 -Converting 'char[]' value '[C@5bed0ff4' to type 'char[]'
2018-04-27 12:22:40 -    No conversion required, value is already a char[]
2018-04-27 12:22:40 -Setting default value: [D@17a5ae7b
2018-04-27 12:22:40 -Converting 'double[]' value '[D@17a5ae7b' to type 'double[]'
2018-04-27 12:22:40 -    No conversion required, value is already a double[]
2018-04-27 12:22:40 -Setting default value: [F@7e4dddee
2018-04-27 12:22:40 -Converting 'float[]' value '[F@7e4dddee' to type 'float[]'
2018-04-27 12:22:40 -    No conversion required, value is already a float[]
2018-04-27 12:22:40 -Setting default value: [I@183a84f4
2018-04-27 12:22:40 -Converting 'int[]' value '[I@183a84f4' to type 'int[]'
2018-04-27 12:22:40 -    No conversion required, value is already a int[]
2018-04-27 12:22:40 -Setting default value: [J@2b9bbaa8
2018-04-27 12:22:40 -Converting 'long[]' value '[J@2b9bbaa8' to type 'long[]'
2018-04-27 12:22:40 -    No conversion required, value is already a long[]
2018-04-27 12:22:40 -Setting default value: [S@11771fd6
2018-04-27 12:22:40 -Converting 'short[]' value '[S@11771fd6' to type 'short[]'
2018-04-27 12:22:40 -    No conversion required, value is already a short[]
2018-04-27 12:22:40 -Setting default value: [Ljava.math.BigDecimal;@1c512bb
2018-04-27 12:22:40 -Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@1c512bb' to type 'BigDecimal[]'
2018-04-27 12:22:40 -    No conversion required, value is already a BigDecimal[]
2018-04-27 12:22:40 -Setting default value: [Ljava.math.BigInteger;@3bac86a3
2018-04-27 12:22:40 -Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@3bac86a3' to type 'BigInteger[]'
2018-04-27 12:22:40 -    No conversion required, value is already a BigInteger[]
2018-04-27 12:22:40 -Setting default value: [Ljava.lang.Boolean;@3bf52f8f
2018-04-27 12:22:40 -Converting 'Boolean[]' value '[Ljava.lang.Boolean;@3bf52f8f' to type 'Boolean[]'
2018-04-27 12:22:40 -    No conversion required, value is already a Boolean[]
2018-04-27 12:22:40 -Setting default value: [Ljava.lang.Byte;@57d7c511
2018-04-27 12:22:40 -Converting 'Byte[]' value '[Ljava.lang.Byte;@57d7c511' to type 'Byte[]'
2018-04-27 12:22:40 -    No conversion required, value is already a Byte[]
2018-04-27 12:22:40 -Setting default value: [Ljava.lang.Character;@811d8d6
2018-04-27 12:22:40 -Converting 'Character[]' value '[Ljava.lang.Character;@811d8d6' to type 'Character[]'
2018-04-27 12:22:40 -    No conversion required, value is already a Character[]
2018-04-27 12:22:40 -Setting default value: [Ljava.lang.Double;@7f57a7a4
2018-04-27 12:22:40 -Converting 'Double[]' value '[Ljava.lang.Double;@7f57a7a4' to type 'Double[]'
2018-04-27 12:22:40 -    No conversion required, value is already a Double[]
2018-04-27 12:22:40 -Setting default value: [Ljava.lang.Float;@6dcc7696
2018-04-27 12:22:40 -Converting 'Float[]' value '[Ljava.lang.Float;@6dcc7696' to type 'Float[]'
2018-04-27 12:22:40 -    No conversion required, value is already a Float[]
2018-04-27 12:22:40 -Setting default value: [Ljava.lang.Integer;@45ac973
2018-04-27 12:22:40 -Converting 'Integer[]' value '[Ljava.lang.Integer;@45ac973' to type 'Integer[]'
2018-04-27 12:22:40 -    No conversion required, value is already a Integer[]
2018-04-27 12:22:40 -Setting default value: [Ljava.lang.Long;@28b7646
2018-04-27 12:22:40 -Converting 'Long[]' value '[Ljava.lang.Long;@28b7646' to type 'Long[]'
2018-04-27 12:22:40 -    No conversion required, value is already a Long[]
2018-04-27 12:22:40 -Setting default value: [Ljava.lang.Short;@40239b34
2018-04-27 12:22:40 -Converting 'Short[]' value '[Ljava.lang.Short;@40239b34' to type 'Short[]'
2018-04-27 12:22:40 -    No conversion required, value is already a Short[]
2018-04-27 12:22:40 -Setting default value: [Ljava.lang.String;@4e553d60
2018-04-27 12:22:40 -Converting 'String[]' value '[Ljava.lang.String;@4e553d60' to type 'String[]'
2018-04-27 12:22:40 -    No conversion required, value is already a String[]
2018-04-27 12:22:40 -Setting default value: [Ljava.lang.Class;@1c966488
2018-04-27 12:22:40 -Converting 'Class[]' value '[Ljava.lang.Class;@1c966488' to type 'Class[]'
2018-04-27 12:22:40 -    No conversion required, value is already a Class[]
2018-04-27 12:22:40 -Setting default value: [Ljava.util.Date;@45f6181a
2018-04-27 12:22:40 -Converting 'Date[]' value '[Ljava.util.Date;@45f6181a' to type 'Date[]'
2018-04-27 12:22:40 -    No conversion required, value is already a Date[]
2018-04-27 12:22:40 -Setting default value: [Ljava.util.Calendar;@7e0941cc
2018-04-27 12:22:40 -Converting 'Calendar[]' value '[Ljava.util.Calendar;@7e0941cc' to type 'Calendar[]'
2018-04-27 12:22:40 -    No conversion required, value is already a Calendar[]
2018-04-27 12:22:40 -Setting default value: [Ljava.io.File;@24d73c51
2018-04-27 12:22:40 -Converting 'java.io.File[]' value '[Ljava.io.File;@24d73c51' to type 'java.io.File[]'
2018-04-27 12:22:40 -    No conversion required, value is already a java.io.File[]
2018-04-27 12:22:40 -Setting default value: [Ljava.sql.Date;@f26cd76
2018-04-27 12:22:40 -Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@f26cd76' to type 'java.sql.Date[]'
2018-04-27 12:22:40 -    No conversion required, value is already a java.sql.Date[]
2018-04-27 12:22:40 -Setting default value: [Ljava.sql.Time;@65a8c306
2018-04-27 12:22:40 -Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@65a8c306' to type 'java.sql.Time[]'
2018-04-27 12:22:40 -    No conversion required, value is already a java.sql.Time[]
2018-04-27 12:22:40 -Setting default value: [Ljava.sql.Timestamp;@48ba37dc
2018-04-27 12:22:40 -Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@48ba37dc' to type 'java.sql.Timestamp[]'
2018-04-27 12:22:40 -    No conversion required, value is already a java.sql.Timestamp[]
2018-04-27 12:22:40 -Setting default value: [Ljava.net.URL;@113cc14d
2018-04-27 12:22:40 -Converting 'java.net.URL[]' value '[Ljava.net.URL;@113cc14d' to type 'java.net.URL[]'
2018-04-27 12:22:40 -    No conversion required, value is already a java.net.URL[]
2018-04-27 12:22:40 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 12:22:40 -Converting 'String' value 'group1' to type 'String'
2018-04-27 12:22:40 -设置值是 FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]192.168.71.158
2018-04-27 12:22:40 -Convert string '192.168.71.158' to class 'java.lang.String'
2018-04-27 12:22:40 -Converting 'String' value '192.168.71.158' to type 'String'
2018-04-27 12:22:40 -设置值是 FieldMateData [field=port, index=2, max=0, size=8, offsize=31]23000
2018-04-27 12:22:40 -Converting 'Integer' value '23000' to type 'Integer'
2018-04-27 12:22:40 -    No conversion required, value is already a Integer
2018-04-27 12:22:40 -设置值是 FieldMateData [field=storeIndex, index=3, max=0, size=1, offsize=39]0
2018-04-27 12:22:40 -Converting 'Byte' value '0' to type 'Byte'
2018-04-27 12:22:40 -    No conversion required, value is already a Byte
2018-04-27 12:22:40 -connect to /192.168.71.158:23000 soTimeout=1501 connectTimeout=601
2018-04-27 12:22:40 -对地址/192.168.71.158:23000发出交易请求StorageUploadFileCommand
2018-04-27 12:22:40 -发出交易请求..报文头为ProtoHead [contentLength=37, cmd=11, status=0]
2018-04-27 12:22:40 -交易参数为[0, 0, 0, 0, 0, 0, 0, 0, 22, 116, 120, 116, 0, 0, 0]
2018-04-27 12:22:40 -开始上传文件流大小为22
2018-04-27 12:22:40 -剩余数据量0
2018-04-27 12:22:40 -服务端返回报文头ProtoHead [contentLength=60, cmd=100, status=0]
2018-04-27 12:22:40 -dump class=com.github.tobato.fastdfs.domain.StorePath
2018-04-27 12:22:40 -----------------------------------------
2018-04-27 12:22:40 -FieldMateData [field=group, index=0, max=16, size=16, offsize=0]
2018-04-27 12:22:40 -FieldMateData [field=path, index=1, max=0, size=0, offsize=16]
2018-04-27 12:22:40 -设置值是 FieldMateData [field=group, index=0, max=16, size=16, offsize=0]group1
2018-04-27 12:22:40 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 12:22:40 -Converting 'String' value 'group1' to type 'String'
2018-04-27 12:22:40 -设置值是 FieldMateData [field=path, index=1, max=0, size=0, offsize=16]M00/00/00/wKhHnlripZOAQAO4AAAAFjU7Zbk843.txt
2018-04-27 12:22:40 -Convert string 'M00/00/00/wKhHnlripZOAQAO4AAAAFjU7Zbk843.txt' to class 'java.lang.String'
2018-04-27 12:22:40 -Converting 'String' value 'M00/00/00/wKhHnlripZOAQAO4AAAAFjU7Zbk843.txt' to type 'String'
2018-04-27 12:22:40 -result={}http://192.168.71.161:88/group1/M00/00/00/wKhHnlripZOAQAO4AAAAFjU7Zbk843.txt
2018-04-27 12:22:40 -Closing org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 12:22:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:22:40 -Closing org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 12:22:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 12:22:40 -Stopping beans in phase 2147483647
2018-04-27 12:22:40 -Stopping beans in phase 2147483647
2018-04-27 12:22:40 -Unregistering JMX-exposed beans on shutdown
2018-04-27 12:22:40 -Unregistering JMX-exposed beans on shutdown
2018-04-27 12:22:40 -Unregistering JMX-exposed beans
2018-04-27 12:22:40 -Unregistering JMX-exposed beans
2018-04-27 12:22:40 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 12:22:40 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 12:22:40 -disconnect from Socket[addr=/192.168.71.161,port=22122,localport=52042]
2018-04-27 12:22:40 -disconnect from Socket[addr=/192.168.71.158,port=23000,localport=52043]
2018-04-27 12:22:40 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 12:22:40 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 12:22:40 -HHH000031: Closing
2018-04-27 12:22:40 -External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
2018-04-27 12:22:40 -Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2018-04-27 12:22:40 -Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2018-04-27 12:22:40 -{dataSource-1} closed
2018-04-27 12:22:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:22:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.3 ms, state=CONNECTED}]
2018-04-27 12:22:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:22:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.4 ms, state=CONNECTED}]
2018-04-27 12:23:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:23:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.2 ms, state=CONNECTED}]
2018-04-27 12:23:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:23:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.5 ms, state=CONNECTED}]
2018-04-27 12:23:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:23:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2018-04-27 12:23:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:23:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.6 ms, state=CONNECTED}]
2018-04-27 12:23:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:23:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 12:23:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:23:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 12:24:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:24:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 12:24:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:24:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 12:24:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:24:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:24:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:24:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:24:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:24:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:24:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:24:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:25:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:25:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:25:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:25:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:25:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:25:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:25:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:25:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:25:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:25:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:25:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:25:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:26:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:26:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 12:26:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:26:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 12:26:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:26:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 12:26:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:26:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 12:26:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:26:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 12:26:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:26:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:27:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:27:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:27:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:27:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:27:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:27:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:27:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:27:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:27:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:27:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:27:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:27:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:28:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:28:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:28:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:28:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:28:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:28:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:28:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:28:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:28:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:28:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:28:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:28:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:29:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:29:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:29:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:29:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:29:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:29:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:29:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:29:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:29:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:29:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:29:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:29:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:30:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:30:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:30:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:30:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:30:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:30:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:30:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:30:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:30:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:30:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:30:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:30:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:31:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:31:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:31:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:31:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:31:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:31:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:31:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:31:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:31:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:31:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:31:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:31:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:32:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:32:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:32:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:32:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:32:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:32:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:32:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:32:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:32:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:32:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:32:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:32:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:33:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:33:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:33:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:33:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:33:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:33:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:33:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:33:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 12:33:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:33:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 12:33:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:33:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:34:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:34:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:34:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:34:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:34:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:34:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:34:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:34:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:34:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:34:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 12:34:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:34:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 12:35:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:35:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 12:35:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:35:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 12:35:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:35:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:35:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:35:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 12:35:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:35:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:35:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:35:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:36:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:36:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 12:36:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:36:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 12:36:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:36:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:36:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:36:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:36:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:36:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:36:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:36:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:37:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:37:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:37:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:37:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:37:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:37:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:37:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:37:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:37:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:37:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:37:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:37:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:38:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:38:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:38:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:38:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:38:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:38:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:38:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:38:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:38:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:38:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:38:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:38:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:39:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:39:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:39:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:39:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:39:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:39:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:39:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:39:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:39:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:39:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 12:39:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:39:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:40:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:40:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:40:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:40:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:40:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:40:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:40:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:40:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 12:40:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:40:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 12:40:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:40:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 12:41:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:41:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 12:41:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:41:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 12:41:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:41:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 12:41:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:41:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 12:41:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:41:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 12:41:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:41:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:42:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:42:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:42:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:42:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:42:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:42:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:42:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:42:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:42:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:42:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:42:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:42:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:43:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:43:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:43:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:43:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:43:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:43:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:43:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:43:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:43:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:43:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:43:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:43:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:44:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:44:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:44:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:44:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:44:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:44:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:44:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:44:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:44:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:44:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:44:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:44:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:45:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:45:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:45:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:45:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:45:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:45:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:45:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:45:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:45:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:45:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:45:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:45:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:46:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:46:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:46:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:46:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:46:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:46:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:46:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:46:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:46:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:46:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:46:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:46:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:47:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:47:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:47:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:47:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:47:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:47:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:47:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:47:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:47:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:47:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:47:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:47:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:48:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:48:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:48:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:48:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:48:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:48:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:48:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:48:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:48:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:48:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:48:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:48:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:49:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:49:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:49:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:49:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:49:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:49:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:49:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:49:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:49:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:49:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:49:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:49:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:50:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:50:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:50:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:50:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:50:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:50:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:50:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:50:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:50:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:50:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:50:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:50:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:51:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:51:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:51:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:51:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:51:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:51:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:51:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:51:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:51:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:51:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:51:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:51:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:52:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:52:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:52:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:52:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:52:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:52:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:52:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:52:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:52:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:52:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:52:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:52:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:53:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:53:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:53:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:53:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:53:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:53:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:53:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:53:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:53:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:53:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:53:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:53:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:54:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:54:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:54:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:54:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:54:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:54:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:54:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:54:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:54:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:54:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 12:54:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:54:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 12:55:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:55:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 12:55:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:55:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:55:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:55:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:55:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:55:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 12:55:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:55:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 12:55:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:55:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:56:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:56:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:56:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:56:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:56:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:56:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:56:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:56:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:56:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:56:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:56:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:56:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:57:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:57:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:57:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:57:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:57:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:57:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:57:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:57:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:57:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:57:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:57:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:57:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:58:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:58:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:58:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:58:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:58:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:58:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:58:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:58:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:58:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:58:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:58:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:58:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:59:02 -Checking status of 192.168.71.151:27017
2018-04-27 12:59:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 12:59:12 -Checking status of 192.168.71.151:27017
2018-04-27 12:59:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 12:59:22 -Checking status of 192.168.71.151:27017
2018-04-27 12:59:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:59:32 -Checking status of 192.168.71.151:27017
2018-04-27 12:59:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:59:42 -Checking status of 192.168.71.151:27017
2018-04-27 12:59:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 12:59:52 -Checking status of 192.168.71.151:27017
2018-04-27 12:59:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:00:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:00:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:00:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:00:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:00:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:00:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:00:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:00:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:00:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:00:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:00:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:00:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:01:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:01:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:01:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:01:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:01:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:01:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 13:01:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:01:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 13:01:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:01:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:01:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:01:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:02:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:02:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:02:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:02:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 13:02:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:02:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 13:02:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:02:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 13:02:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:02:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 13:02:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:02:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:03:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:03:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:03:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:03:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:03:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:03:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:03:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:03:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:03:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:03:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:03:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:03:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:04:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:04:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:04:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:04:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:04:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:04:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:04:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:04:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:04:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:04:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:04:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:04:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:05:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:05:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:05:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:05:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:05:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:05:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 13:05:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:05:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 13:05:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:05:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 13:05:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:05:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:06:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:06:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:06:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:06:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:06:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:06:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:06:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:06:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:06:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:06:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:06:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:06:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:07:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:07:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:07:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:07:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:07:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:07:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:07:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:07:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:07:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:07:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:07:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:07:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:08:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:08:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:08:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:08:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:08:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:08:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 13:08:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:08:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 13:08:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:08:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:08:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:08:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:09:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:09:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:09:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:09:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:09:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:09:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:09:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:09:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:09:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:09:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:09:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:09:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:10:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:10:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 13:10:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:10:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 13:10:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:10:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 13:10:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:10:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:10:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:10:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:10:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:10:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:11:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:11:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:11:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:11:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:11:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:11:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:11:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:11:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:11:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:11:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:11:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:11:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:12:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:12:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:12:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:12:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:12:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:12:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:12:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:12:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:12:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:12:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:12:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:12:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:13:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:13:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:13:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:13:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:13:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:13:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 13:13:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:13:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:13:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:13:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:13:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:13:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:14:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:14:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:14:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:14:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:14:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:14:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:14:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:14:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:14:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:14:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:14:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:14:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:15:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:15:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 13:15:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:15:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 13:15:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:15:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 13:15:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:15:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:15:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:15:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:15:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:15:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:16:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:16:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:16:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:16:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:16:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:16:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:16:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:16:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:16:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:16:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:16:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:16:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:17:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:17:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:17:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:17:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:17:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:17:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:17:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:17:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:17:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:17:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:17:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:17:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:18:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:18:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:18:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:18:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:18:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:18:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:18:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:18:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:18:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:18:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:18:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:18:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:19:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:19:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:19:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:19:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:19:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:19:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:19:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:19:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:19:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:19:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:19:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:19:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:20:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:20:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:20:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:20:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:20:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:20:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:20:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:20:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:20:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:20:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:20:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:20:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:21:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:21:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:21:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:21:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:21:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:21:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:21:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:21:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:21:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:21:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:21:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:21:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:22:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:22:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:22:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:22:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:22:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:22:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:22:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:22:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:22:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:22:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:22:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:22:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:23:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:23:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:23:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:23:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:23:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:23:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:23:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:23:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:23:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:23:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:23:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:23:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:24:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:24:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:24:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:24:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:24:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:24:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:24:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:24:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:24:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:24:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:24:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:24:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:25:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:25:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:25:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:25:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:25:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:25:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:25:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:25:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:25:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:25:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 13:25:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:25:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 13:26:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:26:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 13:26:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:26:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:26:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:26:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:26:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:26:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:26:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:26:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:26:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:26:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:27:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:27:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:27:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:27:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:27:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:27:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:27:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:27:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:27:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:27:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:27:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:27:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:28:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:28:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:28:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:28:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:28:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:28:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:28:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:28:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:28:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:28:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:28:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:28:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:29:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:29:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:29:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:29:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:29:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:29:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:29:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:29:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:29:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:29:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:29:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:29:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:30:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:30:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:30:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:30:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:30:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:30:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:30:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:30:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:30:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:30:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:30:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:30:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:31:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:31:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:31:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:31:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:31:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:31:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:31:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:31:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:31:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:31:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:31:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:31:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.8 ms, state=CONNECTED}]
2018-04-27 13:32:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:32:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 13:32:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:32:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 13:32:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:32:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 13:32:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:32:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 13:32:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:32:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 13:32:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:32:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:33:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:33:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:33:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:33:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:33:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:33:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:33:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:33:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:33:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:33:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:33:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:33:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:34:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:34:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:34:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:34:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:34:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:34:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:34:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:34:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:34:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:34:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:34:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:34:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:35:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:35:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:35:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:35:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:35:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:35:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:35:32 -Checking status of 192.168.71.151:27017
2018-04-27 13:35:32 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:35:42 -Checking status of 192.168.71.151:27017
2018-04-27 13:35:42 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:35:52 -Checking status of 192.168.71.151:27017
2018-04-27 13:35:52 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:36:02 -Checking status of 192.168.71.151:27017
2018-04-27 13:36:02 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 13:36:12 -Checking status of 192.168.71.151:27017
2018-04-27 13:36:12 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 13:36:22 -Checking status of 192.168.71.151:27017
2018-04-27 13:36:22 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 13:36:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:36:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 13:36:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:36:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 13:36:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:36:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 13:37:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:37:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 13:37:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:37:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:37:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:37:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:37:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:37:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:37:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:37:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:37:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:37:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:38:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:38:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:38:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:38:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:38:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:38:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:38:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:38:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:38:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:38:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:38:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:38:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:39:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:39:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:39:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:39:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:39:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:39:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:39:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:39:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:39:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:39:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:39:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:39:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:40:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:40:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:40:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:40:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:40:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:40:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:40:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:40:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:40:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:40:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:40:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:40:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:41:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:41:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:41:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:41:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:41:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:41:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:41:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:41:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:41:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:41:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:41:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:41:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:42:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:42:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:42:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:42:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:42:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:42:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:42:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:42:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:42:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:42:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:42:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:42:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:43:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:43:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:43:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:43:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:43:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:43:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:43:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:43:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:43:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:43:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:43:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:43:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 13:44:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:44:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:44:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:44:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:44:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:44:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:44:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:44:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 13:44:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:44:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 13:44:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:44:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 13:45:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:45:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:45:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:45:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:45:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:45:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:45:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:45:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:45:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:45:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 13:45:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:45:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:46:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:46:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:46:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:46:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:46:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:46:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:46:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:46:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:46:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:46:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:46:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:46:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:47:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:47:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:47:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:47:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:47:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:47:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:47:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:47:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:47:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:47:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:47:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:47:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:48:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:48:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:48:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:48:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:48:23 -Checking status of 192.168.71.151:27017
2018-04-27 13:48:23 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 13:48:29 -Starting FastdfsTests on DESKTOP-4VE2VST with PID 18796 (started by Qiang in Y:\MyGit\demo)
2018-04-27 13:48:29 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 13:48:29 -The following profiles are active: dev
2018-04-27 13:48:29 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 13:48:29 GMT+08:00 2018]; root of context hierarchy
2018-04-27 13:48:29 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 13:48:29 GMT+08:00 2018]; root of context hierarchy
2018-04-27 13:48:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:48:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:48:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:48:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:48:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:48:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:48:32 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 13:48:32 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 13:48:32 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 13:48:32 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 13:48:32 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 13:48:32 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 13:48:32 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 13:48:32 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 13:48:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:48:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 13:48:32 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 13:48:33 -Checking status of 192.168.71.151:27017
2018-04-27 13:48:33 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=23.7 ms, state=CONNECTED}]
2018-04-27 13:48:33 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 13:48:33 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 13:48:33 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 13:48:33 -Loaded expression factory via original TCCL
2018-04-27 13:48:33 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 13:48:33 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 13:48:33 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 13:48:33 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 13:48:33 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 13:48:33 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 13:48:33 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 13:48:33 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 13:48:33 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 13:48:33 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 13:48:33 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 13:48:33 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 13:48:33 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 13:48:33 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 13:48:33 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 13:48:33 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 13:48:33 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$6d192b85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:33 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$6d192b85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a01c409] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a01c409] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$5ddc1715] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$5ddc1715] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 13:48:34 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 13:48:34 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 13:48:34 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 13:48:34 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 13:48:34 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 13:48:34 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 13:48:34 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 13:48:34 -Starting Post-processing phase
2018-04-27 13:48:34 -Building annotation class map
2018-04-27 13:48:34 -Building interface class map for 8 classes
2018-04-27 13:48:34 - - Actor implements 0 interfaces
2018-04-27 13:48:34 - - Role implements 1 interfaces
2018-04-27 13:48:34 -   - java.io.Serializable
2018-04-27 13:48:34 - - MongoUser implements 0 interfaces
2018-04-27 13:48:34 - - Role implements 0 interfaces
2018-04-27 13:48:34 - - Movie implements 0 interfaces
2018-04-27 13:48:34 - - Department implements 0 interfaces
2018-04-27 13:48:34 - - BookBean implements 0 interfaces
2018-04-27 13:48:34 - - User implements 1 interfaces
2018-04-27 13:48:34 -   - java.io.Serializable
2018-04-27 13:48:34 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 13:48:34 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 13:48:34 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 13:48:34 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 13:48:34 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 13:48:34 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 13:48:34 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 13:48:34 -Post-processing: com.example.ren.model.BookBean
2018-04-27 13:48:34 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 13:48:34 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 13:48:34 -Checking for @Transient classes....
2018-04-27 13:48:34 -Registering converters and deregistering transient fields and methods....
2018-04-27 13:48:34 -Post-processing complete
2018-04-27 13:48:34 -Building Index Metadata.
2018-04-27 13:48:34 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:34 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:48:35 -{dataSource-1} inited
2018-04-27 13:48:35 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 13:48:35 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 13:48:35 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 13:48:34",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:994185757, ConnectTime:"2018-04-27 13:48:35", UseCount:1, LastActiveTime:"2018-04-27 13:48:35"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 13:48:35 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 13:48:35 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 13:48:35 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 13:48:35 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 13:48:35 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 13:48:35 -HHH000206: hibernate.properties not found
2018-04-27 13:48:35 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 13:48:35 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 13:48:35 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 13:48:35 -Adding type registration boolean -> org.hibernate.type.BooleanType@22da2fe6
2018-04-27 13:48:35 -Adding type registration boolean -> org.hibernate.type.BooleanType@22da2fe6
2018-04-27 13:48:35 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22da2fe6
2018-04-27 13:48:35 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5707f613
2018-04-27 13:48:35 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@68b11545
2018-04-27 13:48:35 -Adding type registration yes_no -> org.hibernate.type.YesNoType@4ea17147
2018-04-27 13:48:35 -Adding type registration byte -> org.hibernate.type.ByteType@445821a6
2018-04-27 13:48:35 -Adding type registration byte -> org.hibernate.type.ByteType@445821a6
2018-04-27 13:48:35 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@445821a6
2018-04-27 13:48:35 -Adding type registration character -> org.hibernate.type.CharacterType@40c06358
2018-04-27 13:48:35 -Adding type registration char -> org.hibernate.type.CharacterType@40c06358
2018-04-27 13:48:35 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40c06358
2018-04-27 13:48:35 -Adding type registration short -> org.hibernate.type.ShortType@dd3f8aa
2018-04-27 13:48:35 -Adding type registration short -> org.hibernate.type.ShortType@dd3f8aa
2018-04-27 13:48:35 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@dd3f8aa
2018-04-27 13:48:35 -Adding type registration integer -> org.hibernate.type.IntegerType@65c5bf0e
2018-04-27 13:48:35 -Adding type registration int -> org.hibernate.type.IntegerType@65c5bf0e
2018-04-27 13:48:35 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65c5bf0e
2018-04-27 13:48:35 -Adding type registration long -> org.hibernate.type.LongType@4d93f75b
2018-04-27 13:48:35 -Adding type registration long -> org.hibernate.type.LongType@4d93f75b
2018-04-27 13:48:35 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d93f75b
2018-04-27 13:48:35 -Adding type registration float -> org.hibernate.type.FloatType@251c4280
2018-04-27 13:48:35 -Adding type registration float -> org.hibernate.type.FloatType@251c4280
2018-04-27 13:48:35 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@251c4280
2018-04-27 13:48:35 -Adding type registration double -> org.hibernate.type.DoubleType@5921b93c
2018-04-27 13:48:35 -Adding type registration double -> org.hibernate.type.DoubleType@5921b93c
2018-04-27 13:48:35 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5921b93c
2018-04-27 13:48:35 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28babeca
2018-04-27 13:48:35 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28babeca
2018-04-27 13:48:35 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@656a3d6b
2018-04-27 13:48:35 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@656a3d6b
2018-04-27 13:48:35 -Adding type registration string -> org.hibernate.type.StringType@58833798
2018-04-27 13:48:35 -Adding type registration java.lang.String -> org.hibernate.type.StringType@58833798
2018-04-27 13:48:35 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3f8dfe74
2018-04-27 13:48:35 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@570ba13
2018-04-27 13:48:35 -Adding type registration url -> org.hibernate.type.UrlType@6c977dcf
2018-04-27 13:48:35 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@6c977dcf
2018-04-27 13:48:35 -Adding type registration Duration -> org.hibernate.type.DurationType@385dfb63
2018-04-27 13:48:35 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@385dfb63
2018-04-27 13:48:35 -Adding type registration Instant -> org.hibernate.type.InstantType@2233cac0
2018-04-27 13:48:35 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2233cac0
2018-04-27 13:48:35 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@28cd2c2
2018-04-27 13:48:35 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@28cd2c2
2018-04-27 13:48:35 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e02721d
2018-04-27 13:48:35 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e02721d
2018-04-27 13:48:35 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5fdfe8cf
2018-04-27 13:48:35 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5fdfe8cf
2018-04-27 13:48:35 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d42404e
2018-04-27 13:48:35 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d42404e
2018-04-27 13:48:35 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2a4f8009
2018-04-27 13:48:35 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2a4f8009
2018-04-27 13:48:35 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@50085d9c
2018-04-27 13:48:35 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@50085d9c
2018-04-27 13:48:35 -Adding type registration date -> org.hibernate.type.DateType@4f3e9fbb
2018-04-27 13:48:35 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f3e9fbb
2018-04-27 13:48:35 -Adding type registration time -> org.hibernate.type.TimeType@7b53b1ad
2018-04-27 13:48:35 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7b53b1ad
2018-04-27 13:48:35 -Adding type registration timestamp -> org.hibernate.type.TimestampType@7fdd43cd
2018-04-27 13:48:35 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7fdd43cd
2018-04-27 13:48:35 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7fdd43cd
2018-04-27 13:48:35 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c628f6a
2018-04-27 13:48:35 -Adding type registration calendar -> org.hibernate.type.CalendarType@7bee8621
2018-04-27 13:48:35 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7bee8621
2018-04-27 13:48:35 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7bee8621
2018-04-27 13:48:35 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4877919f
2018-04-27 13:48:35 -Adding type registration locale -> org.hibernate.type.LocaleType@69364b2d
2018-04-27 13:48:35 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69364b2d
2018-04-27 13:48:35 -Adding type registration currency -> org.hibernate.type.CurrencyType@23ca36d
2018-04-27 13:48:35 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@23ca36d
2018-04-27 13:48:35 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@2a50b32d
2018-04-27 13:48:35 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2a50b32d
2018-04-27 13:48:35 -Adding type registration class -> org.hibernate.type.ClassType@715f45c6
2018-04-27 13:48:35 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@715f45c6
2018-04-27 13:48:35 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c1f8dbd
2018-04-27 13:48:35 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c1f8dbd
2018-04-27 13:48:35 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@335f5c69
2018-04-27 13:48:35 -Adding type registration binary -> org.hibernate.type.BinaryType@6dca31eb
2018-04-27 13:48:35 -Adding type registration byte[] -> org.hibernate.type.BinaryType@6dca31eb
2018-04-27 13:48:35 -Adding type registration [B -> org.hibernate.type.BinaryType@6dca31eb
2018-04-27 13:48:35 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@740fefc6
2018-04-27 13:48:35 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@740fefc6
2018-04-27 13:48:35 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@740fefc6
2018-04-27 13:48:35 -Adding type registration row_version -> org.hibernate.type.RowVersionType@4ef4f627
2018-04-27 13:48:35 -Adding type registration image -> org.hibernate.type.ImageType@1cbc5693
2018-04-27 13:48:35 -Adding type registration characters -> org.hibernate.type.CharArrayType@ab2e6d2
2018-04-27 13:48:35 -Adding type registration char[] -> org.hibernate.type.CharArrayType@ab2e6d2
2018-04-27 13:48:35 -Adding type registration [C -> org.hibernate.type.CharArrayType@ab2e6d2
2018-04-27 13:48:35 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@674da77b
2018-04-27 13:48:35 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@674da77b
2018-04-27 13:48:35 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@674da77b
2018-04-27 13:48:35 -Adding type registration text -> org.hibernate.type.TextType@477021ee
2018-04-27 13:48:35 -Adding type registration ntext -> org.hibernate.type.NTextType@2ba42204
2018-04-27 13:48:35 -Adding type registration blob -> org.hibernate.type.BlobType@15639d09
2018-04-27 13:48:35 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15639d09
2018-04-27 13:48:35 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@611e5819
2018-04-27 13:48:35 -Adding type registration clob -> org.hibernate.type.ClobType@1953bc95
2018-04-27 13:48:35 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1953bc95
2018-04-27 13:48:35 -Adding type registration nclob -> org.hibernate.type.NClobType@4c531172
2018-04-27 13:48:35 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4c531172
2018-04-27 13:48:35 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54af3cb9
2018-04-27 13:48:35 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@653fb8d1
2018-04-27 13:48:35 -Adding type registration serializable -> org.hibernate.type.SerializableType@1d3c112a
2018-04-27 13:48:35 -Adding type registration object -> org.hibernate.type.ObjectType@4dfdfe7d
2018-04-27 13:48:35 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4dfdfe7d
2018-04-27 13:48:35 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c1e14f
2018-04-27 13:48:35 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@226de93c
2018-04-27 13:48:35 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@72028a45
2018-04-27 13:48:35 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74667e6a
2018-04-27 13:48:35 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7b222230
2018-04-27 13:48:35 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@364b1061
2018-04-27 13:48:35 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@50fdf44f
2018-04-27 13:48:35 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@172f4514
2018-04-27 13:48:35 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 13:48:35 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 13:48:35 -JDBC version : 4.0
2018-04-27 13:48:35 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 13:48:35 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 13:48:35 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 13:48:36 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 13:48:36 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 13:48:36 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 13:48:36 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 13:48:36 -Import with entity name Department
2018-04-27 13:48:36 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -MetadataSourceProcessor property id with lazy=false
2018-04-27 13:48:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 13:48:36 -building SimpleValue for id
2018-04-27 13:48:36 -Building property id
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -MetadataSourceProcessor property name with lazy=false
2018-04-27 13:48:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 13:48:36 -building SimpleValue for name
2018-04-27 13:48:36 -Building property name
2018-04-27 13:48:36 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 13:48:36 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 13:48:36 -Import with entity name Role
2018-04-27 13:48:36 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -MetadataSourceProcessor property id with lazy=false
2018-04-27 13:48:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 13:48:36 -building SimpleValue for id
2018-04-27 13:48:36 -Building property id
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -MetadataSourceProcessor property name with lazy=false
2018-04-27 13:48:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 13:48:36 -building SimpleValue for name
2018-04-27 13:48:36 -Building property name
2018-04-27 13:48:36 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 13:48:36 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 13:48:36 -Import with entity name User
2018-04-27 13:48:36 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -MetadataSourceProcessor property id with lazy=false
2018-04-27 13:48:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 13:48:36 -building SimpleValue for id
2018-04-27 13:48:36 -Building property id
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 13:48:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 13:48:36 -building SimpleValue for createDate
2018-04-27 13:48:36 -Building property createDate
2018-04-27 13:48:36 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -Building property department
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -MetadataSourceProcessor property email with lazy=false
2018-04-27 13:48:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 13:48:36 -building SimpleValue for email
2018-04-27 13:48:36 -Building property email
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -MetadataSourceProcessor property name with lazy=false
2018-04-27 13:48:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 13:48:36 -building SimpleValue for name
2018-04-27 13:48:36 -Building property name
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -MetadataSourceProcessor property password with lazy=false
2018-04-27 13:48:36 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 13:48:36 -building SimpleValue for password
2018-04-27 13:48:36 -Building property password
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 13:48:36 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 13:48:36 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 13:48:36 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 13:48:36 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 13:48:36 -Building property roles
2018-04-27 13:48:36 -Starting fillSimpleValue for id
2018-04-27 13:48:36 -Starting fillSimpleValue for name
2018-04-27 13:48:36 -Starting fillSimpleValue for id
2018-04-27 13:48:36 -Starting fillSimpleValue for name
2018-04-27 13:48:36 -Starting fillSimpleValue for id
2018-04-27 13:48:36 -Starting fillSimpleValue for createDate
2018-04-27 13:48:36 -Starting fillSimpleValue for email
2018-04-27 13:48:36 -Starting fillSimpleValue for name
2018-04-27 13:48:36 -Starting fillSimpleValue for password
2018-04-27 13:48:36 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 13:48:36 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 13:48:36 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 13:48:36 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 13:48:36 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 13:48:36 -Mapped collection key: user_id, element: role_id
2018-04-27 13:48:36 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 13:48:36 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 13:48:36 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 13:48:36 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 13:48:36 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 13:48:36 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 13:48:36 -Building session factory
2018-04-27 13:48:36 -SessionFactory name : null
2018-04-27 13:48:36 -Automatic flush during beforeCompletion(): enabled
2018-04-27 13:48:36 -Automatic session close at end of transaction: disabled
2018-04-27 13:48:36 -Statistics: disabled
2018-04-27 13:48:36 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 13:48:36 -Default entity-mode: pojo
2018-04-27 13:48:36 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 13:48:36 -Allow initialization of lazy state outside session : disabled
2018-04-27 13:48:36 -Using BatchFetchStyle : LEGACY
2018-04-27 13:48:36 -Default batch fetch size: -1
2018-04-27 13:48:36 -Maximum outer join fetch depth: 2
2018-04-27 13:48:36 -Default null ordering: NONE
2018-04-27 13:48:36 -Order SQL updates by primary key: disabled
2018-04-27 13:48:36 -Order SQL inserts for batching: disabled
2018-04-27 13:48:36 -multi-tenancy strategy : NONE
2018-04-27 13:48:36 -JTA Track by Thread: enabled
2018-04-27 13:48:36 -Query language substitutions: {}
2018-04-27 13:48:36 -JPA query language strict compliance: disabled
2018-04-27 13:48:36 -Named query checking : enabled
2018-04-27 13:48:36 -Second-level cache: enabled
2018-04-27 13:48:36 -Second-level query cache: disabled
2018-04-27 13:48:36 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@284990de
2018-04-27 13:48:36 -Second-level cache region prefix: null
2018-04-27 13:48:36 -Optimize second-level cache for minimal puts: disabled
2018-04-27 13:48:36 -Structured second-level cache entries: disabled
2018-04-27 13:48:36 -Second-level cache direct-reference entries: disabled
2018-04-27 13:48:36 -Automatic eviction of collection cache: disabled
2018-04-27 13:48:36 -JDBC batch size: 15
2018-04-27 13:48:36 -JDBC batch updates for versioned data: enabled
2018-04-27 13:48:36 -Scrollable result sets: enabled
2018-04-27 13:48:36 -Wrap result sets: disabled
2018-04-27 13:48:36 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 13:48:36 -JDBC result set fetch size: null
2018-04-27 13:48:36 -Connection release mode: ON_CLOSE
2018-04-27 13:48:36 -Generate SQL with comments: disabled
2018-04-27 13:48:36 -Session factory constructed with filter configurations : {}
2018-04-27 13:48:36 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\test-classes;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-test\2.0.0.RELEASE\spring-boot-starter-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test\2.0.0.RELEASE\spring-boot-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.0.0.RELEASE\spring-boot-test-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;X:\Maven\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;X:\Maven\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;X:\Maven\repository\org\assertj\assertj-core\3.9.1\assertj-core-3.9.1.jar;X:\Maven\repository\org\mockito\mockito-core\2.15.0\mockito-core-2.15.0.jar;X:\Maven\repository\net\bytebuddy\byte-buddy\1.7.10\byte-buddy-1.7.10.jar;X:\Maven\repository\net\bytebuddy\byte-buddy-agent\1.7.10\byte-buddy-agent-1.7.10.jar;X:\Maven\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;X:\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;X:\Maven\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;X:\Maven\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;X:\Maven\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;X:\Maven\repository\org\xmlunit\xmlunit-core\2.5.1\xmlunit-core-2.5.1.jar;X:\Maven\repository\org\springframework\spring-test\4.3.6.RELEASE\spring-test-4.3.6.RELEASE.jar;X:\Maven\repository\junit\junit\4.12\junit-4.12.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 com.example.ren.fastdfs.FastdfsTests,uploadStringTest, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@47569167, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=18796, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@42d9e8d2, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 13:48:34",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:994185757, ConnectTime:"2018-04-27 13:48:35", UseCount:2, LastActiveTime:"2018-04-27 13:48:35"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 13:48:36 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 13:48:36 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 13:48:36 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 13:48:36 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 13:48:36 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 13:48:36 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 13:48:36 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 13:48:36 -Loaded expression factory via original TCCL
2018-04-27 13:48:36 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 13:48:36 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 13:48:36 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 13:48:36 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 13:48:36 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 13:48:36 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 13:48:36 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 13:48:36 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 13:48:36 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 13:48:36 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 13:48:36 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 13:48:36 -Skipping JACC integration as it was not enabled
2018-04-27 13:48:36 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 13:48:36 -Instantiated session factory
2018-04-27 13:48:36 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 13:48:36 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 13:48:36 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 13:48:36 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 13:48:36 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 13:48:36 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 13:48:36 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 13:48:36 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 13:48:36 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 13:48:36 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 13:48:36 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 13:48:36 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 13:48:36 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 13:48:36 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 13:48:36 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 13:48:36 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 13:48:36 - One-shot delete: delete from user_role where user_id=?
2018-04-27 13:48:36 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 13:48:36 - Version select: select id from role where id =?
2018-04-27 13:48:36 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 13:48:36 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 13:48:36 - Update 0: update role set name=? where id=?
2018-04-27 13:48:36 - Delete 0: delete from role where id=?
2018-04-27 13:48:36 - Identity insert: insert into role (name) values (?)
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e2c6702]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@790ac3e0]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cee5365]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56d6a1b1]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44da7eb3]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d512652]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b96f8b0]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc0d9b4]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e4f4092]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4416e18d]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3120495d]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:48:36 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:48:36 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:48:36 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 13:48:36 - Version select: select id from department where id =?
2018-04-27 13:48:36 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 13:48:36 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 13:48:36 - Update 0: update department set name=? where id=?
2018-04-27 13:48:36 - Delete 0: delete from department where id=?
2018-04-27 13:48:36 - Identity insert: insert into department (name) values (?)
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26bb92e2]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@658e7ead]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@762bf32d]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b1a30e5]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34fcd292]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@496cedbb]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3957d88b]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fba0dac]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cbe455c]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be38eba]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce3409b]
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:48:36 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:48:36 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:48:36 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 13:48:36 - Version select: select id from user where id =?
2018-04-27 13:48:36 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 13:48:36 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 13:48:36 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 13:48:36 - Delete 0: delete from user where id=?
2018-04-27 13:48:36 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66234b0f]
2018-04-27 13:48:36 -Visiting attribute path : createDate
2018-04-27 13:48:36 -Visiting attribute path : department
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c5747db]
2018-04-27 13:48:36 -Visiting attribute path : department.name
2018-04-27 13:48:36 -Visiting attribute path : email
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Visiting attribute path : password
2018-04-27 13:48:36 -Visiting attribute path : roles
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28bf82d9]
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f357c9d]
2018-04-27 13:48:36 -Visiting attribute path : roles.name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54f2df29]
2018-04-27 13:48:36 -Visiting attribute path : createDate
2018-04-27 13:48:36 -Visiting attribute path : department
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655203e3]
2018-04-27 13:48:36 -Visiting attribute path : department.name
2018-04-27 13:48:36 -Visiting attribute path : email
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Visiting attribute path : password
2018-04-27 13:48:36 -Visiting attribute path : roles
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@729cd862]
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b71d24]
2018-04-27 13:48:36 -Visiting attribute path : roles.name
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@589dfa6f]
2018-04-27 13:48:36 -Visiting attribute path : createDate
2018-04-27 13:48:36 -Visiting attribute path : department
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8667bb]
2018-04-27 13:48:36 -Visiting attribute path : email
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Visiting attribute path : password
2018-04-27 13:48:36 -Visiting attribute path : roles
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@100d0218]
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2774dcf4]
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b829d5]
2018-04-27 13:48:36 -Visiting attribute path : createDate
2018-04-27 13:48:36 -Visiting attribute path : department
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4baf997]
2018-04-27 13:48:36 -Visiting attribute path : email
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Visiting attribute path : password
2018-04-27 13:48:36 -Visiting attribute path : roles
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5280688]
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@643f6179]
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ab6521]
2018-04-27 13:48:36 -Visiting attribute path : createDate
2018-04-27 13:48:36 -Visiting attribute path : department
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7757025d]
2018-04-27 13:48:36 -Visiting attribute path : email
2018-04-27 13:48:36 -Visiting attribute path : name
2018-04-27 13:48:36 -Visiting attribute path : password
2018-04-27 13:48:36 -Visiting attribute path : roles
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68fc9167]
2018-04-27 13:48:36 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c46334]
2018-04-27 13:48:36 -Building LoadPlan...
2018-04-27 13:48:36 -processing queryspace <gen:0>
2018-04-27 13:48:36 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:48:36 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12fccff0]
2018-04-27 13:48:37 -Visiting attribute path : createDate
2018-04-27 13:48:37 -Visiting attribute path : department
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@510da778]
2018-04-27 13:48:37 -Visiting attribute path : email
2018-04-27 13:48:37 -Visiting attribute path : name
2018-04-27 13:48:37 -Visiting attribute path : password
2018-04-27 13:48:37 -Visiting attribute path : roles
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20a1b3ae]
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54567b05]
2018-04-27 13:48:37 -Building LoadPlan...
2018-04-27 13:48:37 -processing queryspace <gen:0>
2018-04-27 13:48:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:48:37 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5e2525]
2018-04-27 13:48:37 -Visiting attribute path : createDate
2018-04-27 13:48:37 -Visiting attribute path : department
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b458cd6]
2018-04-27 13:48:37 -Visiting attribute path : email
2018-04-27 13:48:37 -Visiting attribute path : name
2018-04-27 13:48:37 -Visiting attribute path : password
2018-04-27 13:48:37 -Visiting attribute path : roles
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c2c44e8]
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7103745]
2018-04-27 13:48:37 -Building LoadPlan...
2018-04-27 13:48:37 -processing queryspace <gen:0>
2018-04-27 13:48:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:48:37 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@227a933d]
2018-04-27 13:48:37 -Visiting attribute path : createDate
2018-04-27 13:48:37 -Visiting attribute path : department
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bfb93cf]
2018-04-27 13:48:37 -Visiting attribute path : email
2018-04-27 13:48:37 -Visiting attribute path : name
2018-04-27 13:48:37 -Visiting attribute path : password
2018-04-27 13:48:37 -Visiting attribute path : roles
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@dd737ea]
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc2ae16]
2018-04-27 13:48:37 -Building LoadPlan...
2018-04-27 13:48:37 -processing queryspace <gen:0>
2018-04-27 13:48:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:48:37 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a0963be]
2018-04-27 13:48:37 -Visiting attribute path : createDate
2018-04-27 13:48:37 -Visiting attribute path : department
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e7e8f1]
2018-04-27 13:48:37 -Visiting attribute path : email
2018-04-27 13:48:37 -Visiting attribute path : name
2018-04-27 13:48:37 -Visiting attribute path : password
2018-04-27 13:48:37 -Visiting attribute path : roles
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27bb4dc5]
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@464ede1f]
2018-04-27 13:48:37 -Building LoadPlan...
2018-04-27 13:48:37 -processing queryspace <gen:0>
2018-04-27 13:48:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:48:37 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64910b2d]
2018-04-27 13:48:37 -Visiting attribute path : createDate
2018-04-27 13:48:37 -Visiting attribute path : department
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fef75c6]
2018-04-27 13:48:37 -Visiting attribute path : email
2018-04-27 13:48:37 -Visiting attribute path : name
2018-04-27 13:48:37 -Visiting attribute path : password
2018-04-27 13:48:37 -Visiting attribute path : roles
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f61e002]
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@334540a0]
2018-04-27 13:48:37 -Building LoadPlan...
2018-04-27 13:48:37 -processing queryspace <gen:0>
2018-04-27 13:48:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:48:37 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f179f51]
2018-04-27 13:48:37 -Visiting attribute path : createDate
2018-04-27 13:48:37 -Visiting attribute path : department
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7308aa]
2018-04-27 13:48:37 -Visiting attribute path : email
2018-04-27 13:48:37 -Visiting attribute path : name
2018-04-27 13:48:37 -Visiting attribute path : password
2018-04-27 13:48:37 -Visiting attribute path : roles
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42aa1324]
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6164e137]
2018-04-27 13:48:37 -Building LoadPlan...
2018-04-27 13:48:37 -processing queryspace <gen:0>
2018-04-27 13:48:37 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:48:37 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 13:48:37 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 13:48:37 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d0b814d]
2018-04-27 13:48:37 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ce15112]
2018-04-27 13:48:37 -Visiting attribute path : name
2018-04-27 13:48:37 -Building LoadPlan...
2018-04-27 13:48:37 -processing queryspace <gen:0>
2018-04-27 13:48:37 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 13:48:37 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 13:48:37 -No alter strings for table : department
2018-04-27 13:48:37 -No alter strings for table : role
2018-04-27 13:48:37 -No alter strings for table : user
2018-04-27 13:48:37 -No alter strings for table : user_role
2018-04-27 13:48:37 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 13:48:37 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 13:48:37 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 13:48:37 -Checking 0 named HQL queries
2018-04-27 13:48:37 -Checking 0 named SQL queries
2018-04-27 13:48:37 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@57c6feea
2018-04-27 13:48:37 -Registering SessionFactory: 0c705e18-3e75-43be-af09-3a1b6f068ebd (<unnamed>)
2018-04-27 13:48:37 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 13:48:37 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 13:48:37 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 13:48:37 -init trackerLocator [192.168.71.161:22122]
2018-04-27 13:48:37 -Statistics initialized [enabled=false]
2018-04-27 13:48:37 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@69fe7090
2018-04-27 13:48:37 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 13:48:37 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 13:48:37 -throwQueryException() : no errors
2018-04-27 13:48:37 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 13:48:37 -select << begin [level=1, statement=select]
2018-04-27 13:48:37 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 13:48:37 -Resolved : t -> user0_.id
2018-04-27 13:48:38 -Resolved : t -> user0_.id
2018-04-27 13:48:38 -getDataType() : name -> org.hibernate.type.StringType@58833798
2018-04-27 13:48:38 -Resolved : t.name -> user0_.name
2018-04-27 13:48:38 -select : finishing up [level=1, statement=select]
2018-04-27 13:48:38 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 13:48:38 -Using FROM fragment [user user0_]
2018-04-27 13:48:38 -select >> end [level=1, statement=select]
2018-04-27 13:48:38 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@58833798}

2018-04-27 13:48:38 -throwQueryException() : no errors
2018-04-27 13:48:38 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 13:48:38 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 13:48:38 -throwQueryException() : no errors
2018-04-27 13:48:38 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 13:48:38 -throwQueryException() : no errors
2018-04-27 13:48:38 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 13:48:38 -select << begin [level=1, statement=select]
2018-04-27 13:48:38 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 13:48:38 -Resolved : t -> user0_.id
2018-04-27 13:48:38 -Resolved : t -> user0_.id
2018-04-27 13:48:38 -getDataType() : name -> org.hibernate.type.StringType@58833798
2018-04-27 13:48:38 -Resolved : t.name -> user0_.name
2018-04-27 13:48:38 -Resolved : t -> user0_.id
2018-04-27 13:48:38 -getDataType() : email -> org.hibernate.type.StringType@58833798
2018-04-27 13:48:38 -Resolved : t.email -> user0_.email
2018-04-27 13:48:38 -select : finishing up [level=1, statement=select]
2018-04-27 13:48:38 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 13:48:38 -Using FROM fragment [user user0_]
2018-04-27 13:48:38 -select >> end [level=1, statement=select]
2018-04-27 13:48:38 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@58833798}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@58833798}

2018-04-27 13:48:38 -throwQueryException() : no errors
2018-04-27 13:48:38 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 13:48:38 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 13:48:38 -throwQueryException() : no errors
2018-04-27 13:48:38 -Using SLF4J as the default logging framework
2018-04-27 13:48:38 --Dio.netty.eventLoopThreads: 4
2018-04-27 13:48:38 --Dio.netty.leakDetection.level: simple
2018-04-27 13:48:38 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 13:48:38 -Platform: Windows
2018-04-27 13:48:38 --Dio.netty.noUnsafe: false
2018-04-27 13:48:38 -Java version: 8
2018-04-27 13:48:38 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 13:48:38 -sun.misc.Unsafe.copyMemory: available
2018-04-27 13:48:38 -java.nio.Buffer.address: available
2018-04-27 13:48:38 -direct buffer constructor: available
2018-04-27 13:48:38 -java.nio.Bits.unaligned: available, true
2018-04-27 13:48:38 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 13:48:38 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 13:48:38 -sun.misc.Unsafe: available
2018-04-27 13:48:38 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 13:48:38 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 13:48:38 --Dio.netty.noPreferDirect: false
2018-04-27 13:48:38 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 13:48:38 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 13:48:38 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 13:48:38 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1c011855
2018-04-27 13:48:38 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 13:48:38 -Using Slf4j logging framework
2018-04-27 13:48:38 -Starting UnsafeSupport init in Java 1.8
2018-04-27 13:48:38 -Unsafe is available
2018-04-27 13:48:38 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 13:48:38 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 13:48:38 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 13:48:38 --Dio.netty.allocator.pageSize: 8192
2018-04-27 13:48:38 --Dio.netty.allocator.maxOrder: 11
2018-04-27 13:48:38 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 13:48:38 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 13:48:38 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 13:48:38 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 13:48:38 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 13:48:38 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 13:48:38 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 13:48:38 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 13:48:38 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 13:48:38 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 13:48:39 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 13:48:39 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 13:48:39 -Neo4jMappingContext initialisation completed
2018-04-27 13:48:39 -Neo4jMappingContext initialisation completed
2018-04-27 13:48:40 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 13:48:40 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 13:48:40 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 13:48:40 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 13:48:40 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 13:48:40 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 13:48:40 -Opened connection [connectionId{localValue:1, serverValue:25}] to 192.168.71.151:27017
2018-04-27 13:48:40 -Checking status of 192.168.71.151:27017
2018-04-27 13:48:40 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=5299560}
2018-04-27 13:48:40 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.3 ms, state=CONNECTED}]
2018-04-27 13:48:41 -Opened connection [connectionId{localValue:2, serverValue:26}] to 192.168.71.151:27017
2018-04-27 13:48:41 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:26}] to server 192.168.71.151:27017
2018-04-27 13:48:41 -Command execution completed
2018-04-27 13:48:41 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 13:48:41 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 13:48:41 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 13:48:41 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 13:48:41 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/file/upload/small],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.uploadAndCrtThumbImage(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/file/upload/small],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.uploadAndCrtThumbImage(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 13:48:41 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 13:48:41 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 13:48:41 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 13:48:41 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 13:48:41 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 13:48:41 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 13:48:41 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 13:48:41 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 13:48:41 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 13:48:41 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 13:48:41 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 13:48:41 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 13:48:41 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 13:48:41 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 13:48:41 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 13:48:41 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 13:48:41 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 13:48:41 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 13:48:41 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 13:48:41 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 13:48:41 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 13:48:41 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 13:48:41 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:48:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 13:48:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 13:48:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 13:48:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 13:48:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 13:48:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 13:48:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 13:48:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 13:48:41 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 13:48:41 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 13:48:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 13:48:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 13:48:42 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 13:48:42 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 13:48:42 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 13:48:42 -Loaded expression factory via original TCCL
2018-04-27 13:48:42 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 13:48:42 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 13:48:42 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 13:48:42 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 13:48:42 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 13:48:42 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 13:48:42 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 13:48:42 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 13:48:42 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 13:48:42 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 13:48:42 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 13:48:42 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 13:48:42 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 13:48:42 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 13:48:42 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 13:48:42 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 13:48:42 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 13:48:29 GMT+08:00 2018]; root of context hierarchy
2018-04-27 13:48:42 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 13:48:29 GMT+08:00 2018]; root of context hierarchy
2018-04-27 13:48:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:48:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:48:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:48:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:48:42 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 13:48:42 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 13:48:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:48:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:48:43 -Checking status of 192.168.71.151:27017
2018-04-27 13:48:43 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=20.5 ms, state=CONNECTED}]
2018-04-27 13:48:43 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 13:48:43 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 13:48:44 -Registering beans for JMX exposure on startup
2018-04-27 13:48:44 -Registering beans for JMX exposure on startup
2018-04-27 13:48:44 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 13:48:44 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 13:48:44 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 13:48:44 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 13:48:44 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 13:48:44 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 13:48:44 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 13:48:44 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 13:48:44 -Starting beans in phase 2147483647
2018-04-27 13:48:44 -Starting beans in phase 2147483647
2018-04-27 13:48:44 -Context refreshed
2018-04-27 13:48:44 -Context refreshed
2018-04-27 13:48:44 -Found 1 custom documentation plugin(s)
2018-04-27 13:48:44 -Found 1 custom documentation plugin(s)
2018-04-27 13:48:44 -Scanning for api listing references
2018-04-27 13:48:44 -Scanning for api listing references
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Generating unique operation named: updateUsingPOST_1
2018-04-27 13:48:44 -Generating unique operation named: updateUsingPOST_1
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Generating unique operation named: createUsingGET_1
2018-04-27 13:48:44 -Generating unique operation named: createUsingGET_1
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Generating unique operation named: createUsingHEAD_1
2018-04-27 13:48:44 -Generating unique operation named: createUsingHEAD_1
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Generating unique operation named: createUsingPOST_1
2018-04-27 13:48:44 -Generating unique operation named: createUsingPOST_1
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Generating unique operation named: createUsingPUT_1
2018-04-27 13:48:44 -Generating unique operation named: createUsingPUT_1
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:44 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: createUsingPATCH_1
2018-04-27 13:48:45 -Generating unique operation named: createUsingPATCH_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: createUsingDELETE_1
2018-04-27 13:48:45 -Generating unique operation named: createUsingDELETE_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 13:48:45 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: createUsingTRACE_1
2018-04-27 13:48:45 -Generating unique operation named: createUsingTRACE_1
2018-04-27 13:48:45 -Generating unique operation named: deleteUsingGET_1
2018-04-27 13:48:45 -Generating unique operation named: deleteUsingGET_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingGET_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingGET_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingHEAD_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingHEAD_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingPOST_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingPOST_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingPUT_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingPUT_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingPATCH_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingPATCH_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingDELETE_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingDELETE_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingTRACE_1
2018-04-27 13:48:45 -Generating unique operation named: listUsingTRACE_1
2018-04-27 13:48:45 -Generating unique operation named: saveUsingPOST_1
2018-04-27 13:48:45 -Generating unique operation named: saveUsingPOST_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: showUsingGET_1
2018-04-27 13:48:45 -Generating unique operation named: showUsingGET_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: showUsingHEAD_1
2018-04-27 13:48:45 -Generating unique operation named: showUsingHEAD_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: showUsingPOST_1
2018-04-27 13:48:45 -Generating unique operation named: showUsingPOST_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: showUsingPUT_1
2018-04-27 13:48:45 -Generating unique operation named: showUsingPUT_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: showUsingPATCH_1
2018-04-27 13:48:45 -Generating unique operation named: showUsingPATCH_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: showUsingDELETE_1
2018-04-27 13:48:45 -Generating unique operation named: showUsingDELETE_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 13:48:45 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: showUsingTRACE_1
2018-04-27 13:48:45 -Generating unique operation named: showUsingTRACE_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: updateUsingGET_1
2018-04-27 13:48:45 -Generating unique operation named: updateUsingGET_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 13:48:45 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: updateUsingPOST_2
2018-04-27 13:48:45 -Generating unique operation named: updateUsingPOST_2
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: updateUsingPUT_1
2018-04-27 13:48:45 -Generating unique operation named: updateUsingPUT_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 13:48:45 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 13:48:45 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 13:48:45 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:48:45 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 13:48:45 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 13:48:45 -Generating unique operation named: updateUsingPOST_3
2018-04-27 13:48:45 -Generating unique operation named: updateUsingPOST_3
2018-04-27 13:48:45 -Started FastdfsTests in 16.562 seconds (JVM running for 18.483)
2018-04-27 13:48:45 -获取到Tracker连接地址/192.168.71.161:22122
2018-04-27 13:48:45 -connect to /192.168.71.161:22122 soTimeout=1501 connectTimeout=601
2018-04-27 13:48:46 -对地址/192.168.71.161:22122发出交易请求TrackerGetStoreStorageCommand
2018-04-27 13:48:46 -发出交易请求..报文头为ProtoHead [contentLength=0, cmd=101, status=0]
2018-04-27 13:48:46 -交易参数为[]
2018-04-27 13:48:46 -服务端返回报文头ProtoHead [contentLength=40, cmd=100, status=0]
2018-04-27 13:48:46 -dump class=com.github.tobato.fastdfs.domain.StorageNode
2018-04-27 13:48:46 -----------------------------------------
2018-04-27 13:48:46 -FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]
2018-04-27 13:48:46 -FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]
2018-04-27 13:48:46 -FieldMateData [field=port, index=2, max=0, size=8, offsize=31]
2018-04-27 13:48:46 -FieldMateData [field=storeIndex, index=3, max=0, size=1, offsize=39]
2018-04-27 13:48:46 -设置值是 FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]group1
2018-04-27 13:48:46 -Setting default value: false
2018-04-27 13:48:46 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 13:48:46 -    No conversion required, value is already a Boolean
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 13:48:46 -    Converted to Byte value '0'
2018-04-27 13:48:46 -Setting default value:  
2018-04-27 13:48:46 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 13:48:46 -    No conversion required, value is already a Character
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 13:48:46 -    Converted to Double value '0.0'
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 13:48:46 -    Converted to Float value '0.0'
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 13:48:46 -    No conversion required, value is already a Integer
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 13:48:46 -    Converted to Long value '0'
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 13:48:46 -    Converted to Short value '0'
2018-04-27 13:48:46 -Setting default value: 0.0
2018-04-27 13:48:46 -Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2018-04-27 13:48:46 -    No conversion required, value is already a BigDecimal
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'BigInteger' value '0' to type 'BigInteger'
2018-04-27 13:48:46 -    No conversion required, value is already a BigInteger
2018-04-27 13:48:46 -Setting default value: false
2018-04-27 13:48:46 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 13:48:46 -    No conversion required, value is already a Boolean
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 13:48:46 -    Converted to Byte value '0'
2018-04-27 13:48:46 -Setting default value:  
2018-04-27 13:48:46 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 13:48:46 -    No conversion required, value is already a Character
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 13:48:46 -    Converted to Double value '0.0'
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 13:48:46 -    Converted to Float value '0.0'
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 13:48:46 -    No conversion required, value is already a Integer
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 13:48:46 -    Converted to Long value '0'
2018-04-27 13:48:46 -Setting default value: 0
2018-04-27 13:48:46 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 13:48:46 -    Converted to Short value '0'
2018-04-27 13:48:46 -Setting default value: 
2018-04-27 13:48:46 -Converting 'String' value '' to type 'String'
2018-04-27 13:48:46 -Setting default value: [Z@530e08a7
2018-04-27 13:48:46 -Converting 'boolean[]' value '[Z@530e08a7' to type 'boolean[]'
2018-04-27 13:48:46 -    No conversion required, value is already a boolean[]
2018-04-27 13:48:46 -Setting default value: [B@6920fa35
2018-04-27 13:48:46 -Converting 'byte[]' value '[B@6920fa35' to type 'byte[]'
2018-04-27 13:48:46 -    No conversion required, value is already a byte[]
2018-04-27 13:48:46 -Setting default value: [C@19542115
2018-04-27 13:48:46 -Converting 'char[]' value '[C@19542115' to type 'char[]'
2018-04-27 13:48:46 -    No conversion required, value is already a char[]
2018-04-27 13:48:46 -Setting default value: [D@3da30ce5
2018-04-27 13:48:46 -Converting 'double[]' value '[D@3da30ce5' to type 'double[]'
2018-04-27 13:48:46 -    No conversion required, value is already a double[]
2018-04-27 13:48:46 -Setting default value: [F@1e4b70c6
2018-04-27 13:48:46 -Converting 'float[]' value '[F@1e4b70c6' to type 'float[]'
2018-04-27 13:48:46 -    No conversion required, value is already a float[]
2018-04-27 13:48:46 -Setting default value: [I@7054c068
2018-04-27 13:48:46 -Converting 'int[]' value '[I@7054c068' to type 'int[]'
2018-04-27 13:48:46 -    No conversion required, value is already a int[]
2018-04-27 13:48:46 -Setting default value: [J@48301bfe
2018-04-27 13:48:46 -Converting 'long[]' value '[J@48301bfe' to type 'long[]'
2018-04-27 13:48:46 -    No conversion required, value is already a long[]
2018-04-27 13:48:46 -Setting default value: [S@6dd1f239
2018-04-27 13:48:46 -Converting 'short[]' value '[S@6dd1f239' to type 'short[]'
2018-04-27 13:48:46 -    No conversion required, value is already a short[]
2018-04-27 13:48:46 -Setting default value: [Ljava.math.BigDecimal;@28d97205
2018-04-27 13:48:46 -Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@28d97205' to type 'BigDecimal[]'
2018-04-27 13:48:46 -    No conversion required, value is already a BigDecimal[]
2018-04-27 13:48:46 -Setting default value: [Ljava.math.BigInteger;@367fbb28
2018-04-27 13:48:46 -Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@367fbb28' to type 'BigInteger[]'
2018-04-27 13:48:46 -    No conversion required, value is already a BigInteger[]
2018-04-27 13:48:46 -Setting default value: [Ljava.lang.Boolean;@37f7ce20
2018-04-27 13:48:46 -Converting 'Boolean[]' value '[Ljava.lang.Boolean;@37f7ce20' to type 'Boolean[]'
2018-04-27 13:48:46 -    No conversion required, value is already a Boolean[]
2018-04-27 13:48:46 -Setting default value: [Ljava.lang.Byte;@c931728
2018-04-27 13:48:46 -Converting 'Byte[]' value '[Ljava.lang.Byte;@c931728' to type 'Byte[]'
2018-04-27 13:48:46 -    No conversion required, value is already a Byte[]
2018-04-27 13:48:46 -Setting default value: [Ljava.lang.Character;@477e5b69
2018-04-27 13:48:46 -Converting 'Character[]' value '[Ljava.lang.Character;@477e5b69' to type 'Character[]'
2018-04-27 13:48:46 -    No conversion required, value is already a Character[]
2018-04-27 13:48:46 -Setting default value: [Ljava.lang.Double;@7da6d695
2018-04-27 13:48:46 -Converting 'Double[]' value '[Ljava.lang.Double;@7da6d695' to type 'Double[]'
2018-04-27 13:48:46 -    No conversion required, value is already a Double[]
2018-04-27 13:48:46 -Setting default value: [Ljava.lang.Float;@74a991cf
2018-04-27 13:48:46 -Converting 'Float[]' value '[Ljava.lang.Float;@74a991cf' to type 'Float[]'
2018-04-27 13:48:46 -    No conversion required, value is already a Float[]
2018-04-27 13:48:46 -Setting default value: [Ljava.lang.Integer;@6097f225
2018-04-27 13:48:46 -Converting 'Integer[]' value '[Ljava.lang.Integer;@6097f225' to type 'Integer[]'
2018-04-27 13:48:46 -    No conversion required, value is already a Integer[]
2018-04-27 13:48:46 -Setting default value: [Ljava.lang.Long;@5507584d
2018-04-27 13:48:46 -Converting 'Long[]' value '[Ljava.lang.Long;@5507584d' to type 'Long[]'
2018-04-27 13:48:46 -    No conversion required, value is already a Long[]
2018-04-27 13:48:46 -Setting default value: [Ljava.lang.Short;@1e5e2e06
2018-04-27 13:48:46 -Converting 'Short[]' value '[Ljava.lang.Short;@1e5e2e06' to type 'Short[]'
2018-04-27 13:48:46 -    No conversion required, value is already a Short[]
2018-04-27 13:48:46 -Setting default value: [Ljava.lang.String;@26c1f3eb
2018-04-27 13:48:46 -Converting 'String[]' value '[Ljava.lang.String;@26c1f3eb' to type 'String[]'
2018-04-27 13:48:46 -    No conversion required, value is already a String[]
2018-04-27 13:48:46 -Setting default value: [Ljava.lang.Class;@79982bcc
2018-04-27 13:48:46 -Converting 'Class[]' value '[Ljava.lang.Class;@79982bcc' to type 'Class[]'
2018-04-27 13:48:46 -    No conversion required, value is already a Class[]
2018-04-27 13:48:46 -Setting default value: [Ljava.util.Date;@16b2d182
2018-04-27 13:48:46 -Converting 'Date[]' value '[Ljava.util.Date;@16b2d182' to type 'Date[]'
2018-04-27 13:48:46 -    No conversion required, value is already a Date[]
2018-04-27 13:48:46 -Setting default value: [Ljava.util.Calendar;@50841932
2018-04-27 13:48:46 -Converting 'Calendar[]' value '[Ljava.util.Calendar;@50841932' to type 'Calendar[]'
2018-04-27 13:48:46 -    No conversion required, value is already a Calendar[]
2018-04-27 13:48:46 -Setting default value: [Ljava.io.File;@68c47cf9
2018-04-27 13:48:46 -Converting 'java.io.File[]' value '[Ljava.io.File;@68c47cf9' to type 'java.io.File[]'
2018-04-27 13:48:46 -    No conversion required, value is already a java.io.File[]
2018-04-27 13:48:46 -Setting default value: [Ljava.sql.Date;@7e764e5c
2018-04-27 13:48:46 -Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@7e764e5c' to type 'java.sql.Date[]'
2018-04-27 13:48:46 -    No conversion required, value is already a java.sql.Date[]
2018-04-27 13:48:46 -Setting default value: [Ljava.sql.Time;@92de794
2018-04-27 13:48:46 -Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@92de794' to type 'java.sql.Time[]'
2018-04-27 13:48:46 -    No conversion required, value is already a java.sql.Time[]
2018-04-27 13:48:46 -Setting default value: [Ljava.sql.Timestamp;@17a5ae7b
2018-04-27 13:48:46 -Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@17a5ae7b' to type 'java.sql.Timestamp[]'
2018-04-27 13:48:46 -    No conversion required, value is already a java.sql.Timestamp[]
2018-04-27 13:48:46 -Setting default value: [Ljava.net.URL;@183a84f4
2018-04-27 13:48:46 -Converting 'java.net.URL[]' value '[Ljava.net.URL;@183a84f4' to type 'java.net.URL[]'
2018-04-27 13:48:46 -    No conversion required, value is already a java.net.URL[]
2018-04-27 13:48:46 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 13:48:46 -Converting 'String' value 'group1' to type 'String'
2018-04-27 13:48:46 -设置值是 FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]192.168.71.158
2018-04-27 13:48:46 -Convert string '192.168.71.158' to class 'java.lang.String'
2018-04-27 13:48:46 -Converting 'String' value '192.168.71.158' to type 'String'
2018-04-27 13:48:46 -设置值是 FieldMateData [field=port, index=2, max=0, size=8, offsize=31]23000
2018-04-27 13:48:46 -Converting 'Integer' value '23000' to type 'Integer'
2018-04-27 13:48:46 -    No conversion required, value is already a Integer
2018-04-27 13:48:46 -设置值是 FieldMateData [field=storeIndex, index=3, max=0, size=1, offsize=39]0
2018-04-27 13:48:46 -Converting 'Byte' value '0' to type 'Byte'
2018-04-27 13:48:46 -    No conversion required, value is already a Byte
2018-04-27 13:48:46 -connect to /192.168.71.158:23000 soTimeout=1501 connectTimeout=601
2018-04-27 13:48:46 -对地址/192.168.71.158:23000发出交易请求StorageUploadFileCommand
2018-04-27 13:48:46 -发出交易请求..报文头为ProtoHead [contentLength=37, cmd=11, status=0]
2018-04-27 13:48:46 -交易参数为[0, 0, 0, 0, 0, 0, 0, 0, 22, 116, 120, 116, 0, 0, 0]
2018-04-27 13:48:46 -开始上传文件流大小为22
2018-04-27 13:48:46 -剩余数据量0
2018-04-27 13:48:46 -服务端返回报文头ProtoHead [contentLength=60, cmd=100, status=0]
2018-04-27 13:48:46 -dump class=com.github.tobato.fastdfs.domain.StorePath
2018-04-27 13:48:46 -----------------------------------------
2018-04-27 13:48:46 -FieldMateData [field=group, index=0, max=16, size=16, offsize=0]
2018-04-27 13:48:46 -FieldMateData [field=path, index=1, max=0, size=0, offsize=16]
2018-04-27 13:48:46 -设置值是 FieldMateData [field=group, index=0, max=16, size=16, offsize=0]group1
2018-04-27 13:48:46 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 13:48:46 -Converting 'String' value 'group1' to type 'String'
2018-04-27 13:48:46 -设置值是 FieldMateData [field=path, index=1, max=0, size=0, offsize=16]M00/00/00/wKhHnlriucGAULhNAAAAFjU7Zbk554.txt
2018-04-27 13:48:46 -Convert string 'M00/00/00/wKhHnlriucGAULhNAAAAFjU7Zbk554.txt' to class 'java.lang.String'
2018-04-27 13:48:46 -Converting 'String' value 'M00/00/00/wKhHnlriucGAULhNAAAAFjU7Zbk554.txt' to type 'String'
2018-04-27 13:48:46 -result = {}http://192.168.71.161:88/group1/M00/00/00/wKhHnlriucGAULhNAAAAFjU7Zbk554.txt
2018-04-27 13:48:46 -Closing org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 13:48:29 GMT+08:00 2018]; root of context hierarchy
2018-04-27 13:48:46 -Closing org.springframework.web.context.support.GenericWebApplicationContext@59e505b2: startup date [Fri Apr 27 13:48:29 GMT+08:00 2018]; root of context hierarchy
2018-04-27 13:48:46 -Stopping beans in phase 2147483647
2018-04-27 13:48:46 -Stopping beans in phase 2147483647
2018-04-27 13:48:46 -Unregistering JMX-exposed beans on shutdown
2018-04-27 13:48:46 -Unregistering JMX-exposed beans on shutdown
2018-04-27 13:48:46 -Unregistering JMX-exposed beans
2018-04-27 13:48:46 -Unregistering JMX-exposed beans
2018-04-27 13:48:46 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 13:48:46 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 13:48:46 -disconnect from Socket[addr=/192.168.71.161,port=22122,localport=57332]
2018-04-27 13:48:46 -disconnect from Socket[addr=/192.168.71.158,port=23000,localport=57333]
2018-04-27 13:48:46 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 13:48:46 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 13:48:46 -HHH000031: Closing
2018-04-27 13:48:46 -External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
2018-04-27 13:48:46 -Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2018-04-27 13:48:46 -Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2018-04-27 13:48:46 -{dataSource-1} closed
2018-04-27 13:48:53 -Checking status of 192.168.71.151:27017
2018-04-27 13:48:53 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=17.1 ms, state=CONNECTED}]
2018-04-27 13:49:03 -Checking status of 192.168.71.151:27017
2018-04-27 13:49:03 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=13.8 ms, state=CONNECTED}]
2018-04-27 13:49:13 -Checking status of 192.168.71.151:27017
2018-04-27 13:49:13 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=11.2 ms, state=CONNECTED}]
2018-04-27 13:49:28 -Starting DemoApplication on DESKTOP-4VE2VST with PID 11928 (Y:\MyGit\demo\target\classes started by Qiang in Y:\MyGit\demo)
2018-04-27 13:49:28 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 13:49:28 -The following profiles are active: dev
2018-04-27 13:49:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6dc17b83: startup date [Fri Apr 27 13:49:28 GMT+08:00 2018]; root of context hierarchy
2018-04-27 13:49:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6dc17b83: startup date [Fri Apr 27 13:49:28 GMT+08:00 2018]; root of context hierarchy
2018-04-27 13:49:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:49:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:49:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:49:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:49:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:49:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:49:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 13:49:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 13:49:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 13:49:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 13:49:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 13:49:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 13:49:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 13:49:30 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 13:49:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:49:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 13:49:30 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 13:49:30 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 13:49:30 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 13:49:30 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 13:49:30 -Loaded expression factory via original TCCL
2018-04-27 13:49:30 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 13:49:30 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 13:49:30 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 13:49:30 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 13:49:30 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 13:49:30 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 13:49:30 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 13:49:30 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 13:49:30 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 13:49:30 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 13:49:30 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 13:49:30 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 13:49:30 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 13:49:30 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 13:49:30 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 13:49:30 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 13:49:30 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$7ea0d45b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:30 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$7ea0d45b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9b896cdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9b896cdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$6f63bfeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$6f63bfeb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 13:49:31 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 13:49:31 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 13:49:31 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 13:49:31 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 13:49:31 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 13:49:31 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 13:49:31 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 13:49:31 -Starting Post-processing phase
2018-04-27 13:49:31 -Building annotation class map
2018-04-27 13:49:31 -Building interface class map for 8 classes
2018-04-27 13:49:31 - - Actor implements 0 interfaces
2018-04-27 13:49:31 - - Role implements 1 interfaces
2018-04-27 13:49:31 -   - java.io.Serializable
2018-04-27 13:49:31 - - MongoUser implements 0 interfaces
2018-04-27 13:49:31 - - Role implements 0 interfaces
2018-04-27 13:49:31 - - Movie implements 0 interfaces
2018-04-27 13:49:31 - - Department implements 0 interfaces
2018-04-27 13:49:31 - - BookBean implements 0 interfaces
2018-04-27 13:49:31 - - User implements 1 interfaces
2018-04-27 13:49:31 -   - java.io.Serializable
2018-04-27 13:49:31 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 13:49:31 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 13:49:31 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 13:49:31 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 13:49:31 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 13:49:31 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 13:49:31 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 13:49:31 -Post-processing: com.example.ren.model.BookBean
2018-04-27 13:49:31 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 13:49:31 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 13:49:31 -Checking for @Transient classes....
2018-04-27 13:49:31 -Registering converters and deregistering transient fields and methods....
2018-04-27 13:49:31 -Post-processing complete
2018-04-27 13:49:31 -Building Index Metadata.
2018-04-27 13:49:31 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 13:49:31 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 13:49:31 -Tomcat initialized with port(s): 8080 (http)
2018-04-27 13:49:31 -Initializing ProtocolHandler ["http-nio-8080"]
2018-04-27 13:49:31 -Starting service [Tomcat]
2018-04-27 13:49:31 -Starting Servlet Engine: Apache Tomcat/8.5.28
2018-04-27 13:49:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;.]
2018-04-27 13:49:32 -Initializing Spring embedded WebApplicationContext
2018-04-27 13:49:32 -Root WebApplicationContext: initialization completed in 3239 ms
2018-04-27 13:49:32 -Root WebApplicationContext: initialization completed in 3239 ms
2018-04-27 13:49:32 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 13:49:32 -Servlet statViewServlet mapped to [/druid/*]
2018-04-27 13:49:32 -Servlet dispatcherServlet mapped to [/]
2018-04-27 13:49:32 -Servlet dispatcherServlet mapped to [/]
2018-04-27 13:49:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 13:49:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2018-04-27 13:49:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 13:49:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-04-27 13:49:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 13:49:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-04-27 13:49:32 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 13:49:32 -Mapping filter: 'requestContextFilter' to: [/*]
2018-04-27 13:49:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 13:49:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2018-04-27 13:49:32 -{dataSource-1} inited
2018-04-27 13:49:32 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 13:49:32 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 13:49:32 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 13:49:32",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:1409712092, ConnectTime:"2018-04-27 13:49:32", UseCount:1, LastActiveTime:"2018-04-27 13:49:32"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 13:49:32 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 13:49:32 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 13:49:32 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 13:49:32 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 13:49:32 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 13:49:32 -HHH000206: hibernate.properties not found
2018-04-27 13:49:33 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 13:49:33 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 13:49:33 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 13:49:33 -Adding type registration boolean -> org.hibernate.type.BooleanType@60c1663c
2018-04-27 13:49:33 -Adding type registration boolean -> org.hibernate.type.BooleanType@60c1663c
2018-04-27 13:49:33 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@60c1663c
2018-04-27 13:49:33 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@345d053b
2018-04-27 13:49:33 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@48a663e9
2018-04-27 13:49:33 -Adding type registration yes_no -> org.hibernate.type.YesNoType@2d85fb64
2018-04-27 13:49:33 -Adding type registration byte -> org.hibernate.type.ByteType@38cedb7d
2018-04-27 13:49:33 -Adding type registration byte -> org.hibernate.type.ByteType@38cedb7d
2018-04-27 13:49:33 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38cedb7d
2018-04-27 13:49:33 -Adding type registration character -> org.hibernate.type.CharacterType@2db2a05f
2018-04-27 13:49:33 -Adding type registration char -> org.hibernate.type.CharacterType@2db2a05f
2018-04-27 13:49:33 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2db2a05f
2018-04-27 13:49:33 -Adding type registration short -> org.hibernate.type.ShortType@7bd96822
2018-04-27 13:49:33 -Adding type registration short -> org.hibernate.type.ShortType@7bd96822
2018-04-27 13:49:33 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7bd96822
2018-04-27 13:49:33 -Adding type registration integer -> org.hibernate.type.IntegerType@1d901f20
2018-04-27 13:49:33 -Adding type registration int -> org.hibernate.type.IntegerType@1d901f20
2018-04-27 13:49:33 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d901f20
2018-04-27 13:49:33 -Adding type registration long -> org.hibernate.type.LongType@539a138b
2018-04-27 13:49:33 -Adding type registration long -> org.hibernate.type.LongType@539a138b
2018-04-27 13:49:33 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@539a138b
2018-04-27 13:49:33 -Adding type registration float -> org.hibernate.type.FloatType@5b5ac798
2018-04-27 13:49:33 -Adding type registration float -> org.hibernate.type.FloatType@5b5ac798
2018-04-27 13:49:33 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b5ac798
2018-04-27 13:49:33 -Adding type registration double -> org.hibernate.type.DoubleType@267cde2e
2018-04-27 13:49:33 -Adding type registration double -> org.hibernate.type.DoubleType@267cde2e
2018-04-27 13:49:33 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@267cde2e
2018-04-27 13:49:33 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72b43104
2018-04-27 13:49:33 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72b43104
2018-04-27 13:49:33 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@67e25252
2018-04-27 13:49:33 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@67e25252
2018-04-27 13:49:33 -Adding type registration string -> org.hibernate.type.StringType@7affc159
2018-04-27 13:49:33 -Adding type registration java.lang.String -> org.hibernate.type.StringType@7affc159
2018-04-27 13:49:33 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ace284d
2018-04-27 13:49:33 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64deb58f
2018-04-27 13:49:33 -Adding type registration url -> org.hibernate.type.UrlType@72bdd7c7
2018-04-27 13:49:33 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@72bdd7c7
2018-04-27 13:49:33 -Adding type registration Duration -> org.hibernate.type.DurationType@2f14b0f6
2018-04-27 13:49:33 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2f14b0f6
2018-04-27 13:49:33 -Adding type registration Instant -> org.hibernate.type.InstantType@ffd4cba
2018-04-27 13:49:33 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@ffd4cba
2018-04-27 13:49:33 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@708eb310
2018-04-27 13:49:33 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@708eb310
2018-04-27 13:49:33 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@36c2d629
2018-04-27 13:49:33 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@36c2d629
2018-04-27 13:49:33 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7c37f145
2018-04-27 13:49:33 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7c37f145
2018-04-27 13:49:33 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f4701b1
2018-04-27 13:49:33 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7f4701b1
2018-04-27 13:49:33 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10c47c79
2018-04-27 13:49:33 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10c47c79
2018-04-27 13:49:33 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ffb3aec
2018-04-27 13:49:33 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ffb3aec
2018-04-27 13:49:33 -Adding type registration date -> org.hibernate.type.DateType@6a9344f5
2018-04-27 13:49:33 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@6a9344f5
2018-04-27 13:49:33 -Adding type registration time -> org.hibernate.type.TimeType@3234474
2018-04-27 13:49:33 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3234474
2018-04-27 13:49:33 -Adding type registration timestamp -> org.hibernate.type.TimestampType@36b9cb99
2018-04-27 13:49:33 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36b9cb99
2018-04-27 13:49:33 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36b9cb99
2018-04-27 13:49:33 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@71adfedd
2018-04-27 13:49:33 -Adding type registration calendar -> org.hibernate.type.CalendarType@63300c4b
2018-04-27 13:49:33 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63300c4b
2018-04-27 13:49:33 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63300c4b
2018-04-27 13:49:33 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@45c9b3
2018-04-27 13:49:33 -Adding type registration locale -> org.hibernate.type.LocaleType@5a936e64
2018-04-27 13:49:33 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5a936e64
2018-04-27 13:49:33 -Adding type registration currency -> org.hibernate.type.CurrencyType@d3f4505
2018-04-27 13:49:33 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d3f4505
2018-04-27 13:49:33 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@2fe74516
2018-04-27 13:49:33 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2fe74516
2018-04-27 13:49:33 -Adding type registration class -> org.hibernate.type.ClassType@73aeef7d
2018-04-27 13:49:33 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73aeef7d
2018-04-27 13:49:33 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7327a447
2018-04-27 13:49:33 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7327a447
2018-04-27 13:49:33 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58fbd02e
2018-04-27 13:49:33 -Adding type registration binary -> org.hibernate.type.BinaryType@798256c5
2018-04-27 13:49:33 -Adding type registration byte[] -> org.hibernate.type.BinaryType@798256c5
2018-04-27 13:49:33 -Adding type registration [B -> org.hibernate.type.BinaryType@798256c5
2018-04-27 13:49:33 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@428bdd72
2018-04-27 13:49:33 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@428bdd72
2018-04-27 13:49:33 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@428bdd72
2018-04-27 13:49:33 -Adding type registration row_version -> org.hibernate.type.RowVersionType@6fff46bf
2018-04-27 13:49:33 -Adding type registration image -> org.hibernate.type.ImageType@46911148
2018-04-27 13:49:33 -Adding type registration characters -> org.hibernate.type.CharArrayType@2db33feb
2018-04-27 13:49:33 -Adding type registration char[] -> org.hibernate.type.CharArrayType@2db33feb
2018-04-27 13:49:33 -Adding type registration [C -> org.hibernate.type.CharArrayType@2db33feb
2018-04-27 13:49:33 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d84049a
2018-04-27 13:49:33 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d84049a
2018-04-27 13:49:33 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d84049a
2018-04-27 13:49:33 -Adding type registration text -> org.hibernate.type.TextType@6ca30b8a
2018-04-27 13:49:33 -Adding type registration ntext -> org.hibernate.type.NTextType@64c781a9
2018-04-27 13:49:33 -Adding type registration blob -> org.hibernate.type.BlobType@493da830
2018-04-27 13:49:33 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@493da830
2018-04-27 13:49:33 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@430b2699
2018-04-27 13:49:33 -Adding type registration clob -> org.hibernate.type.ClobType@7efa3f63
2018-04-27 13:49:33 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7efa3f63
2018-04-27 13:49:33 -Adding type registration nclob -> org.hibernate.type.NClobType@28a9494b
2018-04-27 13:49:33 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@28a9494b
2018-04-27 13:49:33 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@322ba549
2018-04-27 13:49:33 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64e1377c
2018-04-27 13:49:33 -Adding type registration serializable -> org.hibernate.type.SerializableType@798dad3d
2018-04-27 13:49:33 -Adding type registration object -> org.hibernate.type.ObjectType@e784320
2018-04-27 13:49:33 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@e784320
2018-04-27 13:49:33 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4bdf
2018-04-27 13:49:33 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4cad79bc
2018-04-27 13:49:33 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c63762b
2018-04-27 13:49:33 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7a9eccc4
2018-04-27 13:49:33 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@78422efb
2018-04-27 13:49:33 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f05c8d6
2018-04-27 13:49:33 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@68e02f33
2018-04-27 13:49:33 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@64942607
2018-04-27 13:49:33 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 13:49:33 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 13:49:33 -JDBC version : 4.0
2018-04-27 13:49:33 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 13:49:33 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 13:49:33 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 13:49:33 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 13:49:33 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 13:49:33 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 13:49:33 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 13:49:33 -Import with entity name Role
2018-04-27 13:49:33 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -MetadataSourceProcessor property id with lazy=false
2018-04-27 13:49:33 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 13:49:33 -building SimpleValue for id
2018-04-27 13:49:33 -Building property id
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -MetadataSourceProcessor property name with lazy=false
2018-04-27 13:49:33 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 13:49:33 -building SimpleValue for name
2018-04-27 13:49:33 -Building property name
2018-04-27 13:49:33 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 13:49:33 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 13:49:33 -Import with entity name Department
2018-04-27 13:49:33 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -MetadataSourceProcessor property id with lazy=false
2018-04-27 13:49:33 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 13:49:33 -building SimpleValue for id
2018-04-27 13:49:33 -Building property id
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -MetadataSourceProcessor property name with lazy=false
2018-04-27 13:49:33 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 13:49:33 -building SimpleValue for name
2018-04-27 13:49:33 -Building property name
2018-04-27 13:49:33 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 13:49:33 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 13:49:33 -Import with entity name User
2018-04-27 13:49:33 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -MetadataSourceProcessor property id with lazy=false
2018-04-27 13:49:33 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 13:49:33 -building SimpleValue for id
2018-04-27 13:49:33 -Building property id
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 13:49:33 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 13:49:33 -building SimpleValue for createDate
2018-04-27 13:49:33 -Building property createDate
2018-04-27 13:49:33 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -Building property department
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -MetadataSourceProcessor property email with lazy=false
2018-04-27 13:49:33 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 13:49:33 -building SimpleValue for email
2018-04-27 13:49:33 -Building property email
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -MetadataSourceProcessor property name with lazy=false
2018-04-27 13:49:33 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 13:49:33 -building SimpleValue for name
2018-04-27 13:49:33 -Building property name
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -MetadataSourceProcessor property password with lazy=false
2018-04-27 13:49:33 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 13:49:33 -building SimpleValue for password
2018-04-27 13:49:33 -Building property password
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 13:49:33 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 13:49:33 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 13:49:33 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 13:49:33 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 13:49:33 -Building property roles
2018-04-27 13:49:33 -Starting fillSimpleValue for id
2018-04-27 13:49:33 -Starting fillSimpleValue for name
2018-04-27 13:49:33 -Starting fillSimpleValue for id
2018-04-27 13:49:33 -Starting fillSimpleValue for name
2018-04-27 13:49:33 -Starting fillSimpleValue for id
2018-04-27 13:49:33 -Starting fillSimpleValue for createDate
2018-04-27 13:49:33 -Starting fillSimpleValue for email
2018-04-27 13:49:33 -Starting fillSimpleValue for name
2018-04-27 13:49:33 -Starting fillSimpleValue for password
2018-04-27 13:49:33 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 13:49:33 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 13:49:33 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 13:49:33 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 13:49:33 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 13:49:33 -Mapped collection key: user_id, element: role_id
2018-04-27 13:49:33 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 13:49:33 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 13:49:33 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 13:49:33 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 13:49:33 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 13:49:33 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 13:49:33 -Building session factory
2018-04-27 13:49:33 -SessionFactory name : null
2018-04-27 13:49:33 -Automatic flush during beforeCompletion(): enabled
2018-04-27 13:49:33 -Automatic session close at end of transaction: disabled
2018-04-27 13:49:33 -Statistics: disabled
2018-04-27 13:49:33 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 13:49:33 -Default entity-mode: pojo
2018-04-27 13:49:33 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 13:49:33 -Allow initialization of lazy state outside session : disabled
2018-04-27 13:49:33 -Using BatchFetchStyle : LEGACY
2018-04-27 13:49:33 -Default batch fetch size: -1
2018-04-27 13:49:33 -Maximum outer join fetch depth: 2
2018-04-27 13:49:33 -Default null ordering: NONE
2018-04-27 13:49:33 -Order SQL updates by primary key: disabled
2018-04-27 13:49:33 -Order SQL inserts for batching: disabled
2018-04-27 13:49:33 -multi-tenancy strategy : NONE
2018-04-27 13:49:33 -JTA Track by Thread: enabled
2018-04-27 13:49:33 -Query language substitutions: {}
2018-04-27 13:49:33 -JPA query language strict compliance: disabled
2018-04-27 13:49:33 -Named query checking : enabled
2018-04-27 13:49:33 -Second-level cache: enabled
2018-04-27 13:49:33 -Second-level query cache: disabled
2018-04-27 13:49:33 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4293e066
2018-04-27 13:49:33 -Second-level cache region prefix: null
2018-04-27 13:49:33 -Optimize second-level cache for minimal puts: disabled
2018-04-27 13:49:33 -Structured second-level cache entries: disabled
2018-04-27 13:49:33 -Second-level cache direct-reference entries: disabled
2018-04-27 13:49:33 -Automatic eviction of collection cache: disabled
2018-04-27 13:49:33 -JDBC batch size: 15
2018-04-27 13:49:33 -JDBC batch updates for versioned data: enabled
2018-04-27 13:49:33 -Scrollable result sets: enabled
2018-04-27 13:49:33 -Wrap result sets: disabled
2018-04-27 13:49:33 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 13:49:33 -JDBC result set fetch size: null
2018-04-27 13:49:33 -Connection release mode: ON_CLOSE
2018-04-27 13:49:33 -Generate SQL with comments: disabled
2018-04-27 13:49:33 -Session factory constructed with filter configurations : {}
2018-04-27 13:49:33 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.example.ren.DemoApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5f61371d, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, spring.output.ansi.enabled=always, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, catalina.home=C:\Users\Qiang\AppData\Local\Temp\tomcat.1195172820448951922.8080, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=11928, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, catalina.base=C:\Users\Qiang\AppData\Local\Temp\tomcat.1195172820448951922.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@420a8042, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 13:49:32",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:1409712092, ConnectTime:"2018-04-27 13:49:32", UseCount:2, LastActiveTime:"2018-04-27 13:49:33"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 13:49:33 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 13:49:33 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 13:49:33 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 13:49:33 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 13:49:33 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 13:49:33 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 13:49:33 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 13:49:33 -Loaded expression factory via original TCCL
2018-04-27 13:49:33 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 13:49:33 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 13:49:33 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 13:49:33 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 13:49:33 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 13:49:33 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 13:49:33 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 13:49:33 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 13:49:33 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 13:49:33 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 13:49:33 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 13:49:33 -Skipping JACC integration as it was not enabled
2018-04-27 13:49:33 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 13:49:33 -Instantiated session factory
2018-04-27 13:49:33 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 13:49:33 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 13:49:33 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 13:49:33 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 13:49:33 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 13:49:33 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 13:49:33 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 13:49:33 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 13:49:33 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 13:49:33 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 13:49:33 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 13:49:33 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 13:49:33 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 13:49:33 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 13:49:33 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 13:49:33 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 13:49:33 - One-shot delete: delete from user_role where user_id=?
2018-04-27 13:49:33 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 13:49:33 - Version select: select id from role where id =?
2018-04-27 13:49:33 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 13:49:33 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 13:49:33 - Update 0: update role set name=? where id=?
2018-04-27 13:49:33 - Delete 0: delete from role where id=?
2018-04-27 13:49:33 - Identity insert: insert into role (name) values (?)
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21390938]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cc9ef8d]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c412556]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@450f0235]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d2c9361]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fbe70d8]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d2c345d]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5db948c9]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@357c9bd9]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0290d8]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632383b9]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:49:33 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:49:33 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 13:49:33 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 13:49:33 - Version select: select id from department where id =?
2018-04-27 13:49:33 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 13:49:33 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 13:49:33 - Update 0: update department set name=? where id=?
2018-04-27 13:49:33 - Delete 0: delete from department where id=?
2018-04-27 13:49:33 - Identity insert: insert into department (name) values (?)
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ed18798]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b29ab61]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1e837d]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d71b500]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@626b639e]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@527a8665]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@437c4b25]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@580902cd]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1653b84e]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f85ee02]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c075e9d]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:49:33 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:49:33 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 13:49:33 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 13:49:33 - Version select: select id from user where id =?
2018-04-27 13:49:33 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 13:49:33 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 13:49:33 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 13:49:33 - Delete 0: delete from user where id=?
2018-04-27 13:49:33 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b14c61]
2018-04-27 13:49:33 -Visiting attribute path : createDate
2018-04-27 13:49:33 -Visiting attribute path : department
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44bc2449]
2018-04-27 13:49:33 -Visiting attribute path : department.name
2018-04-27 13:49:33 -Visiting attribute path : email
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Visiting attribute path : password
2018-04-27 13:49:33 -Visiting attribute path : roles
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@374c40ba]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3709748f]
2018-04-27 13:49:33 -Visiting attribute path : roles.name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efac5b9]
2018-04-27 13:49:33 -Visiting attribute path : createDate
2018-04-27 13:49:33 -Visiting attribute path : department
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69796bd0]
2018-04-27 13:49:33 -Visiting attribute path : department.name
2018-04-27 13:49:33 -Visiting attribute path : email
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Visiting attribute path : password
2018-04-27 13:49:33 -Visiting attribute path : roles
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8c0a23f]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44d7e24]
2018-04-27 13:49:33 -Visiting attribute path : roles.name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10f405ff]
2018-04-27 13:49:33 -Visiting attribute path : createDate
2018-04-27 13:49:33 -Visiting attribute path : department
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c98b4eb]
2018-04-27 13:49:33 -Visiting attribute path : email
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Visiting attribute path : password
2018-04-27 13:49:33 -Visiting attribute path : roles
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45801322]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@756b2d90]
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3520958b]
2018-04-27 13:49:33 -Visiting attribute path : createDate
2018-04-27 13:49:33 -Visiting attribute path : department
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291a4791]
2018-04-27 13:49:33 -Visiting attribute path : email
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Visiting attribute path : password
2018-04-27 13:49:33 -Visiting attribute path : roles
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b1e88f]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340cb97f]
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a1568d6]
2018-04-27 13:49:33 -Visiting attribute path : createDate
2018-04-27 13:49:33 -Visiting attribute path : department
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b37fbec]
2018-04-27 13:49:33 -Visiting attribute path : email
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Visiting attribute path : password
2018-04-27 13:49:33 -Visiting attribute path : roles
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a216eb4]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb3ecfe]
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec88f9e]
2018-04-27 13:49:33 -Visiting attribute path : createDate
2018-04-27 13:49:33 -Visiting attribute path : department
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b11620a]
2018-04-27 13:49:33 -Visiting attribute path : email
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Visiting attribute path : password
2018-04-27 13:49:33 -Visiting attribute path : roles
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fd1ad8a]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@357f6391]
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@689faf79]
2018-04-27 13:49:33 -Visiting attribute path : createDate
2018-04-27 13:49:33 -Visiting attribute path : department
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a31ca20]
2018-04-27 13:49:33 -Visiting attribute path : email
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Visiting attribute path : password
2018-04-27 13:49:33 -Visiting attribute path : roles
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@349c4d1c]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21edd891]
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@de579ff]
2018-04-27 13:49:33 -Visiting attribute path : createDate
2018-04-27 13:49:33 -Visiting attribute path : department
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fd39436]
2018-04-27 13:49:33 -Visiting attribute path : email
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Visiting attribute path : password
2018-04-27 13:49:33 -Visiting attribute path : roles
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60b5e80d]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46394f65]
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31aab981]
2018-04-27 13:49:33 -Visiting attribute path : createDate
2018-04-27 13:49:33 -Visiting attribute path : department
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d518c66]
2018-04-27 13:49:33 -Visiting attribute path : email
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Visiting attribute path : password
2018-04-27 13:49:33 -Visiting attribute path : roles
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@411fa0ce]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@251d7fdd]
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78e68401]
2018-04-27 13:49:33 -Visiting attribute path : createDate
2018-04-27 13:49:33 -Visiting attribute path : department
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b0dbfb]
2018-04-27 13:49:33 -Visiting attribute path : email
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Visiting attribute path : password
2018-04-27 13:49:33 -Visiting attribute path : roles
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b9dbf07]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@797fcf9]
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16bd7ae1]
2018-04-27 13:49:33 -Visiting attribute path : createDate
2018-04-27 13:49:33 -Visiting attribute path : department
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3312f4f4]
2018-04-27 13:49:33 -Visiting attribute path : email
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Visiting attribute path : password
2018-04-27 13:49:33 -Visiting attribute path : roles
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b5aa65b]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76cdafa3]
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 13:49:33 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 13:49:33 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 13:49:33 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58b311ba]
2018-04-27 13:49:33 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@482c351d]
2018-04-27 13:49:33 -Visiting attribute path : name
2018-04-27 13:49:33 -Building LoadPlan...
2018-04-27 13:49:33 -processing queryspace <gen:0>
2018-04-27 13:49:33 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 13:49:33 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 13:49:33 -No alter strings for table : department
2018-04-27 13:49:33 -No alter strings for table : role
2018-04-27 13:49:33 -No alter strings for table : user
2018-04-27 13:49:33 -No alter strings for table : user_role
2018-04-27 13:49:33 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 13:49:33 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 13:49:34 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 13:49:34 -Checking 0 named HQL queries
2018-04-27 13:49:34 -Checking 0 named SQL queries
2018-04-27 13:49:34 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7b9088f2
2018-04-27 13:49:34 -Registering SessionFactory: e500886b-1e9d-43b5-abff-0ed048efa4ab (<unnamed>)
2018-04-27 13:49:34 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 13:49:34 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 13:49:34 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 13:49:34 -init trackerLocator [192.168.71.161:22122]
2018-04-27 13:49:34 -Statistics initialized [enabled=false]
2018-04-27 13:49:34 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3b28b7b0
2018-04-27 13:49:34 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 13:49:34 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 13:49:34 -throwQueryException() : no errors
2018-04-27 13:49:34 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 13:49:34 -select << begin [level=1, statement=select]
2018-04-27 13:49:34 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 13:49:34 -Resolved : t -> user0_.id
2018-04-27 13:49:34 -Resolved : t -> user0_.id
2018-04-27 13:49:34 -getDataType() : name -> org.hibernate.type.StringType@7affc159
2018-04-27 13:49:34 -Resolved : t.name -> user0_.name
2018-04-27 13:49:34 -select : finishing up [level=1, statement=select]
2018-04-27 13:49:34 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 13:49:34 -Using FROM fragment [user user0_]
2018-04-27 13:49:34 -select >> end [level=1, statement=select]
2018-04-27 13:49:34 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@7affc159}

2018-04-27 13:49:34 -throwQueryException() : no errors
2018-04-27 13:49:34 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 13:49:34 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 13:49:34 -throwQueryException() : no errors
2018-04-27 13:49:34 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 13:49:34 -throwQueryException() : no errors
2018-04-27 13:49:34 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 13:49:34 -select << begin [level=1, statement=select]
2018-04-27 13:49:34 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 13:49:34 -Resolved : t -> user0_.id
2018-04-27 13:49:34 -Resolved : t -> user0_.id
2018-04-27 13:49:34 -getDataType() : name -> org.hibernate.type.StringType@7affc159
2018-04-27 13:49:34 -Resolved : t.name -> user0_.name
2018-04-27 13:49:34 -Resolved : t -> user0_.id
2018-04-27 13:49:34 -getDataType() : email -> org.hibernate.type.StringType@7affc159
2018-04-27 13:49:34 -Resolved : t.email -> user0_.email
2018-04-27 13:49:34 -select : finishing up [level=1, statement=select]
2018-04-27 13:49:34 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 13:49:34 -Using FROM fragment [user user0_]
2018-04-27 13:49:34 -select >> end [level=1, statement=select]
2018-04-27 13:49:34 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@7affc159}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@7affc159}

2018-04-27 13:49:34 -throwQueryException() : no errors
2018-04-27 13:49:34 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 13:49:34 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 13:49:34 -throwQueryException() : no errors
2018-04-27 13:49:34 -Using SLF4J as the default logging framework
2018-04-27 13:49:34 --Dio.netty.eventLoopThreads: 4
2018-04-27 13:49:34 --Dio.netty.leakDetection.level: simple
2018-04-27 13:49:34 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 13:49:34 -Platform: Windows
2018-04-27 13:49:34 --Dio.netty.noUnsafe: false
2018-04-27 13:49:34 -Java version: 8
2018-04-27 13:49:34 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 13:49:34 -sun.misc.Unsafe.copyMemory: available
2018-04-27 13:49:34 -java.nio.Buffer.address: available
2018-04-27 13:49:34 -direct buffer constructor: available
2018-04-27 13:49:34 -java.nio.Bits.unaligned: available, true
2018-04-27 13:49:34 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 13:49:34 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 13:49:34 -sun.misc.Unsafe: available
2018-04-27 13:49:34 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 13:49:34 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 13:49:34 --Dio.netty.noPreferDirect: false
2018-04-27 13:49:34 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 13:49:34 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 13:49:34 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 13:49:34 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1b3a9ef4
2018-04-27 13:49:34 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 13:49:34 -Using Slf4j logging framework
2018-04-27 13:49:34 -Starting UnsafeSupport init in Java 1.8
2018-04-27 13:49:34 -Unsafe is available
2018-04-27 13:49:34 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 13:49:34 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 13:49:34 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 13:49:34 --Dio.netty.allocator.pageSize: 8192
2018-04-27 13:49:34 --Dio.netty.allocator.maxOrder: 11
2018-04-27 13:49:34 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 13:49:34 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 13:49:34 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 13:49:34 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 13:49:34 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 13:49:34 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 13:49:34 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 13:49:34 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 13:49:34 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 13:49:34 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 13:49:34 -Neo4jMappingContext initialisation completed
2018-04-27 13:49:34 -Neo4jMappingContext initialisation completed
2018-04-27 13:49:35 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 13:49:35 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 13:49:35 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 13:49:35 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 13:49:36 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 13:49:36 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 13:49:36 -Opened connection [connectionId{localValue:1, serverValue:27}] to 192.168.71.151:27017
2018-04-27 13:49:36 -Checking status of 192.168.71.151:27017
2018-04-27 13:49:36 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2860002}
2018-04-27 13:49:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 13:49:36 -Opened connection [connectionId{localValue:2, serverValue:28}] to 192.168.71.151:27017
2018-04-27 13:49:36 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:28}] to server 192.168.71.151:27017
2018-04-27 13:49:36 -Command execution completed
2018-04-27 13:49:36 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 13:49:36 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 13:49:36 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 13:49:36 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 13:49:36 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/file/upload/small],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.uploadAndCrtThumbImage(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/file/upload/small],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.uploadAndCrtThumbImage(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 13:49:36 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 13:49:36 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 13:49:36 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 13:49:36 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 13:49:36 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 13:49:36 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 13:49:36 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 13:49:36 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 13:49:36 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 13:49:36 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 13:49:36 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 13:49:36 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 13:49:36 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 13:49:36 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 13:49:36 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 13:49:36 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 13:49:36 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 13:49:36 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 13:49:36 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 13:49:36 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 13:49:36 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 13:49:36 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 13:49:36 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 13:49:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 13:49:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 13:49:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 13:49:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 13:49:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 13:49:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 13:49:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 13:49:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 13:49:36 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 13:49:36 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 13:49:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 13:49:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 13:49:36 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 13:49:36 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 13:49:36 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 13:49:36 -Loaded expression factory via original TCCL
2018-04-27 13:49:36 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 13:49:36 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 13:49:36 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 13:49:36 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 13:49:36 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 13:49:36 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 13:49:36 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 13:49:36 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 13:49:36 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 13:49:36 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 13:49:36 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 13:49:36 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 13:49:36 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 13:49:36 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 13:49:36 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 13:49:36 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 13:49:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6dc17b83: startup date [Fri Apr 27 13:49:28 GMT+08:00 2018]; root of context hierarchy
2018-04-27 13:49:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6dc17b83: startup date [Fri Apr 27 13:49:28 GMT+08:00 2018]; root of context hierarchy
2018-04-27 13:49:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:49:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:49:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:49:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:49:37 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 13:49:37 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 13:49:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:49:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 13:49:37 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 13:49:37 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 13:49:37 -Registering beans for JMX exposure on startup
2018-04-27 13:49:37 -Registering beans for JMX exposure on startup
2018-04-27 13:49:37 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 13:49:37 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 13:49:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 13:49:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 13:49:37 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 13:49:37 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 13:49:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 13:49:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 13:49:37 -Starting beans in phase 2147483647
2018-04-27 13:49:37 -Starting beans in phase 2147483647
2018-04-27 13:49:37 -Context refreshed
2018-04-27 13:49:37 -Context refreshed
2018-04-27 13:49:37 -Found 1 custom documentation plugin(s)
2018-04-27 13:49:37 -Found 1 custom documentation plugin(s)
2018-04-27 13:49:37 -Scanning for api listing references
2018-04-27 13:49:37 -Scanning for api listing references
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: updateUsingPOST_1
2018-04-27 13:49:38 -Generating unique operation named: updateUsingPOST_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: createUsingGET_1
2018-04-27 13:49:38 -Generating unique operation named: createUsingGET_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: createUsingHEAD_1
2018-04-27 13:49:38 -Generating unique operation named: createUsingHEAD_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: createUsingPOST_1
2018-04-27 13:49:38 -Generating unique operation named: createUsingPOST_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: createUsingPUT_1
2018-04-27 13:49:38 -Generating unique operation named: createUsingPUT_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: createUsingPATCH_1
2018-04-27 13:49:38 -Generating unique operation named: createUsingPATCH_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: createUsingDELETE_1
2018-04-27 13:49:38 -Generating unique operation named: createUsingDELETE_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 13:49:38 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: createUsingTRACE_1
2018-04-27 13:49:38 -Generating unique operation named: createUsingTRACE_1
2018-04-27 13:49:38 -Generating unique operation named: deleteUsingGET_1
2018-04-27 13:49:38 -Generating unique operation named: deleteUsingGET_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingGET_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingGET_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingHEAD_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingHEAD_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingPOST_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingPOST_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingPUT_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingPUT_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingPATCH_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingPATCH_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingDELETE_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingDELETE_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingTRACE_1
2018-04-27 13:49:38 -Generating unique operation named: listUsingTRACE_1
2018-04-27 13:49:38 -Generating unique operation named: saveUsingPOST_1
2018-04-27 13:49:38 -Generating unique operation named: saveUsingPOST_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: showUsingGET_1
2018-04-27 13:49:38 -Generating unique operation named: showUsingGET_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: showUsingHEAD_1
2018-04-27 13:49:38 -Generating unique operation named: showUsingHEAD_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: showUsingPOST_1
2018-04-27 13:49:38 -Generating unique operation named: showUsingPOST_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: showUsingPUT_1
2018-04-27 13:49:38 -Generating unique operation named: showUsingPUT_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: showUsingPATCH_1
2018-04-27 13:49:38 -Generating unique operation named: showUsingPATCH_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: showUsingDELETE_1
2018-04-27 13:49:38 -Generating unique operation named: showUsingDELETE_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 13:49:38 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: showUsingTRACE_1
2018-04-27 13:49:38 -Generating unique operation named: showUsingTRACE_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: updateUsingGET_1
2018-04-27 13:49:38 -Generating unique operation named: updateUsingGET_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 13:49:38 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: updateUsingPOST_2
2018-04-27 13:49:38 -Generating unique operation named: updateUsingPOST_2
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: updateUsingPUT_1
2018-04-27 13:49:38 -Generating unique operation named: updateUsingPUT_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 13:49:38 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 13:49:38 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 13:49:38 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 13:49:38 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 13:49:38 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 13:49:38 -Generating unique operation named: updateUsingPOST_3
2018-04-27 13:49:38 -Generating unique operation named: updateUsingPOST_3
2018-04-27 13:49:38 -Starting ProtocolHandler ["http-nio-8080"]
2018-04-27 13:49:38 -Using a shared selector for servlet write/read
2018-04-27 13:49:38 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 13:49:38 -Tomcat started on port(s): 8080 (http) with context path '/demo'
2018-04-27 13:49:38 -Started DemoApplication in 10.366 seconds (JVM running for 11.134)
2018-04-27 13:49:46 -Checking status of 192.168.71.151:27017
2018-04-27 13:49:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2018-04-27 13:49:56 -Checking status of 192.168.71.151:27017
2018-04-27 13:49:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 13:50:06 -Checking status of 192.168.71.151:27017
2018-04-27 13:50:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 13:50:16 -Checking status of 192.168.71.151:27017
2018-04-27 13:50:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 13:50:16 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-04-27 13:50:16 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 13:50:16 -FrameworkServlet 'dispatcherServlet': initialization started
2018-04-27 13:50:16 -FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-04-27 13:50:16 -FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2018-04-27 13:50:26 -Checking status of 192.168.71.151:27017
2018-04-27 13:50:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 13:50:29 -获取到Tracker连接地址/192.168.71.161:22122
2018-04-27 13:50:29 -connect to /192.168.71.161:22122 soTimeout=1501 connectTimeout=601
2018-04-27 13:50:29 -对地址/192.168.71.161:22122发出交易请求TrackerGetStoreStorageCommand
2018-04-27 13:50:29 -发出交易请求..报文头为ProtoHead [contentLength=0, cmd=101, status=0]
2018-04-27 13:50:29 -交易参数为[]
2018-04-27 13:50:29 -服务端返回报文头ProtoHead [contentLength=40, cmd=100, status=0]
2018-04-27 13:50:29 -dump class=com.github.tobato.fastdfs.domain.StorageNode
2018-04-27 13:50:29 -----------------------------------------
2018-04-27 13:50:29 -FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]
2018-04-27 13:50:29 -FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]
2018-04-27 13:50:29 -FieldMateData [field=port, index=2, max=0, size=8, offsize=31]
2018-04-27 13:50:29 -FieldMateData [field=storeIndex, index=3, max=0, size=1, offsize=39]
2018-04-27 13:50:29 -设置值是 FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]group1
2018-04-27 13:50:29 -Setting default value: false
2018-04-27 13:50:29 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 13:50:29 -    No conversion required, value is already a Boolean
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 13:50:29 -    Converted to Byte value '0'
2018-04-27 13:50:29 -Setting default value:  
2018-04-27 13:50:29 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 13:50:29 -    No conversion required, value is already a Character
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 13:50:29 -    Converted to Double value '0.0'
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 13:50:29 -    Converted to Float value '0.0'
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 13:50:29 -    No conversion required, value is already a Integer
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 13:50:29 -    Converted to Long value '0'
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 13:50:29 -    Converted to Short value '0'
2018-04-27 13:50:29 -Setting default value: 0.0
2018-04-27 13:50:29 -Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2018-04-27 13:50:29 -    No conversion required, value is already a BigDecimal
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'BigInteger' value '0' to type 'BigInteger'
2018-04-27 13:50:29 -    No conversion required, value is already a BigInteger
2018-04-27 13:50:29 -Setting default value: false
2018-04-27 13:50:29 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 13:50:29 -    No conversion required, value is already a Boolean
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 13:50:29 -    Converted to Byte value '0'
2018-04-27 13:50:29 -Setting default value:  
2018-04-27 13:50:29 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 13:50:29 -    No conversion required, value is already a Character
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 13:50:29 -    Converted to Double value '0.0'
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 13:50:29 -    Converted to Float value '0.0'
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 13:50:29 -    No conversion required, value is already a Integer
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 13:50:29 -    Converted to Long value '0'
2018-04-27 13:50:29 -Setting default value: 0
2018-04-27 13:50:29 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 13:50:29 -    Converted to Short value '0'
2018-04-27 13:50:29 -Setting default value: 
2018-04-27 13:50:29 -Converting 'String' value '' to type 'String'
2018-04-27 13:50:29 -Setting default value: [Z@23269a
2018-04-27 13:50:29 -Converting 'boolean[]' value '[Z@23269a' to type 'boolean[]'
2018-04-27 13:50:29 -    No conversion required, value is already a boolean[]
2018-04-27 13:50:29 -Setting default value: [B@625dc680
2018-04-27 13:50:29 -Converting 'byte[]' value '[B@625dc680' to type 'byte[]'
2018-04-27 13:50:29 -    No conversion required, value is already a byte[]
2018-04-27 13:50:29 -Setting default value: [C@54619bc
2018-04-27 13:50:29 -Converting 'char[]' value '[C@54619bc' to type 'char[]'
2018-04-27 13:50:29 -    No conversion required, value is already a char[]
2018-04-27 13:50:29 -Setting default value: [D@216ecf66
2018-04-27 13:50:29 -Converting 'double[]' value '[D@216ecf66' to type 'double[]'
2018-04-27 13:50:29 -    No conversion required, value is already a double[]
2018-04-27 13:50:29 -Setting default value: [F@38e02a27
2018-04-27 13:50:29 -Converting 'float[]' value '[F@38e02a27' to type 'float[]'
2018-04-27 13:50:29 -    No conversion required, value is already a float[]
2018-04-27 13:50:29 -Setting default value: [I@3405927d
2018-04-27 13:50:29 -Converting 'int[]' value '[I@3405927d' to type 'int[]'
2018-04-27 13:50:29 -    No conversion required, value is already a int[]
2018-04-27 13:50:29 -Setting default value: [J@1bbe6b8
2018-04-27 13:50:29 -Converting 'long[]' value '[J@1bbe6b8' to type 'long[]'
2018-04-27 13:50:29 -    No conversion required, value is already a long[]
2018-04-27 13:50:29 -Setting default value: [S@56f90c16
2018-04-27 13:50:29 -Converting 'short[]' value '[S@56f90c16' to type 'short[]'
2018-04-27 13:50:29 -    No conversion required, value is already a short[]
2018-04-27 13:50:29 -Setting default value: [Ljava.math.BigDecimal;@6ff1a5fc
2018-04-27 13:50:29 -Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@6ff1a5fc' to type 'BigDecimal[]'
2018-04-27 13:50:29 -    No conversion required, value is already a BigDecimal[]
2018-04-27 13:50:29 -Setting default value: [Ljava.math.BigInteger;@292fe274
2018-04-27 13:50:29 -Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@292fe274' to type 'BigInteger[]'
2018-04-27 13:50:29 -    No conversion required, value is already a BigInteger[]
2018-04-27 13:50:29 -Setting default value: [Ljava.lang.Boolean;@55944fa7
2018-04-27 13:50:29 -Converting 'Boolean[]' value '[Ljava.lang.Boolean;@55944fa7' to type 'Boolean[]'
2018-04-27 13:50:29 -    No conversion required, value is already a Boolean[]
2018-04-27 13:50:29 -Setting default value: [Ljava.lang.Byte;@e2c9352
2018-04-27 13:50:29 -Converting 'Byte[]' value '[Ljava.lang.Byte;@e2c9352' to type 'Byte[]'
2018-04-27 13:50:29 -    No conversion required, value is already a Byte[]
2018-04-27 13:50:29 -Setting default value: [Ljava.lang.Character;@7fe2a776
2018-04-27 13:50:29 -Converting 'Character[]' value '[Ljava.lang.Character;@7fe2a776' to type 'Character[]'
2018-04-27 13:50:29 -    No conversion required, value is already a Character[]
2018-04-27 13:50:29 -Setting default value: [Ljava.lang.Double;@87c365a
2018-04-27 13:50:29 -Converting 'Double[]' value '[Ljava.lang.Double;@87c365a' to type 'Double[]'
2018-04-27 13:50:29 -    No conversion required, value is already a Double[]
2018-04-27 13:50:29 -Setting default value: [Ljava.lang.Float;@d3afd12
2018-04-27 13:50:29 -Converting 'Float[]' value '[Ljava.lang.Float;@d3afd12' to type 'Float[]'
2018-04-27 13:50:29 -    No conversion required, value is already a Float[]
2018-04-27 13:50:29 -Setting default value: [Ljava.lang.Integer;@eae1699
2018-04-27 13:50:29 -Converting 'Integer[]' value '[Ljava.lang.Integer;@eae1699' to type 'Integer[]'
2018-04-27 13:50:29 -    No conversion required, value is already a Integer[]
2018-04-27 13:50:29 -Setting default value: [Ljava.lang.Long;@1b05cc7
2018-04-27 13:50:29 -Converting 'Long[]' value '[Ljava.lang.Long;@1b05cc7' to type 'Long[]'
2018-04-27 13:50:29 -    No conversion required, value is already a Long[]
2018-04-27 13:50:29 -Setting default value: [Ljava.lang.Short;@51651000
2018-04-27 13:50:29 -Converting 'Short[]' value '[Ljava.lang.Short;@51651000' to type 'Short[]'
2018-04-27 13:50:29 -    No conversion required, value is already a Short[]
2018-04-27 13:50:29 -Setting default value: [Ljava.lang.String;@4e525f70
2018-04-27 13:50:29 -Converting 'String[]' value '[Ljava.lang.String;@4e525f70' to type 'String[]'
2018-04-27 13:50:29 -    No conversion required, value is already a String[]
2018-04-27 13:50:29 -Setting default value: [Ljava.lang.Class;@6f7fb374
2018-04-27 13:50:29 -Converting 'Class[]' value '[Ljava.lang.Class;@6f7fb374' to type 'Class[]'
2018-04-27 13:50:29 -    No conversion required, value is already a Class[]
2018-04-27 13:50:29 -Setting default value: [Ljava.util.Date;@16e34b8b
2018-04-27 13:50:29 -Converting 'Date[]' value '[Ljava.util.Date;@16e34b8b' to type 'Date[]'
2018-04-27 13:50:29 -    No conversion required, value is already a Date[]
2018-04-27 13:50:29 -Setting default value: [Ljava.util.Calendar;@3c446b71
2018-04-27 13:50:29 -Converting 'Calendar[]' value '[Ljava.util.Calendar;@3c446b71' to type 'Calendar[]'
2018-04-27 13:50:29 -    No conversion required, value is already a Calendar[]
2018-04-27 13:50:29 -Setting default value: [Ljava.io.File;@228122c0
2018-04-27 13:50:29 -Converting 'java.io.File[]' value '[Ljava.io.File;@228122c0' to type 'java.io.File[]'
2018-04-27 13:50:29 -    No conversion required, value is already a java.io.File[]
2018-04-27 13:50:29 -Setting default value: [Ljava.sql.Date;@55d62dc1
2018-04-27 13:50:29 -Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@55d62dc1' to type 'java.sql.Date[]'
2018-04-27 13:50:29 -    No conversion required, value is already a java.sql.Date[]
2018-04-27 13:50:29 -Setting default value: [Ljava.sql.Time;@44be9a9c
2018-04-27 13:50:29 -Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@44be9a9c' to type 'java.sql.Time[]'
2018-04-27 13:50:29 -    No conversion required, value is already a java.sql.Time[]
2018-04-27 13:50:29 -Setting default value: [Ljava.sql.Timestamp;@5c089efc
2018-04-27 13:50:29 -Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@5c089efc' to type 'java.sql.Timestamp[]'
2018-04-27 13:50:29 -    No conversion required, value is already a java.sql.Timestamp[]
2018-04-27 13:50:29 -Setting default value: [Ljava.net.URL;@12ba459b
2018-04-27 13:50:29 -Converting 'java.net.URL[]' value '[Ljava.net.URL;@12ba459b' to type 'java.net.URL[]'
2018-04-27 13:50:29 -    No conversion required, value is already a java.net.URL[]
2018-04-27 13:50:29 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 13:50:29 -Converting 'String' value 'group1' to type 'String'
2018-04-27 13:50:29 -设置值是 FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]192.168.71.158
2018-04-27 13:50:29 -Convert string '192.168.71.158' to class 'java.lang.String'
2018-04-27 13:50:29 -Converting 'String' value '192.168.71.158' to type 'String'
2018-04-27 13:50:29 -设置值是 FieldMateData [field=port, index=2, max=0, size=8, offsize=31]23000
2018-04-27 13:50:29 -Converting 'Integer' value '23000' to type 'Integer'
2018-04-27 13:50:29 -    No conversion required, value is already a Integer
2018-04-27 13:50:29 -设置值是 FieldMateData [field=storeIndex, index=3, max=0, size=1, offsize=39]0
2018-04-27 13:50:29 -Converting 'Byte' value '0' to type 'Byte'
2018-04-27 13:50:29 -    No conversion required, value is already a Byte
2018-04-27 13:50:29 -connect to /192.168.71.158:23000 soTimeout=1501 connectTimeout=601
2018-04-27 13:50:29 -对地址/192.168.71.158:23000发出交易请求StorageUploadFileCommand
2018-04-27 13:50:29 -发出交易请求..报文头为ProtoHead [contentLength=57603, cmd=11, status=0]
2018-04-27 13:50:29 -交易参数为[0, 0, 0, 0, 0, 0, 0, -32, -12, 112, 110, 103, 0, 0, 0]
2018-04-27 13:50:29 -开始上传文件流大小为57588
2018-04-27 13:50:29 -剩余数据量0
2018-04-27 13:50:29 -服务端返回报文头ProtoHead [contentLength=60, cmd=100, status=0]
2018-04-27 13:50:29 -dump class=com.github.tobato.fastdfs.domain.StorePath
2018-04-27 13:50:29 -----------------------------------------
2018-04-27 13:50:29 -FieldMateData [field=group, index=0, max=16, size=16, offsize=0]
2018-04-27 13:50:29 -FieldMateData [field=path, index=1, max=0, size=0, offsize=16]
2018-04-27 13:50:29 -设置值是 FieldMateData [field=group, index=0, max=16, size=16, offsize=0]group1
2018-04-27 13:50:29 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 13:50:29 -Converting 'String' value 'group1' to type 'String'
2018-04-27 13:50:29 -设置值是 FieldMateData [field=path, index=1, max=0, size=0, offsize=16]M00/00/00/wKhHnlriuiiAdrmxAADg9OSIpuo267.png
2018-04-27 13:50:29 -Convert string 'M00/00/00/wKhHnlriuiiAdrmxAADg9OSIpuo267.png' to class 'java.lang.String'
2018-04-27 13:50:29 -Converting 'String' value 'M00/00/00/wKhHnlriuiiAdrmxAADg9OSIpuo267.png' to type 'String'
2018-04-27 13:50:29 -对地址/192.168.71.158:23000发出交易请求StorageUploadSlaveFileCommand
2018-04-27 13:50:29 -发出交易请求..报文头为ProtoHead [contentLength=5026, cmd=21, status=0]
2018-04-27 13:50:29 -交易参数为[0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 19, 80, 95, 49, 53, 48, 120, 49, 53, 48, 0, 0, 0, 0, 0, 0, 0, 0, 112, 110, 103, 0, 0, 0, 77, 48, 48, 47, 48, 48, 47, 48, 48, 47, 119, 75, 104, 72, 110, 108, 114, 105, 117, 105, 105, 65, 100, 114, 109, 120, 65, 65, 68, 103, 57, 79, 83, 73, 112, 117, 111, 50, 54, 55, 46, 112, 110, 103]
2018-04-27 13:50:29 -开始上传文件流大小为4944
2018-04-27 13:50:29 -剩余数据量0
2018-04-27 13:50:29 -服务端返回报文头ProtoHead [contentLength=68, cmd=100, status=0]
2018-04-27 13:50:29 -dump class=com.github.tobato.fastdfs.domain.StorePath
2018-04-27 13:50:29 -----------------------------------------
2018-04-27 13:50:29 -FieldMateData [field=group, index=0, max=16, size=16, offsize=0]
2018-04-27 13:50:29 -FieldMateData [field=path, index=1, max=0, size=0, offsize=16]
2018-04-27 13:50:29 -设置值是 FieldMateData [field=group, index=0, max=16, size=16, offsize=0]group1
2018-04-27 13:50:29 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 13:50:29 -Converting 'String' value 'group1' to type 'String'
2018-04-27 13:50:29 -设置值是 FieldMateData [field=path, index=1, max=0, size=0, offsize=16]M00/00/00/wKhHnlriuiiAdrmxAADg9OSIpuo267_150x150.png
2018-04-27 13:50:29 -Convert string 'M00/00/00/wKhHnlriuiiAdrmxAADg9OSIpuo267_150x150.png' to class 'java.lang.String'
2018-04-27 13:50:29 -Converting 'String' value 'M00/00/00/wKhHnlriuiiAdrmxAADg9OSIpuo267_150x150.png' to type 'String'
2018-04-27 13:50:34 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@779e8102 
2018-04-27 13:50:34 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@129fd249 
2018-04-27 13:50:36 -Checking status of 192.168.71.151:27017
2018-04-27 13:50:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 13:50:46 -Checking status of 192.168.71.151:27017
2018-04-27 13:50:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:50:56 -Checking status of 192.168.71.151:27017
2018-04-27 13:50:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:51:06 -Checking status of 192.168.71.151:27017
2018-04-27 13:51:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:51:16 -Checking status of 192.168.71.151:27017
2018-04-27 13:51:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:51:26 -Checking status of 192.168.71.151:27017
2018-04-27 13:51:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:51:34 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@779e8102 
2018-04-27 13:51:34 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@129fd249 
2018-04-27 13:51:36 -Checking status of 192.168.71.151:27017
2018-04-27 13:51:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:51:46 -Checking status of 192.168.71.151:27017
2018-04-27 13:51:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:51:56 -Checking status of 192.168.71.151:27017
2018-04-27 13:51:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:52:06 -Checking status of 192.168.71.151:27017
2018-04-27 13:52:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 13:52:16 -Checking status of 192.168.71.151:27017
2018-04-27 13:52:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:52:26 -Checking status of 192.168.71.151:27017
2018-04-27 13:52:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:52:34 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@779e8102 
2018-04-27 13:52:34 -check connection status of com.github.tobato.fastdfs.conn.DefaultConnection@129fd249 
2018-04-27 13:52:36 -Checking status of 192.168.71.151:27017
2018-04-27 13:52:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:52:46 -Checking status of 192.168.71.151:27017
2018-04-27 13:52:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:52:56 -Checking status of 192.168.71.151:27017
2018-04-27 13:52:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:53:06 -Checking status of 192.168.71.151:27017
2018-04-27 13:53:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 13:53:16 -Checking status of 192.168.71.151:27017
2018-04-27 13:53:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:53:26 -Checking status of 192.168.71.151:27017
2018-04-27 13:53:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:53:34 -disconnect from Socket[addr=/192.168.71.161,port=22122,localport=57410]
2018-04-27 13:53:34 -disconnect from Socket[addr=/192.168.71.158,port=23000,localport=57411]
2018-04-27 13:53:36 -Checking status of 192.168.71.151:27017
2018-04-27 13:53:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:53:46 -Checking status of 192.168.71.151:27017
2018-04-27 13:53:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:53:56 -Checking status of 192.168.71.151:27017
2018-04-27 13:53:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:54:06 -Checking status of 192.168.71.151:27017
2018-04-27 13:54:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:54:16 -Checking status of 192.168.71.151:27017
2018-04-27 13:54:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:54:26 -Checking status of 192.168.71.151:27017
2018-04-27 13:54:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:54:36 -Checking status of 192.168.71.151:27017
2018-04-27 13:54:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:54:46 -Checking status of 192.168.71.151:27017
2018-04-27 13:54:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:54:56 -Checking status of 192.168.71.151:27017
2018-04-27 13:54:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:55:06 -Checking status of 192.168.71.151:27017
2018-04-27 13:55:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:55:16 -Checking status of 192.168.71.151:27017
2018-04-27 13:55:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:55:26 -Checking status of 192.168.71.151:27017
2018-04-27 13:55:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 13:55:36 -Checking status of 192.168.71.151:27017
2018-04-27 13:55:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:55:46 -Checking status of 192.168.71.151:27017
2018-04-27 13:55:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:55:56 -Checking status of 192.168.71.151:27017
2018-04-27 13:55:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 13:56:06 -Checking status of 192.168.71.151:27017
2018-04-27 13:56:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:56:16 -Checking status of 192.168.71.151:27017
2018-04-27 13:56:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:56:26 -Checking status of 192.168.71.151:27017
2018-04-27 13:56:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:56:36 -Checking status of 192.168.71.151:27017
2018-04-27 13:56:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:56:46 -Checking status of 192.168.71.151:27017
2018-04-27 13:56:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 13:56:56 -Checking status of 192.168.71.151:27017
2018-04-27 13:56:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:57:06 -Checking status of 192.168.71.151:27017
2018-04-27 13:57:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 13:57:16 -Checking status of 192.168.71.151:27017
2018-04-27 13:57:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 13:57:26 -Checking status of 192.168.71.151:27017
2018-04-27 13:57:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 13:57:36 -Checking status of 192.168.71.151:27017
2018-04-27 13:57:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:57:46 -Checking status of 192.168.71.151:27017
2018-04-27 13:57:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:57:56 -Checking status of 192.168.71.151:27017
2018-04-27 13:57:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:58:06 -Checking status of 192.168.71.151:27017
2018-04-27 13:58:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 13:58:16 -Checking status of 192.168.71.151:27017
2018-04-27 13:58:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 13:58:26 -Checking status of 192.168.71.151:27017
2018-04-27 13:58:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 13:58:36 -Checking status of 192.168.71.151:27017
2018-04-27 13:58:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 13:58:46 -Checking status of 192.168.71.151:27017
2018-04-27 13:58:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 13:58:56 -Checking status of 192.168.71.151:27017
2018-04-27 13:58:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 13:59:06 -Checking status of 192.168.71.151:27017
2018-04-27 13:59:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.5 ms, state=CONNECTED}]
2018-04-27 13:59:16 -Checking status of 192.168.71.151:27017
2018-04-27 13:59:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 13:59:26 -Checking status of 192.168.71.151:27017
2018-04-27 13:59:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 13:59:36 -Checking status of 192.168.71.151:27017
2018-04-27 13:59:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.8 ms, state=CONNECTED}]
2018-04-27 13:59:46 -Checking status of 192.168.71.151:27017
2018-04-27 13:59:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.4 ms, state=CONNECTED}]
2018-04-27 13:59:56 -Checking status of 192.168.71.151:27017
2018-04-27 13:59:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.3 ms, state=CONNECTED}]
2018-04-27 14:00:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:00:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 14:00:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:00:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.6 ms, state=CONNECTED}]
2018-04-27 14:00:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:00:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 14:00:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:00:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.2 ms, state=CONNECTED}]
2018-04-27 14:00:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:00:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.6 ms, state=CONNECTED}]
2018-04-27 14:00:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:00:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.2 ms, state=CONNECTED}]
2018-04-27 14:01:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:01:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.7 ms, state=CONNECTED}]
2018-04-27 14:01:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:01:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2018-04-27 14:01:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:01:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 14:01:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:01:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 14:01:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:01:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 14:01:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:01:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 14:02:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:02:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 14:02:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:02:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 14:02:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:02:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 14:02:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:02:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 14:02:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:02:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 14:02:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:02:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:03:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:03:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:03:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:03:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:03:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:03:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:03:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:03:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:03:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:03:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:03:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:03:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:04:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:04:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:04:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:04:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:04:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:04:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:04:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:04:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:04:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:04:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:04:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:04:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:05:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:05:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:05:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:05:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:05:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:05:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:05:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:05:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:05:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:05:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:05:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:05:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:06:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:06:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:06:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:06:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:06:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:06:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:06:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:06:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:06:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:06:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:06:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:06:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:07:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:07:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:07:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:07:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:07:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:07:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:07:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:07:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:07:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:07:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:07:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:07:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:08:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:08:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:08:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:08:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:08:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:08:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:08:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:08:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:08:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:08:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:08:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:08:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:09:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:09:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:09:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:09:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:09:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:09:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:09:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:09:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:09:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:09:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:09:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:09:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:10:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:10:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:10:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:10:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:10:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:10:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:10:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:10:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:10:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:10:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:10:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:10:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:11:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:11:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:11:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:11:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:11:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:11:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:11:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:11:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:11:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:11:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:11:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:11:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:12:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:12:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:12:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:12:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 14:12:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:12:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 14:12:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:12:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:12:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:12:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:12:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:12:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:13:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:13:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:13:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:13:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:13:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:13:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:13:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:13:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:13:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:13:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:13:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:13:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:14:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:14:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:14:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:14:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:14:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:14:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:14:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:14:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:14:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:14:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:14:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:14:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:15:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:15:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:15:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:15:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:15:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:15:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:15:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:15:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:15:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:15:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.4 ms, state=CONNECTED}]
2018-04-27 14:15:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:15:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.7 ms, state=CONNECTED}]
2018-04-27 14:16:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:16:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2018-04-27 14:16:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:16:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.0 ms, state=CONNECTED}]
2018-04-27 14:16:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:16:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.2 ms, state=CONNECTED}]
2018-04-27 14:16:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:16:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.3 ms, state=CONNECTED}]
2018-04-27 14:16:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:16:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.7 ms, state=CONNECTED}]
2018-04-27 14:16:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:16:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2018-04-27 14:17:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:17:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.7 ms, state=CONNECTED}]
2018-04-27 14:17:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:17:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 14:17:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:17:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 14:17:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:17:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 14:17:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:17:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 14:17:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:17:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 14:18:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:18:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 14:18:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:18:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:18:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:18:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:18:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:18:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.8 ms, state=CONNECTED}]
2018-04-27 14:18:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:18:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.0 ms, state=CONNECTED}]
2018-04-27 14:18:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:18:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.4 ms, state=CONNECTED}]
2018-04-27 14:19:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:19:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 14:19:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:19:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.6 ms, state=CONNECTED}]
2018-04-27 14:19:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:19:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2018-04-27 14:19:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:19:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 14:19:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:19:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 14:19:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:19:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 14:20:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:20:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:20:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:20:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:20:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:20:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:20:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:20:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:20:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:20:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:20:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:20:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:21:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:21:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:21:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:21:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:21:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:21:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:21:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:21:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:21:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:21:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:21:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:21:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:22:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:22:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:22:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:22:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:22:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:22:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:22:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:22:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:22:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:22:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:22:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:22:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:23:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:23:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:23:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:23:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:23:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:23:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:23:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:23:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 14:23:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:23:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 14:23:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:23:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:24:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:24:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:24:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:24:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:24:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:24:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:24:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:24:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:24:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:24:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:24:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:24:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:25:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:25:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:25:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:25:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:25:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:25:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:25:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:25:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:25:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:25:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:25:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:25:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:26:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:26:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=10.1 ms, state=CONNECTED}]
2018-04-27 14:26:07 -Starting FastdfsTests on DESKTOP-4VE2VST with PID 16920 (started by Qiang in Y:\MyGit\demo)
2018-04-27 14:26:07 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 14:26:07 -The following profiles are active: dev
2018-04-27 14:26:07 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@79dc5318: startup date [Fri Apr 27 14:26:07 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:26:07 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@79dc5318: startup date [Fri Apr 27 14:26:07 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:26:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:26:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:26:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:26:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:26:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:26:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:26:09 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:26:09 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:26:09 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:26:09 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:26:09 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:26:09 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:26:09 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:26:09 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:26:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:26:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 14:26:09 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 14:26:09 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:26:09 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:26:09 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:26:09 -Loaded expression factory via original TCCL
2018-04-27 14:26:09 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:26:09 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:26:09 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:26:09 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 14:26:09 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 14:26:09 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 14:26:09 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 14:26:09 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 14:26:09 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 14:26:09 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 14:26:09 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 14:26:09 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 14:26:09 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 14:26:09 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 14:26:09 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 14:26:09 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 14:26:09 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$ba8a4730] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:09 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$ba8a4730] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d772dfb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d772dfb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$ab4d32c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$ab4d32c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 14:26:10 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 14:26:10 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 14:26:10 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 14:26:10 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 14:26:10 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 14:26:10 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 14:26:10 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 14:26:10 -Starting Post-processing phase
2018-04-27 14:26:10 -Building annotation class map
2018-04-27 14:26:10 -Building interface class map for 8 classes
2018-04-27 14:26:10 - - Actor implements 0 interfaces
2018-04-27 14:26:10 - - Role implements 1 interfaces
2018-04-27 14:26:10 -   - java.io.Serializable
2018-04-27 14:26:10 - - MongoUser implements 0 interfaces
2018-04-27 14:26:10 - - Role implements 0 interfaces
2018-04-27 14:26:10 - - Movie implements 0 interfaces
2018-04-27 14:26:10 - - Department implements 0 interfaces
2018-04-27 14:26:10 - - BookBean implements 0 interfaces
2018-04-27 14:26:10 - - User implements 1 interfaces
2018-04-27 14:26:10 -   - java.io.Serializable
2018-04-27 14:26:10 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 14:26:10 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 14:26:10 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 14:26:10 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 14:26:10 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 14:26:10 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 14:26:10 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 14:26:10 -Post-processing: com.example.ren.model.BookBean
2018-04-27 14:26:10 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 14:26:10 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 14:26:10 -Checking for @Transient classes....
2018-04-27 14:26:10 -Registering converters and deregistering transient fields and methods....
2018-04-27 14:26:10 -Post-processing complete
2018-04-27 14:26:10 -Building Index Metadata.
2018-04-27 14:26:10 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:10 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:26:11 -{dataSource-1} inited
2018-04-27 14:26:11 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 14:26:11 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 14:26:11 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 14:26:10",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:1825228532, ConnectTime:"2018-04-27 14:26:11", UseCount:1, LastActiveTime:"2018-04-27 14:26:11"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 14:26:11 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 14:26:11 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 14:26:11 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 14:26:11 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 14:26:11 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 14:26:11 -HHH000206: hibernate.properties not found
2018-04-27 14:26:11 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 14:26:11 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 14:26:11 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 14:26:11 -Adding type registration boolean -> org.hibernate.type.BooleanType@77b3752b
2018-04-27 14:26:11 -Adding type registration boolean -> org.hibernate.type.BooleanType@77b3752b
2018-04-27 14:26:11 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77b3752b
2018-04-27 14:26:11 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6b321262
2018-04-27 14:26:11 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@309dcdf3
2018-04-27 14:26:11 -Adding type registration yes_no -> org.hibernate.type.YesNoType@1af4955e
2018-04-27 14:26:11 -Adding type registration byte -> org.hibernate.type.ByteType@66e21568
2018-04-27 14:26:11 -Adding type registration byte -> org.hibernate.type.ByteType@66e21568
2018-04-27 14:26:11 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66e21568
2018-04-27 14:26:11 -Adding type registration character -> org.hibernate.type.CharacterType@35dece42
2018-04-27 14:26:11 -Adding type registration char -> org.hibernate.type.CharacterType@35dece42
2018-04-27 14:26:11 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35dece42
2018-04-27 14:26:11 -Adding type registration short -> org.hibernate.type.ShortType@697d6ded
2018-04-27 14:26:11 -Adding type registration short -> org.hibernate.type.ShortType@697d6ded
2018-04-27 14:26:11 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@697d6ded
2018-04-27 14:26:11 -Adding type registration integer -> org.hibernate.type.IntegerType@664e848c
2018-04-27 14:26:11 -Adding type registration int -> org.hibernate.type.IntegerType@664e848c
2018-04-27 14:26:11 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@664e848c
2018-04-27 14:26:11 -Adding type registration long -> org.hibernate.type.LongType@24c685e7
2018-04-27 14:26:11 -Adding type registration long -> org.hibernate.type.LongType@24c685e7
2018-04-27 14:26:11 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@24c685e7
2018-04-27 14:26:11 -Adding type registration float -> org.hibernate.type.FloatType@3292d91a
2018-04-27 14:26:11 -Adding type registration float -> org.hibernate.type.FloatType@3292d91a
2018-04-27 14:26:11 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3292d91a
2018-04-27 14:26:11 -Adding type registration double -> org.hibernate.type.DoubleType@b4732dc
2018-04-27 14:26:11 -Adding type registration double -> org.hibernate.type.DoubleType@b4732dc
2018-04-27 14:26:11 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@b4732dc
2018-04-27 14:26:11 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25b38203
2018-04-27 14:26:11 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25b38203
2018-04-27 14:26:11 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7f3ca64a
2018-04-27 14:26:11 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7f3ca64a
2018-04-27 14:26:11 -Adding type registration string -> org.hibernate.type.StringType@401c4250
2018-04-27 14:26:11 -Adding type registration java.lang.String -> org.hibernate.type.StringType@401c4250
2018-04-27 14:26:11 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@37a9b687
2018-04-27 14:26:11 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@661d6bb6
2018-04-27 14:26:11 -Adding type registration url -> org.hibernate.type.UrlType@364fd4ae
2018-04-27 14:26:11 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@364fd4ae
2018-04-27 14:26:11 -Adding type registration Duration -> org.hibernate.type.DurationType@3b481bf5
2018-04-27 14:26:11 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3b481bf5
2018-04-27 14:26:11 -Adding type registration Instant -> org.hibernate.type.InstantType@8e25d3f
2018-04-27 14:26:11 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8e25d3f
2018-04-27 14:26:11 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1b57c345
2018-04-27 14:26:11 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1b57c345
2018-04-27 14:26:11 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2f79f192
2018-04-27 14:26:11 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2f79f192
2018-04-27 14:26:11 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6af5b246
2018-04-27 14:26:11 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6af5b246
2018-04-27 14:26:11 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a85644c
2018-04-27 14:26:11 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a85644c
2018-04-27 14:26:11 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4bf80c29
2018-04-27 14:26:11 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4bf80c29
2018-04-27 14:26:11 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@160e99e0
2018-04-27 14:26:11 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@160e99e0
2018-04-27 14:26:11 -Adding type registration date -> org.hibernate.type.DateType@3cc053
2018-04-27 14:26:11 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@3cc053
2018-04-27 14:26:11 -Adding type registration time -> org.hibernate.type.TimeType@3a38f122
2018-04-27 14:26:11 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a38f122
2018-04-27 14:26:11 -Adding type registration timestamp -> org.hibernate.type.TimestampType@594131f2
2018-04-27 14:26:11 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@594131f2
2018-04-27 14:26:11 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@594131f2
2018-04-27 14:26:11 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e0cc334
2018-04-27 14:26:11 -Adding type registration calendar -> org.hibernate.type.CalendarType@64ae105d
2018-04-27 14:26:11 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@64ae105d
2018-04-27 14:26:11 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@64ae105d
2018-04-27 14:26:11 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@53aa2fc9
2018-04-27 14:26:11 -Adding type registration locale -> org.hibernate.type.LocaleType@52f6900a
2018-04-27 14:26:11 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@52f6900a
2018-04-27 14:26:11 -Adding type registration currency -> org.hibernate.type.CurrencyType@36c7cbe1
2018-04-27 14:26:11 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36c7cbe1
2018-04-27 14:26:11 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d5c41e5
2018-04-27 14:26:11 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d5c41e5
2018-04-27 14:26:11 -Adding type registration class -> org.hibernate.type.ClassType@171dc7c3
2018-04-27 14:26:11 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@171dc7c3
2018-04-27 14:26:11 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2d258eff
2018-04-27 14:26:11 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2d258eff
2018-04-27 14:26:11 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a058df8
2018-04-27 14:26:11 -Adding type registration binary -> org.hibernate.type.BinaryType@aa61e4e
2018-04-27 14:26:11 -Adding type registration byte[] -> org.hibernate.type.BinaryType@aa61e4e
2018-04-27 14:26:11 -Adding type registration [B -> org.hibernate.type.BinaryType@aa61e4e
2018-04-27 14:26:11 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4ea56bdb
2018-04-27 14:26:11 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4ea56bdb
2018-04-27 14:26:11 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4ea56bdb
2018-04-27 14:26:11 -Adding type registration row_version -> org.hibernate.type.RowVersionType@3d2f3dcb
2018-04-27 14:26:11 -Adding type registration image -> org.hibernate.type.ImageType@71664560
2018-04-27 14:26:11 -Adding type registration characters -> org.hibernate.type.CharArrayType@bd3eff4
2018-04-27 14:26:11 -Adding type registration char[] -> org.hibernate.type.CharArrayType@bd3eff4
2018-04-27 14:26:11 -Adding type registration [C -> org.hibernate.type.CharArrayType@bd3eff4
2018-04-27 14:26:11 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2180e789
2018-04-27 14:26:11 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2180e789
2018-04-27 14:26:11 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2180e789
2018-04-27 14:26:11 -Adding type registration text -> org.hibernate.type.TextType@285005b8
2018-04-27 14:26:11 -Adding type registration ntext -> org.hibernate.type.NTextType@29d405e6
2018-04-27 14:26:11 -Adding type registration blob -> org.hibernate.type.BlobType@4d98e41b
2018-04-27 14:26:11 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4d98e41b
2018-04-27 14:26:11 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7459a21e
2018-04-27 14:26:11 -Adding type registration clob -> org.hibernate.type.ClobType@58f31629
2018-04-27 14:26:11 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58f31629
2018-04-27 14:26:11 -Adding type registration nclob -> org.hibernate.type.NClobType@653fb8d1
2018-04-27 14:26:11 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@653fb8d1
2018-04-27 14:26:11 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@93501be
2018-04-27 14:26:11 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3c25cfe1
2018-04-27 14:26:11 -Adding type registration serializable -> org.hibernate.type.SerializableType@6da4feeb
2018-04-27 14:26:11 -Adding type registration object -> org.hibernate.type.ObjectType@74667e6a
2018-04-27 14:26:11 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74667e6a
2018-04-27 14:26:11 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@50fdf44f
2018-04-27 14:26:11 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@172f4514
2018-04-27 14:26:11 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7df6d663
2018-04-27 14:26:11 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13d019a4
2018-04-27 14:26:11 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2c30c81d
2018-04-27 14:26:11 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@415a3f6a
2018-04-27 14:26:11 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a54acec
2018-04-27 14:26:11 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@19da993b
2018-04-27 14:26:11 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 14:26:11 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 14:26:11 -JDBC version : 4.0
2018-04-27 14:26:11 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 14:26:12 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 14:26:12 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 14:26:12 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 14:26:12 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 14:26:12 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 14:26:12 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 14:26:12 -Import with entity name Department
2018-04-27 14:26:12 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -MetadataSourceProcessor property id with lazy=false
2018-04-27 14:26:12 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 14:26:12 -building SimpleValue for id
2018-04-27 14:26:12 -Building property id
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -MetadataSourceProcessor property name with lazy=false
2018-04-27 14:26:12 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 14:26:12 -building SimpleValue for name
2018-04-27 14:26:12 -Building property name
2018-04-27 14:26:12 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 14:26:12 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 14:26:12 -Import with entity name Role
2018-04-27 14:26:12 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -MetadataSourceProcessor property id with lazy=false
2018-04-27 14:26:12 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 14:26:12 -building SimpleValue for id
2018-04-27 14:26:12 -Building property id
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -MetadataSourceProcessor property name with lazy=false
2018-04-27 14:26:12 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 14:26:12 -building SimpleValue for name
2018-04-27 14:26:12 -Building property name
2018-04-27 14:26:12 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 14:26:12 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 14:26:12 -Import with entity name User
2018-04-27 14:26:12 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -MetadataSourceProcessor property id with lazy=false
2018-04-27 14:26:12 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 14:26:12 -building SimpleValue for id
2018-04-27 14:26:12 -Building property id
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 14:26:12 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 14:26:12 -building SimpleValue for createDate
2018-04-27 14:26:12 -Building property createDate
2018-04-27 14:26:12 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -Building property department
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -MetadataSourceProcessor property email with lazy=false
2018-04-27 14:26:12 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 14:26:12 -building SimpleValue for email
2018-04-27 14:26:12 -Building property email
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -MetadataSourceProcessor property name with lazy=false
2018-04-27 14:26:12 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 14:26:12 -building SimpleValue for name
2018-04-27 14:26:12 -Building property name
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -MetadataSourceProcessor property password with lazy=false
2018-04-27 14:26:12 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 14:26:12 -building SimpleValue for password
2018-04-27 14:26:12 -Building property password
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 14:26:12 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 14:26:12 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 14:26:12 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 14:26:12 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 14:26:12 -Building property roles
2018-04-27 14:26:12 -Starting fillSimpleValue for id
2018-04-27 14:26:12 -Starting fillSimpleValue for name
2018-04-27 14:26:12 -Starting fillSimpleValue for id
2018-04-27 14:26:12 -Starting fillSimpleValue for name
2018-04-27 14:26:12 -Starting fillSimpleValue for id
2018-04-27 14:26:12 -Starting fillSimpleValue for createDate
2018-04-27 14:26:12 -Starting fillSimpleValue for email
2018-04-27 14:26:12 -Starting fillSimpleValue for name
2018-04-27 14:26:12 -Starting fillSimpleValue for password
2018-04-27 14:26:12 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 14:26:12 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 14:26:12 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 14:26:12 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 14:26:12 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 14:26:12 -Mapped collection key: user_id, element: role_id
2018-04-27 14:26:12 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 14:26:12 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 14:26:12 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 14:26:12 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 14:26:12 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 14:26:12 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 14:26:12 -Building session factory
2018-04-27 14:26:12 -SessionFactory name : null
2018-04-27 14:26:12 -Automatic flush during beforeCompletion(): enabled
2018-04-27 14:26:12 -Automatic session close at end of transaction: disabled
2018-04-27 14:26:12 -Statistics: disabled
2018-04-27 14:26:12 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 14:26:12 -Default entity-mode: pojo
2018-04-27 14:26:12 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 14:26:12 -Allow initialization of lazy state outside session : disabled
2018-04-27 14:26:12 -Using BatchFetchStyle : LEGACY
2018-04-27 14:26:12 -Default batch fetch size: -1
2018-04-27 14:26:12 -Maximum outer join fetch depth: 2
2018-04-27 14:26:12 -Default null ordering: NONE
2018-04-27 14:26:12 -Order SQL updates by primary key: disabled
2018-04-27 14:26:12 -Order SQL inserts for batching: disabled
2018-04-27 14:26:12 -multi-tenancy strategy : NONE
2018-04-27 14:26:12 -JTA Track by Thread: enabled
2018-04-27 14:26:12 -Query language substitutions: {}
2018-04-27 14:26:12 -JPA query language strict compliance: disabled
2018-04-27 14:26:12 -Named query checking : enabled
2018-04-27 14:26:12 -Second-level cache: enabled
2018-04-27 14:26:12 -Second-level query cache: disabled
2018-04-27 14:26:12 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7bd38fed
2018-04-27 14:26:12 -Second-level cache region prefix: null
2018-04-27 14:26:12 -Optimize second-level cache for minimal puts: disabled
2018-04-27 14:26:12 -Structured second-level cache entries: disabled
2018-04-27 14:26:12 -Second-level cache direct-reference entries: disabled
2018-04-27 14:26:12 -Automatic eviction of collection cache: disabled
2018-04-27 14:26:12 -JDBC batch size: 15
2018-04-27 14:26:12 -JDBC batch updates for versioned data: enabled
2018-04-27 14:26:12 -Scrollable result sets: enabled
2018-04-27 14:26:12 -Wrap result sets: disabled
2018-04-27 14:26:12 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 14:26:12 -JDBC result set fetch size: null
2018-04-27 14:26:12 -Connection release mode: ON_CLOSE
2018-04-27 14:26:12 -Generate SQL with comments: disabled
2018-04-27 14:26:12 -Session factory constructed with filter configurations : {}
2018-04-27 14:26:12 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\test-classes;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-test\2.0.0.RELEASE\spring-boot-starter-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test\2.0.0.RELEASE\spring-boot-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.0.0.RELEASE\spring-boot-test-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;X:\Maven\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;X:\Maven\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;X:\Maven\repository\org\assertj\assertj-core\3.9.1\assertj-core-3.9.1.jar;X:\Maven\repository\org\mockito\mockito-core\2.15.0\mockito-core-2.15.0.jar;X:\Maven\repository\net\bytebuddy\byte-buddy\1.7.10\byte-buddy-1.7.10.jar;X:\Maven\repository\net\bytebuddy\byte-buddy-agent\1.7.10\byte-buddy-agent-1.7.10.jar;X:\Maven\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;X:\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;X:\Maven\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;X:\Maven\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;X:\Maven\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;X:\Maven\repository\org\xmlunit\xmlunit-core\2.5.1\xmlunit-core-2.5.1.jar;X:\Maven\repository\org\springframework\spring-test\4.3.6.RELEASE\spring-test-4.3.6.RELEASE.jar;X:\Maven\repository\junit\junit\4.12\junit-4.12.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 com.example.ren.fastdfs.FastdfsTests,downloadTest, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@73bb573d, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=16920, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7ac058a0, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 14:26:10",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:1825228532, ConnectTime:"2018-04-27 14:26:11", UseCount:2, LastActiveTime:"2018-04-27 14:26:12"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 14:26:12 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:26:12 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:26:12 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:26:12 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 14:26:12 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 14:26:12 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 14:26:12 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 14:26:12 -Loaded expression factory via original TCCL
2018-04-27 14:26:12 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 14:26:12 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 14:26:12 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 14:26:12 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 14:26:12 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 14:26:12 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 14:26:12 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 14:26:12 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 14:26:12 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 14:26:12 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 14:26:12 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 14:26:12 -Skipping JACC integration as it was not enabled
2018-04-27 14:26:12 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 14:26:12 -Instantiated session factory
2018-04-27 14:26:12 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 14:26:12 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 14:26:12 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 14:26:12 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 14:26:12 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 14:26:12 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 14:26:12 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 14:26:12 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 14:26:13 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 14:26:13 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 14:26:13 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 14:26:13 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 14:26:13 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 14:26:13 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 14:26:13 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 14:26:13 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 14:26:13 - One-shot delete: delete from user_role where user_id=?
2018-04-27 14:26:13 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 14:26:13 - Version select: select id from role where id =?
2018-04-27 14:26:13 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 14:26:13 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 14:26:13 - Update 0: update role set name=? where id=?
2018-04-27 14:26:13 - Delete 0: delete from role where id=?
2018-04-27 14:26:13 - Identity insert: insert into role (name) values (?)
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ee37ca7]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44da7eb3]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d512652]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b96f8b0]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc0d9b4]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e4f4092]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4416e18d]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3120495d]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b75b890]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@439d545c]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2b6acb]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:26:13 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:26:13 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:26:13 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 14:26:13 - Version select: select id from department where id =?
2018-04-27 14:26:13 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 14:26:13 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 14:26:13 - Update 0: update department set name=? where id=?
2018-04-27 14:26:13 - Delete 0: delete from department where id=?
2018-04-27 14:26:13 - Identity insert: insert into department (name) values (?)
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b1a30e5]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34fcd292]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@496cedbb]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3957d88b]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fba0dac]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cbe455c]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be38eba]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce3409b]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66234b0f]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69eb544f]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5c902]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:26:13 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:26:13 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:26:13 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 14:26:13 - Version select: select id from user where id =?
2018-04-27 14:26:13 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 14:26:13 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 14:26:13 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 14:26:13 - Delete 0: delete from user where id=?
2018-04-27 14:26:13 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bf2aa32]
2018-04-27 14:26:13 -Visiting attribute path : createDate
2018-04-27 14:26:13 -Visiting attribute path : department
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83b0d0f]
2018-04-27 14:26:13 -Visiting attribute path : department.name
2018-04-27 14:26:13 -Visiting attribute path : email
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Visiting attribute path : password
2018-04-27 14:26:13 -Visiting attribute path : roles
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@16bbaab3]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@99c4993]
2018-04-27 14:26:13 -Visiting attribute path : roles.name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@589dfa6f]
2018-04-27 14:26:13 -Visiting attribute path : createDate
2018-04-27 14:26:13 -Visiting attribute path : department
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8667bb]
2018-04-27 14:26:13 -Visiting attribute path : department.name
2018-04-27 14:26:13 -Visiting attribute path : email
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Visiting attribute path : password
2018-04-27 14:26:13 -Visiting attribute path : roles
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2774dcf4]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b829d5]
2018-04-27 14:26:13 -Visiting attribute path : roles.name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5280688]
2018-04-27 14:26:13 -Visiting attribute path : createDate
2018-04-27 14:26:13 -Visiting attribute path : department
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ab6521]
2018-04-27 14:26:13 -Visiting attribute path : email
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Visiting attribute path : password
2018-04-27 14:26:13 -Visiting attribute path : roles
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@328e4ec2]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7757025d]
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68fc9167]
2018-04-27 14:26:13 -Visiting attribute path : createDate
2018-04-27 14:26:13 -Visiting attribute path : department
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12fccff0]
2018-04-27 14:26:13 -Visiting attribute path : email
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Visiting attribute path : password
2018-04-27 14:26:13 -Visiting attribute path : roles
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d767218]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@510da778]
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a1b3ae]
2018-04-27 14:26:13 -Visiting attribute path : createDate
2018-04-27 14:26:13 -Visiting attribute path : department
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5e2525]
2018-04-27 14:26:13 -Visiting attribute path : email
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Visiting attribute path : password
2018-04-27 14:26:13 -Visiting attribute path : roles
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6546371]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b458cd6]
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c2c44e8]
2018-04-27 14:26:13 -Visiting attribute path : createDate
2018-04-27 14:26:13 -Visiting attribute path : department
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@227a933d]
2018-04-27 14:26:13 -Visiting attribute path : email
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Visiting attribute path : password
2018-04-27 14:26:13 -Visiting attribute path : roles
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25de8898]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bfb93cf]
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd737ea]
2018-04-27 14:26:13 -Visiting attribute path : createDate
2018-04-27 14:26:13 -Visiting attribute path : department
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a0963be]
2018-04-27 14:26:13 -Visiting attribute path : email
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Visiting attribute path : password
2018-04-27 14:26:13 -Visiting attribute path : roles
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d3bf8db]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e7e8f1]
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27bb4dc5]
2018-04-27 14:26:13 -Visiting attribute path : createDate
2018-04-27 14:26:13 -Visiting attribute path : department
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64910b2d]
2018-04-27 14:26:13 -Visiting attribute path : email
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Visiting attribute path : password
2018-04-27 14:26:13 -Visiting attribute path : roles
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1247c72e]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fef75c6]
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f61e002]
2018-04-27 14:26:13 -Visiting attribute path : createDate
2018-04-27 14:26:13 -Visiting attribute path : department
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f179f51]
2018-04-27 14:26:13 -Visiting attribute path : email
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Visiting attribute path : password
2018-04-27 14:26:13 -Visiting attribute path : roles
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b428830]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7308aa]
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42aa1324]
2018-04-27 14:26:13 -Visiting attribute path : createDate
2018-04-27 14:26:13 -Visiting attribute path : department
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ef8e623]
2018-04-27 14:26:13 -Visiting attribute path : email
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Visiting attribute path : password
2018-04-27 14:26:13 -Visiting attribute path : roles
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d8d970e]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fac80a8]
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6987a133]
2018-04-27 14:26:13 -Visiting attribute path : createDate
2018-04-27 14:26:13 -Visiting attribute path : department
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1934339]
2018-04-27 14:26:13 -Visiting attribute path : email
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Visiting attribute path : password
2018-04-27 14:26:13 -Visiting attribute path : roles
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4af12a63]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eab8437]
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:26:13 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:26:13 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:26:13 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6684f7f2]
2018-04-27 14:26:13 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1682e6a]
2018-04-27 14:26:13 -Visiting attribute path : name
2018-04-27 14:26:13 -Building LoadPlan...
2018-04-27 14:26:13 -processing queryspace <gen:0>
2018-04-27 14:26:13 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 14:26:13 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 14:26:13 -No alter strings for table : department
2018-04-27 14:26:13 -No alter strings for table : role
2018-04-27 14:26:13 -No alter strings for table : user
2018-04-27 14:26:13 -No alter strings for table : user_role
2018-04-27 14:26:13 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 14:26:13 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 14:26:13 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 14:26:13 -Checking 0 named HQL queries
2018-04-27 14:26:13 -Checking 0 named SQL queries
2018-04-27 14:26:13 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6aad919c
2018-04-27 14:26:13 -Registering SessionFactory: a776d4f1-fd94-4e43-b91c-6d5c474ef76c (<unnamed>)
2018-04-27 14:26:13 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 14:26:13 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:26:13 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:26:13 -init trackerLocator [192.168.71.161:22122]
2018-04-27 14:26:14 -Statistics initialized [enabled=false]
2018-04-27 14:26:14 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4c030fe1
2018-04-27 14:26:14 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 14:26:14 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 14:26:14 -throwQueryException() : no errors
2018-04-27 14:26:14 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 14:26:14 -select << begin [level=1, statement=select]
2018-04-27 14:26:14 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 14:26:14 -Resolved : t -> user0_.id
2018-04-27 14:26:14 -Resolved : t -> user0_.id
2018-04-27 14:26:14 -getDataType() : name -> org.hibernate.type.StringType@401c4250
2018-04-27 14:26:14 -Resolved : t.name -> user0_.name
2018-04-27 14:26:14 -select : finishing up [level=1, statement=select]
2018-04-27 14:26:14 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 14:26:14 -Using FROM fragment [user user0_]
2018-04-27 14:26:14 -select >> end [level=1, statement=select]
2018-04-27 14:26:14 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@401c4250}

2018-04-27 14:26:14 -throwQueryException() : no errors
2018-04-27 14:26:14 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 14:26:14 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 14:26:14 -throwQueryException() : no errors
2018-04-27 14:26:14 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 14:26:14 -throwQueryException() : no errors
2018-04-27 14:26:14 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 14:26:14 -select << begin [level=1, statement=select]
2018-04-27 14:26:14 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 14:26:14 -Resolved : t -> user0_.id
2018-04-27 14:26:14 -Resolved : t -> user0_.id
2018-04-27 14:26:14 -getDataType() : name -> org.hibernate.type.StringType@401c4250
2018-04-27 14:26:14 -Resolved : t.name -> user0_.name
2018-04-27 14:26:14 -Resolved : t -> user0_.id
2018-04-27 14:26:14 -getDataType() : email -> org.hibernate.type.StringType@401c4250
2018-04-27 14:26:14 -Resolved : t.email -> user0_.email
2018-04-27 14:26:14 -select : finishing up [level=1, statement=select]
2018-04-27 14:26:14 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 14:26:14 -Using FROM fragment [user user0_]
2018-04-27 14:26:14 -select >> end [level=1, statement=select]
2018-04-27 14:26:14 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@401c4250}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@401c4250}

2018-04-27 14:26:14 -throwQueryException() : no errors
2018-04-27 14:26:14 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 14:26:14 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 14:26:14 -throwQueryException() : no errors
2018-04-27 14:26:14 -Using SLF4J as the default logging framework
2018-04-27 14:26:14 --Dio.netty.eventLoopThreads: 4
2018-04-27 14:26:14 --Dio.netty.leakDetection.level: simple
2018-04-27 14:26:14 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 14:26:14 -Platform: Windows
2018-04-27 14:26:14 --Dio.netty.noUnsafe: false
2018-04-27 14:26:14 -Java version: 8
2018-04-27 14:26:14 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 14:26:14 -sun.misc.Unsafe.copyMemory: available
2018-04-27 14:26:14 -java.nio.Buffer.address: available
2018-04-27 14:26:14 -direct buffer constructor: available
2018-04-27 14:26:14 -java.nio.Bits.unaligned: available, true
2018-04-27 14:26:14 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 14:26:14 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 14:26:14 -sun.misc.Unsafe: available
2018-04-27 14:26:14 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 14:26:14 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 14:26:14 --Dio.netty.noPreferDirect: false
2018-04-27 14:26:14 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 14:26:14 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 14:26:14 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 14:26:14 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@136fece2
2018-04-27 14:26:14 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 14:26:14 -Using Slf4j logging framework
2018-04-27 14:26:15 -Starting UnsafeSupport init in Java 1.8
2018-04-27 14:26:15 -Unsafe is available
2018-04-27 14:26:15 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 14:26:15 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 14:26:15 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 14:26:15 --Dio.netty.allocator.pageSize: 8192
2018-04-27 14:26:15 --Dio.netty.allocator.maxOrder: 11
2018-04-27 14:26:15 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 14:26:15 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 14:26:15 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 14:26:15 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 14:26:15 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 14:26:15 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 14:26:15 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 14:26:15 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 14:26:15 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 14:26:15 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 14:26:15 -Neo4jMappingContext initialisation completed
2018-04-27 14:26:15 -Neo4jMappingContext initialisation completed
2018-04-27 14:26:16 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 14:26:16 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 14:26:16 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 14:26:16 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 14:26:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:26:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=8.2 ms, state=CONNECTED}]
2018-04-27 14:26:16 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 14:26:17 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 14:26:17 -Opened connection [connectionId{localValue:1, serverValue:29}] to 192.168.71.151:27017
2018-04-27 14:26:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:26:17 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3657781}
2018-04-27 14:26:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.7 ms, state=CONNECTED}]
2018-04-27 14:26:17 -Opened connection [connectionId{localValue:2, serverValue:30}] to 192.168.71.151:27017
2018-04-27 14:26:17 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:30}] to server 192.168.71.151:27017
2018-04-27 14:26:17 -Command execution completed
2018-04-27 14:26:17 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 14:26:17 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 14:26:17 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 14:26:17 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 14:26:17 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/file/upload/small],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.uploadAndCrtThumbImage(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/file/upload/small],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.uploadAndCrtThumbImage(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 14:26:17 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 14:26:17 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 14:26:17 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 14:26:17 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 14:26:17 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 14:26:17 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 14:26:17 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 14:26:17 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 14:26:17 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 14:26:17 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 14:26:17 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 14:26:17 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 14:26:17 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 14:26:17 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:26:17 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 14:26:17 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 14:26:17 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 14:26:17 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 14:26:17 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 14:26:17 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 14:26:17 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 14:26:17 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 14:26:17 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:26:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 14:26:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 14:26:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 14:26:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 14:26:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 14:26:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 14:26:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 14:26:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 14:26:17 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 14:26:17 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 14:26:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 14:26:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 14:26:18 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:26:18 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:26:18 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:26:18 -Loaded expression factory via original TCCL
2018-04-27 14:26:18 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:26:18 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:26:18 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:26:18 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 14:26:18 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 14:26:18 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 14:26:18 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 14:26:18 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 14:26:18 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 14:26:18 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 14:26:18 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 14:26:18 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 14:26:18 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 14:26:18 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 14:26:18 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 14:26:18 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 14:26:18 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@79dc5318: startup date [Fri Apr 27 14:26:07 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:26:18 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@79dc5318: startup date [Fri Apr 27 14:26:07 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:26:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:26:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:26:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:26:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:26:18 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 14:26:18 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 14:26:18 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:26:18 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:26:19 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 14:26:19 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 14:26:20 -Registering beans for JMX exposure on startup
2018-04-27 14:26:20 -Registering beans for JMX exposure on startup
2018-04-27 14:26:20 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 14:26:20 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 14:26:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 14:26:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 14:26:20 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 14:26:20 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 14:26:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 14:26:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 14:26:20 -Starting beans in phase 2147483647
2018-04-27 14:26:20 -Starting beans in phase 2147483647
2018-04-27 14:26:20 -Context refreshed
2018-04-27 14:26:20 -Context refreshed
2018-04-27 14:26:20 -Found 1 custom documentation plugin(s)
2018-04-27 14:26:20 -Found 1 custom documentation plugin(s)
2018-04-27 14:26:20 -Scanning for api listing references
2018-04-27 14:26:20 -Scanning for api listing references
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:20 -Generating unique operation named: updateUsingPOST_1
2018-04-27 14:26:20 -Generating unique operation named: updateUsingPOST_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: createUsingGET_1
2018-04-27 14:26:21 -Generating unique operation named: createUsingGET_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: createUsingHEAD_1
2018-04-27 14:26:21 -Generating unique operation named: createUsingHEAD_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: createUsingPOST_1
2018-04-27 14:26:21 -Generating unique operation named: createUsingPOST_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: createUsingPUT_1
2018-04-27 14:26:21 -Generating unique operation named: createUsingPUT_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: createUsingPATCH_1
2018-04-27 14:26:21 -Generating unique operation named: createUsingPATCH_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: createUsingDELETE_1
2018-04-27 14:26:21 -Generating unique operation named: createUsingDELETE_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 14:26:21 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: createUsingTRACE_1
2018-04-27 14:26:21 -Generating unique operation named: createUsingTRACE_1
2018-04-27 14:26:21 -Generating unique operation named: deleteUsingGET_1
2018-04-27 14:26:21 -Generating unique operation named: deleteUsingGET_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingGET_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingGET_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingHEAD_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingHEAD_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingPOST_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingPOST_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingPUT_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingPUT_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingPATCH_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingPATCH_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingDELETE_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingDELETE_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingTRACE_1
2018-04-27 14:26:21 -Generating unique operation named: listUsingTRACE_1
2018-04-27 14:26:21 -Generating unique operation named: saveUsingPOST_1
2018-04-27 14:26:21 -Generating unique operation named: saveUsingPOST_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: showUsingGET_1
2018-04-27 14:26:21 -Generating unique operation named: showUsingGET_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: showUsingHEAD_1
2018-04-27 14:26:21 -Generating unique operation named: showUsingHEAD_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: showUsingPOST_1
2018-04-27 14:26:21 -Generating unique operation named: showUsingPOST_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: showUsingPUT_1
2018-04-27 14:26:21 -Generating unique operation named: showUsingPUT_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: showUsingPATCH_1
2018-04-27 14:26:21 -Generating unique operation named: showUsingPATCH_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: showUsingDELETE_1
2018-04-27 14:26:21 -Generating unique operation named: showUsingDELETE_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 14:26:21 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: showUsingTRACE_1
2018-04-27 14:26:21 -Generating unique operation named: showUsingTRACE_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: updateUsingGET_1
2018-04-27 14:26:21 -Generating unique operation named: updateUsingGET_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 14:26:21 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: updateUsingPOST_2
2018-04-27 14:26:21 -Generating unique operation named: updateUsingPOST_2
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: updateUsingPUT_1
2018-04-27 14:26:21 -Generating unique operation named: updateUsingPUT_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 14:26:21 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 14:26:21 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 14:26:21 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:26:21 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 14:26:21 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 14:26:21 -Generating unique operation named: updateUsingPOST_3
2018-04-27 14:26:21 -Generating unique operation named: updateUsingPOST_3
2018-04-27 14:26:21 -Started FastdfsTests in 15.761 seconds (JVM running for 17.782)
2018-04-27 14:26:21 -获取到Tracker连接地址/192.168.71.161:22122
2018-04-27 14:26:21 -connect to /192.168.71.161:22122 soTimeout=1501 connectTimeout=601
2018-04-27 14:26:21 -对地址/192.168.71.161:22122发出交易请求TrackerGetFetchStorageCommand
2018-04-27 14:26:21 -Setting default value: false
2018-04-27 14:26:21 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 14:26:21 -    No conversion required, value is already a Boolean
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 14:26:21 -    Converted to Byte value '0'
2018-04-27 14:26:21 -Setting default value:  
2018-04-27 14:26:21 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 14:26:21 -    No conversion required, value is already a Character
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 14:26:21 -    Converted to Double value '0.0'
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 14:26:21 -    Converted to Float value '0.0'
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 14:26:21 -    No conversion required, value is already a Integer
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 14:26:21 -    Converted to Long value '0'
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 14:26:21 -    Converted to Short value '0'
2018-04-27 14:26:21 -Setting default value: 0.0
2018-04-27 14:26:21 -Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2018-04-27 14:26:21 -    No conversion required, value is already a BigDecimal
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'BigInteger' value '0' to type 'BigInteger'
2018-04-27 14:26:21 -    No conversion required, value is already a BigInteger
2018-04-27 14:26:21 -Setting default value: false
2018-04-27 14:26:21 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 14:26:21 -    No conversion required, value is already a Boolean
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 14:26:21 -    Converted to Byte value '0'
2018-04-27 14:26:21 -Setting default value:  
2018-04-27 14:26:21 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 14:26:21 -    No conversion required, value is already a Character
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 14:26:21 -    Converted to Double value '0.0'
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 14:26:21 -    Converted to Float value '0.0'
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 14:26:21 -    No conversion required, value is already a Integer
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 14:26:21 -    Converted to Long value '0'
2018-04-27 14:26:21 -Setting default value: 0
2018-04-27 14:26:21 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 14:26:21 -    Converted to Short value '0'
2018-04-27 14:26:21 -Setting default value: 
2018-04-27 14:26:21 -Converting 'String' value '' to type 'String'
2018-04-27 14:26:21 -Setting default value: [Z@6dcc7696
2018-04-27 14:26:21 -Converting 'boolean[]' value '[Z@6dcc7696' to type 'boolean[]'
2018-04-27 14:26:21 -    No conversion required, value is already a boolean[]
2018-04-27 14:26:21 -Setting default value: [B@45ac973
2018-04-27 14:26:21 -Converting 'byte[]' value '[B@45ac973' to type 'byte[]'
2018-04-27 14:26:21 -    No conversion required, value is already a byte[]
2018-04-27 14:26:21 -Setting default value: [C@28b7646
2018-04-27 14:26:21 -Converting 'char[]' value '[C@28b7646' to type 'char[]'
2018-04-27 14:26:21 -    No conversion required, value is already a char[]
2018-04-27 14:26:21 -Setting default value: [D@40239b34
2018-04-27 14:26:21 -Converting 'double[]' value '[D@40239b34' to type 'double[]'
2018-04-27 14:26:21 -    No conversion required, value is already a double[]
2018-04-27 14:26:21 -Setting default value: [F@4e553d60
2018-04-27 14:26:21 -Converting 'float[]' value '[F@4e553d60' to type 'float[]'
2018-04-27 14:26:21 -    No conversion required, value is already a float[]
2018-04-27 14:26:21 -Setting default value: [I@1c966488
2018-04-27 14:26:21 -Converting 'int[]' value '[I@1c966488' to type 'int[]'
2018-04-27 14:26:21 -    No conversion required, value is already a int[]
2018-04-27 14:26:21 -Setting default value: [J@45f6181a
2018-04-27 14:26:21 -Converting 'long[]' value '[J@45f6181a' to type 'long[]'
2018-04-27 14:26:21 -    No conversion required, value is already a long[]
2018-04-27 14:26:21 -Setting default value: [S@19d0d1ab
2018-04-27 14:26:21 -Converting 'short[]' value '[S@19d0d1ab' to type 'short[]'
2018-04-27 14:26:21 -    No conversion required, value is already a short[]
2018-04-27 14:26:21 -Setting default value: [Ljava.math.BigDecimal;@7e0941cc
2018-04-27 14:26:21 -Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@7e0941cc' to type 'BigDecimal[]'
2018-04-27 14:26:21 -    No conversion required, value is already a BigDecimal[]
2018-04-27 14:26:21 -Setting default value: [Ljava.math.BigInteger;@24d73c51
2018-04-27 14:26:21 -Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@24d73c51' to type 'BigInteger[]'
2018-04-27 14:26:21 -    No conversion required, value is already a BigInteger[]
2018-04-27 14:26:21 -Setting default value: [Ljava.lang.Boolean;@f26cd76
2018-04-27 14:26:21 -Converting 'Boolean[]' value '[Ljava.lang.Boolean;@f26cd76' to type 'Boolean[]'
2018-04-27 14:26:21 -    No conversion required, value is already a Boolean[]
2018-04-27 14:26:21 -Setting default value: [Ljava.lang.Byte;@78805df3
2018-04-27 14:26:21 -Converting 'Byte[]' value '[Ljava.lang.Byte;@78805df3' to type 'Byte[]'
2018-04-27 14:26:21 -    No conversion required, value is already a Byte[]
2018-04-27 14:26:21 -Setting default value: [Ljava.lang.Character;@65a8c306
2018-04-27 14:26:21 -Converting 'Character[]' value '[Ljava.lang.Character;@65a8c306' to type 'Character[]'
2018-04-27 14:26:21 -    No conversion required, value is already a Character[]
2018-04-27 14:26:21 -Setting default value: [Ljava.lang.Double;@71ce19ee
2018-04-27 14:26:21 -Converting 'Double[]' value '[Ljava.lang.Double;@71ce19ee' to type 'Double[]'
2018-04-27 14:26:21 -    No conversion required, value is already a Double[]
2018-04-27 14:26:21 -Setting default value: [Ljava.lang.Float;@48ba37dc
2018-04-27 14:26:21 -Converting 'Float[]' value '[Ljava.lang.Float;@48ba37dc' to type 'Float[]'
2018-04-27 14:26:21 -    No conversion required, value is already a Float[]
2018-04-27 14:26:21 -Setting default value: [Ljava.lang.Integer;@322f84fd
2018-04-27 14:26:21 -Converting 'Integer[]' value '[Ljava.lang.Integer;@322f84fd' to type 'Integer[]'
2018-04-27 14:26:21 -    No conversion required, value is already a Integer[]
2018-04-27 14:26:21 -Setting default value: [Ljava.lang.Long;@113cc14d
2018-04-27 14:26:21 -Converting 'Long[]' value '[Ljava.lang.Long;@113cc14d' to type 'Long[]'
2018-04-27 14:26:21 -    No conversion required, value is already a Long[]
2018-04-27 14:26:21 -Setting default value: [Ljava.lang.Short;@10bcbbed
2018-04-27 14:26:21 -Converting 'Short[]' value '[Ljava.lang.Short;@10bcbbed' to type 'Short[]'
2018-04-27 14:26:21 -    No conversion required, value is already a Short[]
2018-04-27 14:26:21 -Setting default value: [Ljava.lang.String;@9a16af1
2018-04-27 14:26:21 -Converting 'String[]' value '[Ljava.lang.String;@9a16af1' to type 'String[]'
2018-04-27 14:26:21 -    No conversion required, value is already a String[]
2018-04-27 14:26:21 -Setting default value: [Ljava.lang.Class;@47e70f54
2018-04-27 14:26:21 -Converting 'Class[]' value '[Ljava.lang.Class;@47e70f54' to type 'Class[]'
2018-04-27 14:26:21 -    No conversion required, value is already a Class[]
2018-04-27 14:26:21 -Setting default value: [Ljava.util.Date;@30a6984c
2018-04-27 14:26:21 -Converting 'Date[]' value '[Ljava.util.Date;@30a6984c' to type 'Date[]'
2018-04-27 14:26:21 -    No conversion required, value is already a Date[]
2018-04-27 14:26:21 -Setting default value: [Ljava.util.Calendar;@47c422d3
2018-04-27 14:26:21 -Converting 'Calendar[]' value '[Ljava.util.Calendar;@47c422d3' to type 'Calendar[]'
2018-04-27 14:26:21 -    No conversion required, value is already a Calendar[]
2018-04-27 14:26:21 -Setting default value: [Ljava.io.File;@3c468360
2018-04-27 14:26:21 -Converting 'java.io.File[]' value '[Ljava.io.File;@3c468360' to type 'java.io.File[]'
2018-04-27 14:26:21 -    No conversion required, value is already a java.io.File[]
2018-04-27 14:26:21 -Setting default value: [Ljava.sql.Date;@1e75bef1
2018-04-27 14:26:21 -Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@1e75bef1' to type 'java.sql.Date[]'
2018-04-27 14:26:21 -    No conversion required, value is already a java.sql.Date[]
2018-04-27 14:26:21 -Setting default value: [Ljava.sql.Time;@1e489957
2018-04-27 14:26:21 -Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@1e489957' to type 'java.sql.Time[]'
2018-04-27 14:26:21 -    No conversion required, value is already a java.sql.Time[]
2018-04-27 14:26:21 -Setting default value: [Ljava.sql.Timestamp;@5b827796
2018-04-27 14:26:21 -Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@5b827796' to type 'java.sql.Timestamp[]'
2018-04-27 14:26:21 -    No conversion required, value is already a java.sql.Timestamp[]
2018-04-27 14:26:21 -Setting default value: [Ljava.net.URL;@7d108063
2018-04-27 14:26:21 -Converting 'java.net.URL[]' value '[Ljava.net.URL;@7d108063' to type 'java.net.URL[]'
2018-04-27 14:26:21 -    No conversion required, value is already a java.net.URL[]
2018-04-27 14:26:21 -发出交易请求..报文头为ProtoHead [contentLength=60, cmd=102, status=0]
2018-04-27 14:26:21 -交易参数为[103, 114, 111, 117, 112, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 48, 48, 47, 48, 48, 47, 48, 48, 47, 119, 75, 104, 72, 110, 108, 114, 105, 103, 111, 67, 65, 80, 65, 56, 77, 65, 65, 68, 103, 57, 79, 83, 73, 112, 117, 111, 49, 57, 52, 46, 112, 110, 103]
2018-04-27 14:26:21 -服务端返回报文头ProtoHead [contentLength=39, cmd=100, status=0]
2018-04-27 14:26:21 -dump class=com.github.tobato.fastdfs.domain.StorageNodeInfo
2018-04-27 14:26:21 -----------------------------------------
2018-04-27 14:26:21 -FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]
2018-04-27 14:26:21 -FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]
2018-04-27 14:26:21 -FieldMateData [field=port, index=2, max=0, size=8, offsize=31]
2018-04-27 14:26:21 -设置值是 FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]group1
2018-04-27 14:26:21 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 14:26:21 -Converting 'String' value 'group1' to type 'String'
2018-04-27 14:26:21 -设置值是 FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]192.168.71.158
2018-04-27 14:26:21 -Convert string '192.168.71.158' to class 'java.lang.String'
2018-04-27 14:26:21 -Converting 'String' value '192.168.71.158' to type 'String'
2018-04-27 14:26:21 -设置值是 FieldMateData [field=port, index=2, max=0, size=8, offsize=31]23000
2018-04-27 14:26:21 -Converting 'Integer' value '23000' to type 'Integer'
2018-04-27 14:26:21 -    No conversion required, value is already a Integer
2018-04-27 14:26:21 -connect to /192.168.71.158:23000 soTimeout=1501 connectTimeout=601
2018-04-27 14:26:21 -对地址/192.168.71.158:23000发出交易请求StorageDownloadCommand
2018-04-27 14:26:21 -发出交易请求..报文头为ProtoHead [contentLength=76, cmd=14, status=0]
2018-04-27 14:26:21 -交易参数为[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 114, 111, 117, 112, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 48, 48, 47, 48, 48, 47, 48, 48, 47, 119, 75, 104, 72, 110, 108, 114, 105, 103, 111, 67, 65, 80, 65, 56, 77, 65, 65, 68, 103, 57, 79, 83, 73, 112, 117, 111, 49, 57, 52, 46, 112, 110, 103]
2018-04-27 14:26:21 -服务端返回报文头ProtoHead [contentLength=57588, cmd=100, status=0]
2018-04-27 14:26:21 -execute fdfs command error
java.lang.NullPointerException: null
	at com.github.tobato.fastdfs.proto.storage.internal.StorageDownloadResponse.decodeContent(StorageDownloadResponse.java:34)
	at com.github.tobato.fastdfs.proto.FdfsResponse.decode(FdfsResponse.java:54)
	at com.github.tobato.fastdfs.proto.AbstractFdfsCommand.receive(AbstractFdfsCommand.java:105)
	at com.github.tobato.fastdfs.proto.AbstractFdfsCommand.execute(AbstractFdfsCommand.java:45)
	at com.github.tobato.fastdfs.conn.ConnectionManager.execute(ConnectionManager.java:76)
	at com.github.tobato.fastdfs.conn.ConnectionManager.executeFdfsCmd(ConnectionManager.java:61)
	at com.github.tobato.fastdfs.service.DefaultGenerateStorageClient.downloadFile(DefaultGenerateStorageClient.java:141)
	at com.github.tobato.fastdfs.service.DefaultGenerateStorageClient.downloadFile(DefaultGenerateStorageClient.java:130)
	at com.example.ren.utils.FastdfsClient.downloadFile(FastdfsClient.java:85)
	at com.example.ren.fastdfs.FastdfsTests.downloadTest(FastdfsTests.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:237)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2018-04-27 14:26:21 -Closing org.springframework.web.context.support.GenericWebApplicationContext@79dc5318: startup date [Fri Apr 27 14:26:07 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:26:21 -Closing org.springframework.web.context.support.GenericWebApplicationContext@79dc5318: startup date [Fri Apr 27 14:26:07 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:26:21 -Stopping beans in phase 2147483647
2018-04-27 14:26:21 -Stopping beans in phase 2147483647
2018-04-27 14:26:21 -Unregistering JMX-exposed beans on shutdown
2018-04-27 14:26:21 -Unregistering JMX-exposed beans on shutdown
2018-04-27 14:26:21 -Unregistering JMX-exposed beans
2018-04-27 14:26:21 -Unregistering JMX-exposed beans
2018-04-27 14:26:21 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 14:26:21 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 14:26:21 -disconnect from Socket[addr=/192.168.71.161,port=22122,localport=59501]
2018-04-27 14:26:21 -disconnect from Socket[addr=/192.168.71.158,port=23000,localport=59502]
2018-04-27 14:26:21 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:26:21 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:26:21 -HHH000031: Closing
2018-04-27 14:26:21 -External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
2018-04-27 14:26:21 -Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2018-04-27 14:26:21 -Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2018-04-27 14:26:21 -{dataSource-1} closed
2018-04-27 14:26:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:26:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.8 ms, state=CONNECTED}]
2018-04-27 14:26:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:26:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.6 ms, state=CONNECTED}]
2018-04-27 14:26:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:26:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.7 ms, state=CONNECTED}]
2018-04-27 14:26:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:26:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.0 ms, state=CONNECTED}]
2018-04-27 14:27:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:27:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.4 ms, state=CONNECTED}]
2018-04-27 14:27:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:27:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 14:27:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:27:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2018-04-27 14:27:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:27:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 14:27:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:27:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 14:27:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:27:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 14:28:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:28:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 14:28:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:28:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 14:28:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:28:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 14:28:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:28:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 14:28:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:28:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 14:28:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:28:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 14:29:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:29:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:29:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:29:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:29:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:29:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:29:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:29:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.8 ms, state=CONNECTED}]
2018-04-27 14:29:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:29:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 14:29:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:29:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 14:30:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:30:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 14:30:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:30:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 14:30:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:30:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 14:30:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:30:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:30:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:30:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:30:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:30:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:31:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:31:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:31:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:31:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:31:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:31:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:31:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:31:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:31:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:31:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:31:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:31:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:32:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:32:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:32:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:32:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:32:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:32:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:32:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:32:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:32:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:32:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:32:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:32:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:33:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:33:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:33:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:33:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:33:23 -Loaded expression factory via original TCCL
2018-04-27 14:33:23 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 14:33:23 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 14:33:23 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 14:33:23 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 14:33:23 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 14:33:23 -Starting FastdfsTests on DESKTOP-4VE2VST with PID 18252 (started by Qiang in Y:\MyGit\demo)
2018-04-27 14:33:23 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 14:33:23 -The following profiles are active: dev
2018-04-27 14:33:23 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7a9c84a5: startup date [Fri Apr 27 14:33:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:33:23 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7a9c84a5: startup date [Fri Apr 27 14:33:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:33:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:33:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:33:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:33:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:33:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:33:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:33:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:33:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:33:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:33:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:33:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:33:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:33:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:33:26 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:33:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:33:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 14:33:26 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 14:33:26 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:33:26 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:33:26 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:33:26 -Loaded expression factory via original TCCL
2018-04-27 14:33:26 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:33:26 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:33:26 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:33:26 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 14:33:26 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 14:33:26 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 14:33:26 -Checking status of 192.168.71.151:27017
2018-04-27 14:33:26 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:33:27 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 14:33:27 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 14:33:27 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 14:33:27 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 14:33:27 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 14:33:27 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 14:33:27 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 14:33:27 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 14:33:27 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 14:33:27 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 14:33:27 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$a3efc211] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$a3efc211] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c0d85a95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c0d85a95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$94b2ada1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$94b2ada1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 14:33:27 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 14:33:27 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 14:33:27 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 14:33:27 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 14:33:27 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 14:33:27 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 14:33:27 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 14:33:27 -Starting Post-processing phase
2018-04-27 14:33:27 -Building annotation class map
2018-04-27 14:33:27 -Building interface class map for 8 classes
2018-04-27 14:33:27 - - Actor implements 0 interfaces
2018-04-27 14:33:27 - - Role implements 1 interfaces
2018-04-27 14:33:27 -   - java.io.Serializable
2018-04-27 14:33:27 - - MongoUser implements 0 interfaces
2018-04-27 14:33:27 - - Role implements 0 interfaces
2018-04-27 14:33:27 - - Movie implements 0 interfaces
2018-04-27 14:33:27 - - Department implements 0 interfaces
2018-04-27 14:33:27 - - BookBean implements 0 interfaces
2018-04-27 14:33:27 - - User implements 1 interfaces
2018-04-27 14:33:27 -   - java.io.Serializable
2018-04-27 14:33:27 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 14:33:27 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 14:33:27 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 14:33:27 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 14:33:27 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 14:33:27 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 14:33:27 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 14:33:27 -Post-processing: com.example.ren.model.BookBean
2018-04-27 14:33:27 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 14:33:27 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 14:33:27 -Checking for @Transient classes....
2018-04-27 14:33:27 -Registering converters and deregistering transient fields and methods....
2018-04-27 14:33:27 -Post-processing complete
2018-04-27 14:33:27 -Building Index Metadata.
2018-04-27 14:33:27 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:27 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:33:28 -{dataSource-1} inited
2018-04-27 14:33:28 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 14:33:28 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 14:33:28 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 14:33:27",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:389464548, ConnectTime:"2018-04-27 14:33:28", UseCount:1, LastActiveTime:"2018-04-27 14:33:28"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 14:33:28 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 14:33:28 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 14:33:28 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 14:33:28 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 14:33:28 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 14:33:28 -HHH000206: hibernate.properties not found
2018-04-27 14:33:28 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 14:33:28 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 14:33:29 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 14:33:29 -Adding type registration boolean -> org.hibernate.type.BooleanType@618f627b
2018-04-27 14:33:29 -Adding type registration boolean -> org.hibernate.type.BooleanType@618f627b
2018-04-27 14:33:29 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@618f627b
2018-04-27 14:33:29 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@70d5d96b
2018-04-27 14:33:29 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@580c17a0
2018-04-27 14:33:29 -Adding type registration yes_no -> org.hibernate.type.YesNoType@2bc0b8c8
2018-04-27 14:33:29 -Adding type registration byte -> org.hibernate.type.ByteType@365bfc5f
2018-04-27 14:33:29 -Adding type registration byte -> org.hibernate.type.ByteType@365bfc5f
2018-04-27 14:33:29 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@365bfc5f
2018-04-27 14:33:29 -Adding type registration character -> org.hibernate.type.CharacterType@75452aea
2018-04-27 14:33:29 -Adding type registration char -> org.hibernate.type.CharacterType@75452aea
2018-04-27 14:33:29 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@75452aea
2018-04-27 14:33:29 -Adding type registration short -> org.hibernate.type.ShortType@58b8f9e3
2018-04-27 14:33:29 -Adding type registration short -> org.hibernate.type.ShortType@58b8f9e3
2018-04-27 14:33:29 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58b8f9e3
2018-04-27 14:33:29 -Adding type registration integer -> org.hibernate.type.IntegerType@ba562e0
2018-04-27 14:33:29 -Adding type registration int -> org.hibernate.type.IntegerType@ba562e0
2018-04-27 14:33:29 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ba562e0
2018-04-27 14:33:29 -Adding type registration long -> org.hibernate.type.LongType@53ba7997
2018-04-27 14:33:29 -Adding type registration long -> org.hibernate.type.LongType@53ba7997
2018-04-27 14:33:29 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@53ba7997
2018-04-27 14:33:29 -Adding type registration float -> org.hibernate.type.FloatType@6c421123
2018-04-27 14:33:29 -Adding type registration float -> org.hibernate.type.FloatType@6c421123
2018-04-27 14:33:29 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6c421123
2018-04-27 14:33:29 -Adding type registration double -> org.hibernate.type.DoubleType@59a94d0f
2018-04-27 14:33:29 -Adding type registration double -> org.hibernate.type.DoubleType@59a94d0f
2018-04-27 14:33:29 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a94d0f
2018-04-27 14:33:29 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a6f6cac
2018-04-27 14:33:29 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a6f6cac
2018-04-27 14:33:29 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7d3c22a5
2018-04-27 14:33:29 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7d3c22a5
2018-04-27 14:33:29 -Adding type registration string -> org.hibernate.type.StringType@71e7830a
2018-04-27 14:33:29 -Adding type registration java.lang.String -> org.hibernate.type.StringType@71e7830a
2018-04-27 14:33:29 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@621dc63d
2018-04-27 14:33:29 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2b5f8e61
2018-04-27 14:33:29 -Adding type registration url -> org.hibernate.type.UrlType@7f2c995b
2018-04-27 14:33:29 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@7f2c995b
2018-04-27 14:33:29 -Adding type registration Duration -> org.hibernate.type.DurationType@6fbe4800
2018-04-27 14:33:29 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6fbe4800
2018-04-27 14:33:29 -Adding type registration Instant -> org.hibernate.type.InstantType@52285a5f
2018-04-27 14:33:29 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@52285a5f
2018-04-27 14:33:29 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c9e19de
2018-04-27 14:33:29 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c9e19de
2018-04-27 14:33:29 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@632d4cf2
2018-04-27 14:33:29 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@632d4cf2
2018-04-27 14:33:29 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@645ba24a
2018-04-27 14:33:29 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@645ba24a
2018-04-27 14:33:29 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72f3f14c
2018-04-27 14:33:29 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72f3f14c
2018-04-27 14:33:29 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@280ecc33
2018-04-27 14:33:29 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@280ecc33
2018-04-27 14:33:29 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@65af05b2
2018-04-27 14:33:29 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@65af05b2
2018-04-27 14:33:29 -Adding type registration date -> org.hibernate.type.DateType@410382cb
2018-04-27 14:33:29 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@410382cb
2018-04-27 14:33:29 -Adding type registration time -> org.hibernate.type.TimeType@a0d875d
2018-04-27 14:33:29 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a0d875d
2018-04-27 14:33:29 -Adding type registration timestamp -> org.hibernate.type.TimestampType@1ba35152
2018-04-27 14:33:29 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ba35152
2018-04-27 14:33:29 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ba35152
2018-04-27 14:33:29 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@54275b5d
2018-04-27 14:33:29 -Adding type registration calendar -> org.hibernate.type.CalendarType@16ccd2bc
2018-04-27 14:33:29 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16ccd2bc
2018-04-27 14:33:29 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16ccd2bc
2018-04-27 14:33:29 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5613247e
2018-04-27 14:33:29 -Adding type registration locale -> org.hibernate.type.LocaleType@4cd7e993
2018-04-27 14:33:29 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4cd7e993
2018-04-27 14:33:29 -Adding type registration currency -> org.hibernate.type.CurrencyType@ff5d4f1
2018-04-27 14:33:29 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ff5d4f1
2018-04-27 14:33:29 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@b0d3e7
2018-04-27 14:33:29 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@b0d3e7
2018-04-27 14:33:29 -Adding type registration class -> org.hibernate.type.ClassType@5c4714ef
2018-04-27 14:33:29 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5c4714ef
2018-04-27 14:33:29 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6076c66
2018-04-27 14:33:29 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6076c66
2018-04-27 14:33:29 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4ffa7041
2018-04-27 14:33:29 -Adding type registration binary -> org.hibernate.type.BinaryType@48277712
2018-04-27 14:33:29 -Adding type registration byte[] -> org.hibernate.type.BinaryType@48277712
2018-04-27 14:33:29 -Adding type registration [B -> org.hibernate.type.BinaryType@48277712
2018-04-27 14:33:29 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3de8f85c
2018-04-27 14:33:29 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3de8f85c
2018-04-27 14:33:29 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3de8f85c
2018-04-27 14:33:29 -Adding type registration row_version -> org.hibernate.type.RowVersionType@1d3a03fe
2018-04-27 14:33:29 -Adding type registration image -> org.hibernate.type.ImageType@4809c771
2018-04-27 14:33:29 -Adding type registration characters -> org.hibernate.type.CharArrayType@1857fe6c
2018-04-27 14:33:29 -Adding type registration char[] -> org.hibernate.type.CharArrayType@1857fe6c
2018-04-27 14:33:29 -Adding type registration [C -> org.hibernate.type.CharArrayType@1857fe6c
2018-04-27 14:33:29 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4e2109fe
2018-04-27 14:33:29 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4e2109fe
2018-04-27 14:33:29 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4e2109fe
2018-04-27 14:33:29 -Adding type registration text -> org.hibernate.type.TextType@362a6aa5
2018-04-27 14:33:29 -Adding type registration ntext -> org.hibernate.type.NTextType@687b0ddc
2018-04-27 14:33:29 -Adding type registration blob -> org.hibernate.type.BlobType@cf10c92
2018-04-27 14:33:29 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@cf10c92
2018-04-27 14:33:29 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@191e654
2018-04-27 14:33:29 -Adding type registration clob -> org.hibernate.type.ClobType@7db47323
2018-04-27 14:33:29 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7db47323
2018-04-27 14:33:29 -Adding type registration nclob -> org.hibernate.type.NClobType@b86cb18
2018-04-27 14:33:29 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b86cb18
2018-04-27 14:33:29 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4404a6b
2018-04-27 14:33:29 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6e7e0259
2018-04-27 14:33:29 -Adding type registration serializable -> org.hibernate.type.SerializableType@478530cb
2018-04-27 14:33:29 -Adding type registration object -> org.hibernate.type.ObjectType@574ebdaf
2018-04-27 14:33:29 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@574ebdaf
2018-04-27 14:33:29 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@54daf8f9
2018-04-27 14:33:29 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d4d65f5
2018-04-27 14:33:29 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@38cf3ae1
2018-04-27 14:33:29 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@123ca460
2018-04-27 14:33:29 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11228bee
2018-04-27 14:33:29 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7d626f2
2018-04-27 14:33:29 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@460f1cdb
2018-04-27 14:33:29 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@31e7afde
2018-04-27 14:33:29 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 14:33:29 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 14:33:29 -JDBC version : 4.0
2018-04-27 14:33:29 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 14:33:29 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 14:33:29 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 14:33:30 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 14:33:30 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 14:33:30 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 14:33:30 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 14:33:30 -Import with entity name Department
2018-04-27 14:33:30 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -MetadataSourceProcessor property id with lazy=false
2018-04-27 14:33:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 14:33:30 -building SimpleValue for id
2018-04-27 14:33:30 -Building property id
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -MetadataSourceProcessor property name with lazy=false
2018-04-27 14:33:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 14:33:30 -building SimpleValue for name
2018-04-27 14:33:30 -Building property name
2018-04-27 14:33:30 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 14:33:30 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 14:33:30 -Import with entity name Role
2018-04-27 14:33:30 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -MetadataSourceProcessor property id with lazy=false
2018-04-27 14:33:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 14:33:30 -building SimpleValue for id
2018-04-27 14:33:30 -Building property id
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -MetadataSourceProcessor property name with lazy=false
2018-04-27 14:33:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 14:33:30 -building SimpleValue for name
2018-04-27 14:33:30 -Building property name
2018-04-27 14:33:30 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 14:33:30 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 14:33:30 -Import with entity name User
2018-04-27 14:33:30 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -MetadataSourceProcessor property id with lazy=false
2018-04-27 14:33:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 14:33:30 -building SimpleValue for id
2018-04-27 14:33:30 -Building property id
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 14:33:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 14:33:30 -building SimpleValue for createDate
2018-04-27 14:33:30 -Building property createDate
2018-04-27 14:33:30 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -Building property department
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -MetadataSourceProcessor property email with lazy=false
2018-04-27 14:33:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 14:33:30 -building SimpleValue for email
2018-04-27 14:33:30 -Building property email
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -MetadataSourceProcessor property name with lazy=false
2018-04-27 14:33:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 14:33:30 -building SimpleValue for name
2018-04-27 14:33:30 -Building property name
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -MetadataSourceProcessor property password with lazy=false
2018-04-27 14:33:30 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 14:33:30 -building SimpleValue for password
2018-04-27 14:33:30 -Building property password
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 14:33:30 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 14:33:30 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 14:33:30 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 14:33:30 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 14:33:30 -Building property roles
2018-04-27 14:33:30 -Starting fillSimpleValue for id
2018-04-27 14:33:30 -Starting fillSimpleValue for name
2018-04-27 14:33:30 -Starting fillSimpleValue for id
2018-04-27 14:33:30 -Starting fillSimpleValue for name
2018-04-27 14:33:30 -Starting fillSimpleValue for id
2018-04-27 14:33:30 -Starting fillSimpleValue for createDate
2018-04-27 14:33:30 -Starting fillSimpleValue for email
2018-04-27 14:33:30 -Starting fillSimpleValue for name
2018-04-27 14:33:30 -Starting fillSimpleValue for password
2018-04-27 14:33:30 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 14:33:30 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 14:33:30 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 14:33:30 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 14:33:30 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 14:33:30 -Mapped collection key: user_id, element: role_id
2018-04-27 14:33:30 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 14:33:30 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 14:33:30 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 14:33:30 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 14:33:30 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 14:33:30 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 14:33:30 -Building session factory
2018-04-27 14:33:30 -SessionFactory name : null
2018-04-27 14:33:30 -Automatic flush during beforeCompletion(): enabled
2018-04-27 14:33:30 -Automatic session close at end of transaction: disabled
2018-04-27 14:33:30 -Statistics: disabled
2018-04-27 14:33:30 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 14:33:30 -Default entity-mode: pojo
2018-04-27 14:33:30 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 14:33:30 -Allow initialization of lazy state outside session : disabled
2018-04-27 14:33:30 -Using BatchFetchStyle : LEGACY
2018-04-27 14:33:30 -Default batch fetch size: -1
2018-04-27 14:33:30 -Maximum outer join fetch depth: 2
2018-04-27 14:33:30 -Default null ordering: NONE
2018-04-27 14:33:30 -Order SQL updates by primary key: disabled
2018-04-27 14:33:30 -Order SQL inserts for batching: disabled
2018-04-27 14:33:30 -multi-tenancy strategy : NONE
2018-04-27 14:33:30 -JTA Track by Thread: enabled
2018-04-27 14:33:30 -Query language substitutions: {}
2018-04-27 14:33:30 -JPA query language strict compliance: disabled
2018-04-27 14:33:30 -Named query checking : enabled
2018-04-27 14:33:30 -Second-level cache: enabled
2018-04-27 14:33:30 -Second-level query cache: disabled
2018-04-27 14:33:30 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5fb514c2
2018-04-27 14:33:30 -Second-level cache region prefix: null
2018-04-27 14:33:30 -Optimize second-level cache for minimal puts: disabled
2018-04-27 14:33:30 -Structured second-level cache entries: disabled
2018-04-27 14:33:30 -Second-level cache direct-reference entries: disabled
2018-04-27 14:33:30 -Automatic eviction of collection cache: disabled
2018-04-27 14:33:30 -JDBC batch size: 15
2018-04-27 14:33:30 -JDBC batch updates for versioned data: enabled
2018-04-27 14:33:30 -Scrollable result sets: enabled
2018-04-27 14:33:30 -Wrap result sets: disabled
2018-04-27 14:33:30 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 14:33:30 -JDBC result set fetch size: null
2018-04-27 14:33:30 -Connection release mode: ON_CLOSE
2018-04-27 14:33:30 -Generate SQL with comments: disabled
2018-04-27 14:33:30 -Session factory constructed with filter configurations : {}
2018-04-27 14:33:30 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\test-classes;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-test\2.0.0.RELEASE\spring-boot-starter-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test\2.0.0.RELEASE\spring-boot-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.0.0.RELEASE\spring-boot-test-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;X:\Maven\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;X:\Maven\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;X:\Maven\repository\org\assertj\assertj-core\3.9.1\assertj-core-3.9.1.jar;X:\Maven\repository\org\mockito\mockito-core\2.15.0\mockito-core-2.15.0.jar;X:\Maven\repository\net\bytebuddy\byte-buddy\1.7.10\byte-buddy-1.7.10.jar;X:\Maven\repository\net\bytebuddy\byte-buddy-agent\1.7.10\byte-buddy-agent-1.7.10.jar;X:\Maven\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;X:\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;X:\Maven\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;X:\Maven\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;X:\Maven\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;X:\Maven\repository\org\xmlunit\xmlunit-core\2.5.1\xmlunit-core-2.5.1.jar;X:\Maven\repository\org\springframework\spring-test\4.3.6.RELEASE\spring-test-4.3.6.RELEASE.jar;X:\Maven\repository\junit\junit\4.12\junit-4.12.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 com.example.ren.fastdfs.FastdfsTests,downloadTest, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@644b68ad, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=18252, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1939a394, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 14:33:27",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:389464548, ConnectTime:"2018-04-27 14:33:28", UseCount:2, LastActiveTime:"2018-04-27 14:33:29"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 14:33:30 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:33:30 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:33:30 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:33:30 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 14:33:30 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 14:33:30 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 14:33:30 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 14:33:30 -Loaded expression factory via original TCCL
2018-04-27 14:33:30 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 14:33:30 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 14:33:30 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 14:33:30 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 14:33:30 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 14:33:30 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 14:33:30 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 14:33:31 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 14:33:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 14:33:31 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 14:33:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 14:33:31 -Skipping JACC integration as it was not enabled
2018-04-27 14:33:31 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 14:33:31 -Instantiated session factory
2018-04-27 14:33:31 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 14:33:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 14:33:31 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 14:33:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 14:33:31 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 14:33:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 14:33:31 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 14:33:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 14:33:31 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 14:33:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 14:33:31 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 14:33:31 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 14:33:31 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 14:33:31 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 14:33:31 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 14:33:31 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 14:33:31 - One-shot delete: delete from user_role where user_id=?
2018-04-27 14:33:31 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 14:33:31 - Version select: select id from role where id =?
2018-04-27 14:33:31 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 14:33:31 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 14:33:31 - Update 0: update role set name=? where id=?
2018-04-27 14:33:31 - Delete 0: delete from role where id=?
2018-04-27 14:33:31 - Identity insert: insert into role (name) values (?)
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fdaef04]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54d35ed5]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45abbd24]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5059d398]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@434ee422]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53b2e1eb]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d008e61]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5de243bb]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35260785]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39685204]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77cf329d]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:33:31 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:33:31 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:33:31 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 14:33:31 - Version select: select id from department where id =?
2018-04-27 14:33:31 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 14:33:31 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 14:33:31 - Update 0: update department set name=? where id=?
2018-04-27 14:33:31 - Delete 0: delete from department where id=?
2018-04-27 14:33:31 - Identity insert: insert into department (name) values (?)
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f60e66a]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1136122a]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72288480]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f22c1f1]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@185a0811]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e2f6a45]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c19769c]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36453773]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6abb44cb]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e3cb58e]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28d56028]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:33:31 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:33:31 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:33:31 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 14:33:31 - Version select: select id from user where id =?
2018-04-27 14:33:31 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 14:33:31 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 14:33:31 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 14:33:31 - Delete 0: delete from user where id=?
2018-04-27 14:33:31 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6109d880]
2018-04-27 14:33:31 -Visiting attribute path : createDate
2018-04-27 14:33:31 -Visiting attribute path : department
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fd4e67f]
2018-04-27 14:33:31 -Visiting attribute path : department.name
2018-04-27 14:33:31 -Visiting attribute path : email
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Visiting attribute path : password
2018-04-27 14:33:31 -Visiting attribute path : roles
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1293f8d7]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ab85862]
2018-04-27 14:33:31 -Visiting attribute path : roles.name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@776d8097]
2018-04-27 14:33:31 -Visiting attribute path : createDate
2018-04-27 14:33:31 -Visiting attribute path : department
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b787274]
2018-04-27 14:33:31 -Visiting attribute path : department.name
2018-04-27 14:33:31 -Visiting attribute path : email
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Visiting attribute path : password
2018-04-27 14:33:31 -Visiting attribute path : roles
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55b45ea1]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d5a72cd]
2018-04-27 14:33:31 -Visiting attribute path : roles.name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c418496]
2018-04-27 14:33:31 -Visiting attribute path : createDate
2018-04-27 14:33:31 -Visiting attribute path : department
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1df32c09]
2018-04-27 14:33:31 -Visiting attribute path : email
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Visiting attribute path : password
2018-04-27 14:33:31 -Visiting attribute path : roles
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1aa31454]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8656a2]
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52035328]
2018-04-27 14:33:31 -Visiting attribute path : createDate
2018-04-27 14:33:31 -Visiting attribute path : department
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54970127]
2018-04-27 14:33:31 -Visiting attribute path : email
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Visiting attribute path : password
2018-04-27 14:33:31 -Visiting attribute path : roles
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c4c7e51]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749ee0e3]
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7891cf3]
2018-04-27 14:33:31 -Visiting attribute path : createDate
2018-04-27 14:33:31 -Visiting attribute path : department
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@349aeec4]
2018-04-27 14:33:31 -Visiting attribute path : email
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Visiting attribute path : password
2018-04-27 14:33:31 -Visiting attribute path : roles
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3700994c]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a165db]
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eb48298]
2018-04-27 14:33:31 -Visiting attribute path : createDate
2018-04-27 14:33:31 -Visiting attribute path : department
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e429f56]
2018-04-27 14:33:31 -Visiting attribute path : email
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Visiting attribute path : password
2018-04-27 14:33:31 -Visiting attribute path : roles
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6dbeaef8]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7744195]
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77f529a6]
2018-04-27 14:33:31 -Visiting attribute path : createDate
2018-04-27 14:33:31 -Visiting attribute path : department
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6516181f]
2018-04-27 14:33:31 -Visiting attribute path : email
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Visiting attribute path : password
2018-04-27 14:33:31 -Visiting attribute path : roles
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40cb95c1]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ead3c67]
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e2b512b]
2018-04-27 14:33:31 -Visiting attribute path : createDate
2018-04-27 14:33:31 -Visiting attribute path : department
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d19538]
2018-04-27 14:33:31 -Visiting attribute path : email
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Visiting attribute path : password
2018-04-27 14:33:31 -Visiting attribute path : roles
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6068cda1]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@644e6a8e]
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ccecae2]
2018-04-27 14:33:31 -Visiting attribute path : createDate
2018-04-27 14:33:31 -Visiting attribute path : department
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@118e2487]
2018-04-27 14:33:31 -Visiting attribute path : email
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Visiting attribute path : password
2018-04-27 14:33:31 -Visiting attribute path : roles
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6032622]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc075da]
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4258106]
2018-04-27 14:33:31 -Visiting attribute path : createDate
2018-04-27 14:33:31 -Visiting attribute path : department
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b423f90]
2018-04-27 14:33:31 -Visiting attribute path : email
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Visiting attribute path : password
2018-04-27 14:33:31 -Visiting attribute path : roles
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24f3fb87]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c7673ae]
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@113c4ad6]
2018-04-27 14:33:31 -Visiting attribute path : createDate
2018-04-27 14:33:31 -Visiting attribute path : department
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40fcaae7]
2018-04-27 14:33:31 -Visiting attribute path : email
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Visiting attribute path : password
2018-04-27 14:33:31 -Visiting attribute path : roles
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fa85a55]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cb1c58c]
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:33:31 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:33:31 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:33:31 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7097d921]
2018-04-27 14:33:31 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a21cbe7]
2018-04-27 14:33:31 -Visiting attribute path : name
2018-04-27 14:33:31 -Building LoadPlan...
2018-04-27 14:33:31 -processing queryspace <gen:0>
2018-04-27 14:33:31 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 14:33:31 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 14:33:31 -No alter strings for table : department
2018-04-27 14:33:31 -No alter strings for table : role
2018-04-27 14:33:31 -No alter strings for table : user
2018-04-27 14:33:31 -No alter strings for table : user_role
2018-04-27 14:33:31 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 14:33:31 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 14:33:31 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 14:33:31 -Checking 0 named HQL queries
2018-04-27 14:33:31 -Checking 0 named SQL queries
2018-04-27 14:33:31 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4fa6fb7f
2018-04-27 14:33:31 -Registering SessionFactory: a4e1ac21-b088-4db8-9304-db3d2c1f7fa0 (<unnamed>)
2018-04-27 14:33:31 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 14:33:31 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:33:31 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:33:31 -init trackerLocator [192.168.71.161:22122]
2018-04-27 14:33:32 -Statistics initialized [enabled=false]
2018-04-27 14:33:32 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7d15c513
2018-04-27 14:33:32 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 14:33:32 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 14:33:32 -throwQueryException() : no errors
2018-04-27 14:33:32 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 14:33:32 -select << begin [level=1, statement=select]
2018-04-27 14:33:32 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 14:33:32 -Resolved : t -> user0_.id
2018-04-27 14:33:32 -Resolved : t -> user0_.id
2018-04-27 14:33:32 -getDataType() : name -> org.hibernate.type.StringType@71e7830a
2018-04-27 14:33:32 -Resolved : t.name -> user0_.name
2018-04-27 14:33:32 -select : finishing up [level=1, statement=select]
2018-04-27 14:33:32 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 14:33:32 -Using FROM fragment [user user0_]
2018-04-27 14:33:32 -select >> end [level=1, statement=select]
2018-04-27 14:33:32 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@71e7830a}

2018-04-27 14:33:32 -throwQueryException() : no errors
2018-04-27 14:33:32 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 14:33:32 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 14:33:32 -throwQueryException() : no errors
2018-04-27 14:33:32 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 14:33:32 -throwQueryException() : no errors
2018-04-27 14:33:32 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 14:33:32 -select << begin [level=1, statement=select]
2018-04-27 14:33:32 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 14:33:32 -Resolved : t -> user0_.id
2018-04-27 14:33:32 -Resolved : t -> user0_.id
2018-04-27 14:33:32 -getDataType() : name -> org.hibernate.type.StringType@71e7830a
2018-04-27 14:33:32 -Resolved : t.name -> user0_.name
2018-04-27 14:33:32 -Resolved : t -> user0_.id
2018-04-27 14:33:32 -getDataType() : email -> org.hibernate.type.StringType@71e7830a
2018-04-27 14:33:32 -Resolved : t.email -> user0_.email
2018-04-27 14:33:32 -select : finishing up [level=1, statement=select]
2018-04-27 14:33:32 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 14:33:32 -Using FROM fragment [user user0_]
2018-04-27 14:33:32 -select >> end [level=1, statement=select]
2018-04-27 14:33:32 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@71e7830a}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@71e7830a}

2018-04-27 14:33:32 -throwQueryException() : no errors
2018-04-27 14:33:32 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 14:33:32 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 14:33:32 -throwQueryException() : no errors
2018-04-27 14:33:32 -Using SLF4J as the default logging framework
2018-04-27 14:33:32 --Dio.netty.eventLoopThreads: 4
2018-04-27 14:33:32 --Dio.netty.leakDetection.level: simple
2018-04-27 14:33:32 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 14:33:32 -Platform: Windows
2018-04-27 14:33:32 --Dio.netty.noUnsafe: false
2018-04-27 14:33:32 -Java version: 8
2018-04-27 14:33:32 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 14:33:32 -sun.misc.Unsafe.copyMemory: available
2018-04-27 14:33:32 -java.nio.Buffer.address: available
2018-04-27 14:33:32 -direct buffer constructor: available
2018-04-27 14:33:32 -java.nio.Bits.unaligned: available, true
2018-04-27 14:33:32 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 14:33:32 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 14:33:32 -sun.misc.Unsafe: available
2018-04-27 14:33:32 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 14:33:32 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 14:33:32 --Dio.netty.noPreferDirect: false
2018-04-27 14:33:32 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 14:33:32 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 14:33:32 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 14:33:32 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@43201f84
2018-04-27 14:33:32 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 14:33:32 -Using Slf4j logging framework
2018-04-27 14:33:32 -Starting UnsafeSupport init in Java 1.8
2018-04-27 14:33:32 -Unsafe is available
2018-04-27 14:33:32 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 14:33:33 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 14:33:33 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 14:33:33 --Dio.netty.allocator.pageSize: 8192
2018-04-27 14:33:33 --Dio.netty.allocator.maxOrder: 11
2018-04-27 14:33:33 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 14:33:33 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 14:33:33 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 14:33:33 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 14:33:33 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 14:33:33 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 14:33:33 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 14:33:33 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 14:33:33 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 14:33:33 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 14:33:33 -Neo4jMappingContext initialisation completed
2018-04-27 14:33:33 -Neo4jMappingContext initialisation completed
2018-04-27 14:33:34 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 14:33:34 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 14:33:34 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 14:33:34 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 14:33:35 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 14:33:35 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 14:33:35 -Opened connection [connectionId{localValue:1, serverValue:31}] to 192.168.71.151:27017
2018-04-27 14:33:35 -Checking status of 192.168.71.151:27017
2018-04-27 14:33:35 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4772449}
2018-04-27 14:33:35 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.8 ms, state=CONNECTED}]
2018-04-27 14:33:35 -Opened connection [connectionId{localValue:2, serverValue:32}] to 192.168.71.151:27017
2018-04-27 14:33:35 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:32}] to server 192.168.71.151:27017
2018-04-27 14:33:35 -Command execution completed
2018-04-27 14:33:35 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 14:33:35 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 14:33:35 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 14:33:35 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 14:33:35 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/file/upload/small],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.uploadAndCrtThumbImage(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/file/upload/small],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.uploadAndCrtThumbImage(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 14:33:35 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 14:33:35 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 14:33:35 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 14:33:35 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 14:33:35 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 14:33:35 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 14:33:35 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 14:33:35 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 14:33:35 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 14:33:35 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 14:33:35 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 14:33:35 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 14:33:35 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 14:33:35 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:33:35 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 14:33:35 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 14:33:35 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 14:33:35 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 14:33:35 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 14:33:35 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 14:33:35 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 14:33:35 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 14:33:35 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:33:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 14:33:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 14:33:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 14:33:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 14:33:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 14:33:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 14:33:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 14:33:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 14:33:35 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 14:33:35 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 14:33:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 14:33:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 14:33:36 -Checking status of 192.168.71.151:27017
2018-04-27 14:33:36 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.3 ms, state=CONNECTED}]
2018-04-27 14:33:37 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:33:37 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:33:37 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:33:37 -Loaded expression factory via original TCCL
2018-04-27 14:33:37 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:33:37 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:33:37 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:33:37 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 14:33:37 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 14:33:37 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 14:33:37 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 14:33:37 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 14:33:37 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 14:33:37 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 14:33:37 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 14:33:37 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 14:33:37 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 14:33:37 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 14:33:37 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 14:33:37 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 14:33:38 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7a9c84a5: startup date [Fri Apr 27 14:33:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:33:38 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7a9c84a5: startup date [Fri Apr 27 14:33:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:33:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:33:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:33:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:33:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:33:38 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 14:33:38 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 14:33:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:33:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:33:39 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 14:33:39 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 14:33:39 -Registering beans for JMX exposure on startup
2018-04-27 14:33:39 -Registering beans for JMX exposure on startup
2018-04-27 14:33:39 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 14:33:39 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 14:33:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 14:33:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 14:33:39 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 14:33:39 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 14:33:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 14:33:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 14:33:39 -Starting beans in phase 2147483647
2018-04-27 14:33:39 -Starting beans in phase 2147483647
2018-04-27 14:33:39 -Context refreshed
2018-04-27 14:33:39 -Context refreshed
2018-04-27 14:33:39 -Found 1 custom documentation plugin(s)
2018-04-27 14:33:39 -Found 1 custom documentation plugin(s)
2018-04-27 14:33:39 -Scanning for api listing references
2018-04-27 14:33:39 -Scanning for api listing references
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: updateUsingPOST_1
2018-04-27 14:33:40 -Generating unique operation named: updateUsingPOST_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: createUsingGET_1
2018-04-27 14:33:40 -Generating unique operation named: createUsingGET_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: createUsingHEAD_1
2018-04-27 14:33:40 -Generating unique operation named: createUsingHEAD_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: createUsingPOST_1
2018-04-27 14:33:40 -Generating unique operation named: createUsingPOST_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: createUsingPUT_1
2018-04-27 14:33:40 -Generating unique operation named: createUsingPUT_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: createUsingPATCH_1
2018-04-27 14:33:40 -Generating unique operation named: createUsingPATCH_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: createUsingDELETE_1
2018-04-27 14:33:40 -Generating unique operation named: createUsingDELETE_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 14:33:40 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: createUsingTRACE_1
2018-04-27 14:33:40 -Generating unique operation named: createUsingTRACE_1
2018-04-27 14:33:40 -Generating unique operation named: deleteUsingGET_1
2018-04-27 14:33:40 -Generating unique operation named: deleteUsingGET_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingGET_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingGET_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingHEAD_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingHEAD_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingPOST_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingPOST_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingPUT_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingPUT_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingPATCH_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingPATCH_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingDELETE_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingDELETE_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingTRACE_1
2018-04-27 14:33:40 -Generating unique operation named: listUsingTRACE_1
2018-04-27 14:33:40 -Generating unique operation named: saveUsingPOST_1
2018-04-27 14:33:40 -Generating unique operation named: saveUsingPOST_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: showUsingGET_1
2018-04-27 14:33:40 -Generating unique operation named: showUsingGET_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: showUsingHEAD_1
2018-04-27 14:33:40 -Generating unique operation named: showUsingHEAD_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: showUsingPOST_1
2018-04-27 14:33:40 -Generating unique operation named: showUsingPOST_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: showUsingPUT_1
2018-04-27 14:33:40 -Generating unique operation named: showUsingPUT_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: showUsingPATCH_1
2018-04-27 14:33:40 -Generating unique operation named: showUsingPATCH_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: showUsingDELETE_1
2018-04-27 14:33:40 -Generating unique operation named: showUsingDELETE_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 14:33:40 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: showUsingTRACE_1
2018-04-27 14:33:40 -Generating unique operation named: showUsingTRACE_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: updateUsingGET_1
2018-04-27 14:33:40 -Generating unique operation named: updateUsingGET_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 14:33:40 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: updateUsingPOST_2
2018-04-27 14:33:40 -Generating unique operation named: updateUsingPOST_2
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: updateUsingPUT_1
2018-04-27 14:33:40 -Generating unique operation named: updateUsingPUT_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 14:33:40 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 14:33:40 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 14:33:40 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:33:40 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 14:33:40 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 14:33:40 -Generating unique operation named: updateUsingPOST_3
2018-04-27 14:33:40 -Generating unique operation named: updateUsingPOST_3
2018-04-27 14:33:40 -Started FastdfsTests in 18.487 seconds (JVM running for 20.946)
2018-04-27 14:33:45 -获取到Tracker连接地址/192.168.71.161:22122
2018-04-27 14:33:45 -connect to /192.168.71.161:22122 soTimeout=1501 connectTimeout=601
2018-04-27 14:33:45 -对地址/192.168.71.161:22122发出交易请求TrackerGetFetchStorageCommand
2018-04-27 14:33:45 -Setting default value: false
2018-04-27 14:33:45 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 14:33:45 -    No conversion required, value is already a Boolean
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 14:33:45 -    Converted to Byte value '0'
2018-04-27 14:33:45 -Setting default value:  
2018-04-27 14:33:45 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 14:33:45 -    No conversion required, value is already a Character
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 14:33:45 -    Converted to Double value '0.0'
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 14:33:45 -    Converted to Float value '0.0'
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 14:33:45 -    No conversion required, value is already a Integer
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 14:33:45 -    Converted to Long value '0'
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 14:33:45 -    Converted to Short value '0'
2018-04-27 14:33:45 -Setting default value: 0.0
2018-04-27 14:33:45 -Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2018-04-27 14:33:45 -    No conversion required, value is already a BigDecimal
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'BigInteger' value '0' to type 'BigInteger'
2018-04-27 14:33:45 -    No conversion required, value is already a BigInteger
2018-04-27 14:33:45 -Setting default value: false
2018-04-27 14:33:45 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 14:33:45 -    No conversion required, value is already a Boolean
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 14:33:45 -    Converted to Byte value '0'
2018-04-27 14:33:45 -Setting default value:  
2018-04-27 14:33:45 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 14:33:45 -    No conversion required, value is already a Character
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 14:33:45 -    Converted to Double value '0.0'
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 14:33:45 -    Converted to Float value '0.0'
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 14:33:45 -    No conversion required, value is already a Integer
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 14:33:45 -    Converted to Long value '0'
2018-04-27 14:33:45 -Setting default value: 0
2018-04-27 14:33:45 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 14:33:45 -    Converted to Short value '0'
2018-04-27 14:33:45 -Setting default value: 
2018-04-27 14:33:45 -Converting 'String' value '' to type 'String'
2018-04-27 14:33:45 -Setting default value: [Z@457f43a2
2018-04-27 14:33:45 -Converting 'boolean[]' value '[Z@457f43a2' to type 'boolean[]'
2018-04-27 14:33:45 -    No conversion required, value is already a boolean[]
2018-04-27 14:33:45 -Setting default value: [B@4016d5fe
2018-04-27 14:33:45 -Converting 'byte[]' value '[B@4016d5fe' to type 'byte[]'
2018-04-27 14:33:45 -    No conversion required, value is already a byte[]
2018-04-27 14:33:45 -Setting default value: [C@6f8fa77a
2018-04-27 14:33:45 -Converting 'char[]' value '[C@6f8fa77a' to type 'char[]'
2018-04-27 14:33:45 -    No conversion required, value is already a char[]
2018-04-27 14:33:45 -Setting default value: [D@14d44e72
2018-04-27 14:33:45 -Converting 'double[]' value '[D@14d44e72' to type 'double[]'
2018-04-27 14:33:45 -    No conversion required, value is already a double[]
2018-04-27 14:33:45 -Setting default value: [F@2b097d19
2018-04-27 14:33:45 -Converting 'float[]' value '[F@2b097d19' to type 'float[]'
2018-04-27 14:33:45 -    No conversion required, value is already a float[]
2018-04-27 14:33:45 -Setting default value: [I@5d46f4a3
2018-04-27 14:33:45 -Converting 'int[]' value '[I@5d46f4a3' to type 'int[]'
2018-04-27 14:33:45 -    No conversion required, value is already a int[]
2018-04-27 14:33:45 -Setting default value: [J@4fe03c06
2018-04-27 14:33:45 -Converting 'long[]' value '[J@4fe03c06' to type 'long[]'
2018-04-27 14:33:45 -    No conversion required, value is already a long[]
2018-04-27 14:33:45 -Setting default value: [S@79f14c56
2018-04-27 14:33:45 -Converting 'short[]' value '[S@79f14c56' to type 'short[]'
2018-04-27 14:33:45 -    No conversion required, value is already a short[]
2018-04-27 14:33:45 -Setting default value: [Ljava.math.BigDecimal;@19f007c4
2018-04-27 14:33:45 -Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@19f007c4' to type 'BigDecimal[]'
2018-04-27 14:33:45 -    No conversion required, value is already a BigDecimal[]
2018-04-27 14:33:45 -Setting default value: [Ljava.math.BigInteger;@73790bb5
2018-04-27 14:33:45 -Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@73790bb5' to type 'BigInteger[]'
2018-04-27 14:33:45 -    No conversion required, value is already a BigInteger[]
2018-04-27 14:33:45 -Setting default value: [Ljava.lang.Boolean;@3d3709d0
2018-04-27 14:33:45 -Converting 'Boolean[]' value '[Ljava.lang.Boolean;@3d3709d0' to type 'Boolean[]'
2018-04-27 14:33:45 -    No conversion required, value is already a Boolean[]
2018-04-27 14:33:45 -Setting default value: [Ljava.lang.Byte;@4ed761dc
2018-04-27 14:33:45 -Converting 'Byte[]' value '[Ljava.lang.Byte;@4ed761dc' to type 'Byte[]'
2018-04-27 14:33:45 -    No conversion required, value is already a Byte[]
2018-04-27 14:33:45 -Setting default value: [Ljava.lang.Character;@578081e5
2018-04-27 14:33:45 -Converting 'Character[]' value '[Ljava.lang.Character;@578081e5' to type 'Character[]'
2018-04-27 14:33:45 -    No conversion required, value is already a Character[]
2018-04-27 14:33:45 -Setting default value: [Ljava.lang.Double;@6c1f1c03
2018-04-27 14:33:45 -Converting 'Double[]' value '[Ljava.lang.Double;@6c1f1c03' to type 'Double[]'
2018-04-27 14:33:45 -    No conversion required, value is already a Double[]
2018-04-27 14:33:45 -Setting default value: [Ljava.lang.Float;@69e3e1d9
2018-04-27 14:33:45 -Converting 'Float[]' value '[Ljava.lang.Float;@69e3e1d9' to type 'Float[]'
2018-04-27 14:33:45 -    No conversion required, value is already a Float[]
2018-04-27 14:33:45 -Setting default value: [Ljava.lang.Integer;@1ccfa4b8
2018-04-27 14:33:45 -Converting 'Integer[]' value '[Ljava.lang.Integer;@1ccfa4b8' to type 'Integer[]'
2018-04-27 14:33:45 -    No conversion required, value is already a Integer[]
2018-04-27 14:33:45 -Setting default value: [Ljava.lang.Long;@4f93816d
2018-04-27 14:33:45 -Converting 'Long[]' value '[Ljava.lang.Long;@4f93816d' to type 'Long[]'
2018-04-27 14:33:45 -    No conversion required, value is already a Long[]
2018-04-27 14:33:45 -Setting default value: [Ljava.lang.Short;@5bf86398
2018-04-27 14:33:45 -Converting 'Short[]' value '[Ljava.lang.Short;@5bf86398' to type 'Short[]'
2018-04-27 14:33:45 -    No conversion required, value is already a Short[]
2018-04-27 14:33:45 -Setting default value: [Ljava.lang.String;@2de3ac17
2018-04-27 14:33:45 -Converting 'String[]' value '[Ljava.lang.String;@2de3ac17' to type 'String[]'
2018-04-27 14:33:45 -    No conversion required, value is already a String[]
2018-04-27 14:33:45 -Setting default value: [Ljava.lang.Class;@4c683777
2018-04-27 14:33:45 -Converting 'Class[]' value '[Ljava.lang.Class;@4c683777' to type 'Class[]'
2018-04-27 14:33:45 -    No conversion required, value is already a Class[]
2018-04-27 14:33:45 -Setting default value: [Ljava.util.Date;@1fa35f7e
2018-04-27 14:33:45 -Converting 'Date[]' value '[Ljava.util.Date;@1fa35f7e' to type 'Date[]'
2018-04-27 14:33:45 -    No conversion required, value is already a Date[]
2018-04-27 14:33:45 -Checking status of 192.168.71.151:27017
2018-04-27 14:33:45 -Setting default value: [Ljava.util.Calendar;@37ec9c49
2018-04-27 14:33:45 -Converting 'Calendar[]' value '[Ljava.util.Calendar;@37ec9c49' to type 'Calendar[]'
2018-04-27 14:33:45 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.0 ms, state=CONNECTED}]
2018-04-27 14:33:45 -    No conversion required, value is already a Calendar[]
2018-04-27 14:33:45 -Setting default value: [Ljava.io.File;@3f6f26cb
2018-04-27 14:33:45 -Converting 'java.io.File[]' value '[Ljava.io.File;@3f6f26cb' to type 'java.io.File[]'
2018-04-27 14:33:45 -    No conversion required, value is already a java.io.File[]
2018-04-27 14:33:45 -Setting default value: [Ljava.sql.Date;@40123014
2018-04-27 14:33:45 -Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@40123014' to type 'java.sql.Date[]'
2018-04-27 14:33:45 -    No conversion required, value is already a java.sql.Date[]
2018-04-27 14:33:45 -Setting default value: [Ljava.sql.Time;@3f634608
2018-04-27 14:33:45 -Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@3f634608' to type 'java.sql.Time[]'
2018-04-27 14:33:45 -    No conversion required, value is already a java.sql.Time[]
2018-04-27 14:33:45 -Setting default value: [Ljava.sql.Timestamp;@28bf7bea
2018-04-27 14:33:45 -Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@28bf7bea' to type 'java.sql.Timestamp[]'
2018-04-27 14:33:45 -    No conversion required, value is already a java.sql.Timestamp[]
2018-04-27 14:33:45 -Setting default value: [Ljava.net.URL;@61fe5253
2018-04-27 14:33:45 -Converting 'java.net.URL[]' value '[Ljava.net.URL;@61fe5253' to type 'java.net.URL[]'
2018-04-27 14:33:45 -    No conversion required, value is already a java.net.URL[]
2018-04-27 14:33:45 -发出交易请求..报文头为ProtoHead [contentLength=60, cmd=102, status=0]
2018-04-27 14:33:45 -交易参数为[103, 114, 111, 117, 112, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 48, 48, 47, 48, 48, 47, 48, 48, 47, 119, 75, 104, 72, 110, 108, 114, 105, 103, 111, 67, 65, 80, 65, 56, 77, 65, 65, 68, 103, 57, 79, 83, 73, 112, 117, 111, 49, 57, 52, 46, 112, 110, 103]
2018-04-27 14:33:45 -服务端返回报文头ProtoHead [contentLength=39, cmd=100, status=0]
2018-04-27 14:33:45 -dump class=com.github.tobato.fastdfs.domain.StorageNodeInfo
2018-04-27 14:33:45 -----------------------------------------
2018-04-27 14:33:45 -FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]
2018-04-27 14:33:45 -FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]
2018-04-27 14:33:45 -FieldMateData [field=port, index=2, max=0, size=8, offsize=31]
2018-04-27 14:33:45 -设置值是 FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]group1
2018-04-27 14:33:45 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 14:33:45 -Converting 'String' value 'group1' to type 'String'
2018-04-27 14:33:45 -设置值是 FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]192.168.71.158
2018-04-27 14:33:45 -Convert string '192.168.71.158' to class 'java.lang.String'
2018-04-27 14:33:45 -Converting 'String' value '192.168.71.158' to type 'String'
2018-04-27 14:33:45 -设置值是 FieldMateData [field=port, index=2, max=0, size=8, offsize=31]23000
2018-04-27 14:33:45 -Converting 'Integer' value '23000' to type 'Integer'
2018-04-27 14:33:45 -    No conversion required, value is already a Integer
2018-04-27 14:33:45 -connect to /192.168.71.158:23000 soTimeout=1501 connectTimeout=601
2018-04-27 14:33:45 -对地址/192.168.71.158:23000发出交易请求StorageDownloadCommand
2018-04-27 14:33:45 -发出交易请求..报文头为ProtoHead [contentLength=76, cmd=14, status=0]
2018-04-27 14:33:45 -交易参数为[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 114, 111, 117, 112, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 48, 48, 47, 48, 48, 47, 48, 48, 47, 119, 75, 104, 72, 110, 108, 114, 105, 103, 111, 67, 65, 80, 65, 56, 77, 65, 65, 68, 103, 57, 79, 83, 73, 112, 117, 111, 49, 57, 52, 46, 112, 110, 103]
2018-04-27 14:33:45 -服务端返回报文头ProtoHead [contentLength=57588, cmd=100, status=0]
2018-04-27 14:33:45 -execute fdfs command error
java.lang.NullPointerException: null
	at com.github.tobato.fastdfs.proto.storage.internal.StorageDownloadResponse.decodeContent(StorageDownloadResponse.java:34)
	at com.github.tobato.fastdfs.proto.FdfsResponse.decode(FdfsResponse.java:54)
	at com.github.tobato.fastdfs.proto.AbstractFdfsCommand.receive(AbstractFdfsCommand.java:105)
	at com.github.tobato.fastdfs.proto.AbstractFdfsCommand.execute(AbstractFdfsCommand.java:45)
	at com.github.tobato.fastdfs.conn.ConnectionManager.execute(ConnectionManager.java:76)
	at com.github.tobato.fastdfs.conn.ConnectionManager.executeFdfsCmd(ConnectionManager.java:61)
	at com.github.tobato.fastdfs.service.DefaultGenerateStorageClient.downloadFile(DefaultGenerateStorageClient.java:141)
	at com.github.tobato.fastdfs.service.DefaultGenerateStorageClient.downloadFile(DefaultGenerateStorageClient.java:130)
	at com.example.ren.utils.FastdfsClient.downloadFile(FastdfsClient.java:85)
	at com.example.ren.fastdfs.FastdfsTests.downloadTest(FastdfsTests.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:237)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2018-04-27 14:33:46 -Checking status of 192.168.71.151:27017
2018-04-27 14:33:46 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.1 ms, state=CONNECTED}]
2018-04-27 14:33:56 -Checking status of 192.168.71.151:27017
2018-04-27 14:33:56 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.2 ms, state=CONNECTED}]
2018-04-27 14:34:01 -Checking status of 192.168.71.151:27017
2018-04-27 14:34:01 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.1 ms, state=CONNECTED}]
2018-04-27 14:34:01 -Closing org.springframework.web.context.support.GenericWebApplicationContext@7a9c84a5: startup date [Fri Apr 27 14:33:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:34:01 -Closing org.springframework.web.context.support.GenericWebApplicationContext@7a9c84a5: startup date [Fri Apr 27 14:33:23 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:34:01 -Stopping beans in phase 2147483647
2018-04-27 14:34:01 -Stopping beans in phase 2147483647
2018-04-27 14:34:01 -Unregistering JMX-exposed beans on shutdown
2018-04-27 14:34:01 -Unregistering JMX-exposed beans on shutdown
2018-04-27 14:34:01 -Unregistering JMX-exposed beans
2018-04-27 14:34:01 -Unregistering JMX-exposed beans
2018-04-27 14:34:01 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 14:34:01 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 14:34:01 -disconnect from Socket[addr=/192.168.71.161,port=22122,localport=60175]
2018-04-27 14:34:01 -disconnect from Socket[addr=/192.168.71.158,port=23000,localport=60176]
2018-04-27 14:34:01 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:34:01 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:34:01 -HHH000031: Closing
2018-04-27 14:34:01 -External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
2018-04-27 14:34:01 -Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2018-04-27 14:34:01 -Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2018-04-27 14:34:01 -{dataSource-1} closed
2018-04-27 14:34:06 -Checking status of 192.168.71.151:27017
2018-04-27 14:34:06 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.7 ms, state=CONNECTED}]
2018-04-27 14:34:16 -Checking status of 192.168.71.151:27017
2018-04-27 14:34:16 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2018-04-27 14:34:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:34:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.7 ms, state=CONNECTED}]
2018-04-27 14:34:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:34:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.3 ms, state=CONNECTED}]
2018-04-27 14:34:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:34:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 14:34:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:34:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 14:35:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:35:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 14:35:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:35:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 14:35:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:35:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:35:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:35:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:35:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:35:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:35:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:35:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:36:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:36:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 14:36:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:36:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:36:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:36:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:36:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:36:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:36:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:36:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:36:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:36:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:37:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:37:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:37:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:37:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:37:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:37:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:37:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:37:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:37:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:37:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:37:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:37:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:38:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:38:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:38:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:38:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:38:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:38:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:38:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:38:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:38:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:38:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:38:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:38:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:39:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:39:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:39:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:39:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:39:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:39:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:39:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:39:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 14:39:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:39:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 14:39:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:39:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 14:40:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:40:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:40:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:40:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:40:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:40:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:40:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:40:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:40:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:40:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:40:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:40:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:41:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:41:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:41:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:41:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:41:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:41:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:41:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:41:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.4 ms, state=CONNECTED}]
2018-04-27 14:41:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:41:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.0 ms, state=CONNECTED}]
2018-04-27 14:41:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:41:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=5.7 ms, state=CONNECTED}]
2018-04-27 14:41:58 -Starting FastdfsTests on DESKTOP-4VE2VST with PID 11668 (started by Qiang in Y:\MyGit\demo)
2018-04-27 14:41:58 -Running with Spring Boot v2.0.0.RELEASE, Spring v5.0.4.RELEASE
2018-04-27 14:41:58 -The following profiles are active: dev
2018-04-27 14:41:58 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 14:41:58 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:41:58 -Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 14:41:58 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:41:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:41:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:41:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:41:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:41:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:41:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:41:59 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:41:59 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:41:59 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:41:59 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:41:59 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:41:59 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:41:59 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:41:59 -Spring Data Neo4j - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:41:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:41:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mongo.MongoUserRepository.
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.DepartmentRepository.
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.RoleRepository.
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.mysql.UserRepository.
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.ActorRepository.
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 14:41:59 -Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.ren.dao.neo4j.MovieRepository.
2018-04-27 14:42:00 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:42:00 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:42:00 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:42:00 -Loaded expression factory via original TCCL
2018-04-27 14:42:00 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:42:00 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:42:00 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:42:00 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 14:42:00 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 14:42:00 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 14:42:00 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 14:42:00 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 14:42:00 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 14:42:00 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 14:42:00 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 14:42:00 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 14:42:00 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 14:42:00 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 14:42:00 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 14:42:00 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 14:42:00 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$a55c5b17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:00 -Bean 'jpaConfiguration' of type [com.example.ren.configuration.JpaConfiguration$$EnhancerBySpringCGLIB$$a55c5b17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c244f39b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c244f39b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:00 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$961f46a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:00 -Bean 'org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration$$EnhancerBySpringCGLIB$$961f46a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:01 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:01 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:01 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:01 -Bean 'spring.data.neo4j-org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties' of type [org.springframework.boot.autoconfigure.data.neo4j.Neo4jProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:01 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:01 -Bean 'configuration' of type [org.neo4j.ogm.config.Configuration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:01 -Processing: com.example.ren.model.BookBean -> java.lang.Object
2018-04-27 14:42:01 -Processing: com.example.ren.model.mongo.MongoUser -> java.lang.Object
2018-04-27 14:42:01 -Processing: com.example.ren.model.mysql.Department -> java.lang.Object
2018-04-27 14:42:01 -Processing: com.example.ren.model.mysql.Role -> java.lang.Object
2018-04-27 14:42:01 -Processing: com.example.ren.model.mysql.User -> java.lang.Object
2018-04-27 14:42:01 -Processing: com.example.ren.model.neo4j.Actor -> java.lang.Object
2018-04-27 14:42:01 -Processing: com.example.ren.model.neo4j.Movie -> java.lang.Object
2018-04-27 14:42:01 -Processing: com.example.ren.model.neo4j.Role -> java.lang.Object
2018-04-27 14:42:01 -Starting Post-processing phase
2018-04-27 14:42:01 -Building annotation class map
2018-04-27 14:42:01 -Building interface class map for 8 classes
2018-04-27 14:42:01 - - Actor implements 0 interfaces
2018-04-27 14:42:01 - - Role implements 1 interfaces
2018-04-27 14:42:01 -   - java.io.Serializable
2018-04-27 14:42:01 - - MongoUser implements 0 interfaces
2018-04-27 14:42:01 - - Role implements 0 interfaces
2018-04-27 14:42:01 - - Movie implements 0 interfaces
2018-04-27 14:42:01 - - Department implements 0 interfaces
2018-04-27 14:42:01 - - BookBean implements 0 interfaces
2018-04-27 14:42:01 - - User implements 1 interfaces
2018-04-27 14:42:01 -   - java.io.Serializable
2018-04-27 14:42:01 -Post-processing: com.example.ren.model.neo4j.Actor
2018-04-27 14:42:01 -Post-processing: com.example.ren.model.mysql.Role
2018-04-27 14:42:01 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 14:42:01 -Post-processing: com.example.ren.model.mongo.MongoUser
2018-04-27 14:42:01 -Post-processing: com.example.ren.model.neo4j.Role
2018-04-27 14:42:01 -Post-processing: com.example.ren.model.neo4j.Movie
2018-04-27 14:42:01 -Post-processing: com.example.ren.model.mysql.Department
2018-04-27 14:42:01 -Post-processing: com.example.ren.model.BookBean
2018-04-27 14:42:01 -Post-processing: com.example.ren.model.mysql.User
2018-04-27 14:42:01 - - No ClassInfo found for interface class: java.io.Serializable
2018-04-27 14:42:01 -Checking for @Transient classes....
2018-04-27 14:42:01 -Registering converters and deregistering transient fields and methods....
2018-04-27 14:42:01 -Post-processing complete
2018-04-27 14:42:01 -Building Index Metadata.
2018-04-27 14:42:01 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:01 -Bean 'sessionFactory' of type [org.neo4j.ogm.session.SessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-27 14:42:01 -{dataSource-1} inited
2018-04-27 14:42:02 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 14:42:02 -Building JPA container EntityManagerFactory for persistence unit 'default'
2018-04-27 14:42:02 -PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@14dad5dc
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: {
	CreateTime:"2018-04-27 14:42:01",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:1337289706, ConnectTime:"2018-04-27 14:42:02", UseCount:1, LastActiveTime:"2018-04-27 14:42:02"}
	]
}
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Y:/MyGit/demo/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.ren.model.mysql.Department
		com.example.ren.model.mysql.Role
		com.example.ren.model.mysql.User]
	Mapping files names []
	Properties []
2018-04-27 14:42:02 -Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2018-04-27 14:42:02 -Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2018-04-27 14:42:02 -Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2018-04-27 14:42:02 -Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2018-04-27 14:42:02 -HHH000412: Hibernate Core {5.2.14.Final}
2018-04-27 14:42:02 -HHH000206: hibernate.properties not found
2018-04-27 14:42:02 -Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2018-04-27 14:42:02 -Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2018-04-27 14:42:02 -HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2018-04-27 14:42:02 -Adding type registration boolean -> org.hibernate.type.BooleanType@7d0100ea
2018-04-27 14:42:02 -Adding type registration boolean -> org.hibernate.type.BooleanType@7d0100ea
2018-04-27 14:42:02 -Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d0100ea
2018-04-27 14:42:02 -Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@309dcdf3
2018-04-27 14:42:02 -Adding type registration true_false -> org.hibernate.type.TrueFalseType@bb25753
2018-04-27 14:42:02 -Adding type registration yes_no -> org.hibernate.type.YesNoType@66e21568
2018-04-27 14:42:02 -Adding type registration byte -> org.hibernate.type.ByteType@3d615b2e
2018-04-27 14:42:02 -Adding type registration byte -> org.hibernate.type.ByteType@3d615b2e
2018-04-27 14:42:02 -Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d615b2e
2018-04-27 14:42:02 -Adding type registration character -> org.hibernate.type.CharacterType@697d6ded
2018-04-27 14:42:02 -Adding type registration char -> org.hibernate.type.CharacterType@697d6ded
2018-04-27 14:42:02 -Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@697d6ded
2018-04-27 14:42:02 -Adding type registration short -> org.hibernate.type.ShortType@114a5e0
2018-04-27 14:42:02 -Adding type registration short -> org.hibernate.type.ShortType@114a5e0
2018-04-27 14:42:02 -Adding type registration java.lang.Short -> org.hibernate.type.ShortType@114a5e0
2018-04-27 14:42:02 -Adding type registration integer -> org.hibernate.type.IntegerType@24c685e7
2018-04-27 14:42:02 -Adding type registration int -> org.hibernate.type.IntegerType@24c685e7
2018-04-27 14:42:02 -Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@24c685e7
2018-04-27 14:42:02 -Adding type registration long -> org.hibernate.type.LongType@5f61371d
2018-04-27 14:42:02 -Adding type registration long -> org.hibernate.type.LongType@5f61371d
2018-04-27 14:42:02 -Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f61371d
2018-04-27 14:42:02 -Adding type registration float -> org.hibernate.type.FloatType@b4732dc
2018-04-27 14:42:02 -Adding type registration float -> org.hibernate.type.FloatType@b4732dc
2018-04-27 14:42:02 -Adding type registration java.lang.Float -> org.hibernate.type.FloatType@b4732dc
2018-04-27 14:42:02 -Adding type registration double -> org.hibernate.type.DoubleType@322204dc
2018-04-27 14:42:02 -Adding type registration double -> org.hibernate.type.DoubleType@322204dc
2018-04-27 14:42:02 -Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@322204dc
2018-04-27 14:42:02 -Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64e7d698
2018-04-27 14:42:02 -Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64e7d698
2018-04-27 14:42:02 -Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77724cbe
2018-04-27 14:42:02 -Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77724cbe
2018-04-27 14:42:02 -Adding type registration string -> org.hibernate.type.StringType@16d07cf3
2018-04-27 14:42:02 -Adding type registration java.lang.String -> org.hibernate.type.StringType@16d07cf3
2018-04-27 14:42:02 -Adding type registration nstring -> org.hibernate.type.StringNVarcharType@623e0631
2018-04-27 14:42:02 -Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@12417468
2018-04-27 14:42:02 -Adding type registration url -> org.hibernate.type.UrlType@67fb5025
2018-04-27 14:42:02 -Adding type registration java.net.URL -> org.hibernate.type.UrlType@67fb5025
2018-04-27 14:42:02 -Adding type registration Duration -> org.hibernate.type.DurationType@8e25d3f
2018-04-27 14:42:02 -Adding type registration java.time.Duration -> org.hibernate.type.DurationType@8e25d3f
2018-04-27 14:42:02 -Adding type registration Instant -> org.hibernate.type.InstantType@902fdbe
2018-04-27 14:42:02 -Adding type registration java.time.Instant -> org.hibernate.type.InstantType@902fdbe
2018-04-27 14:42:02 -Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2f79f192
2018-04-27 14:42:02 -Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2f79f192
2018-04-27 14:42:02 -Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6af5b246
2018-04-27 14:42:02 -Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6af5b246
2018-04-27 14:42:02 -Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1e3f0aea
2018-04-27 14:42:02 -Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1e3f0aea
2018-04-27 14:42:02 -Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@515b9d4a
2018-04-27 14:42:02 -Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@515b9d4a
2018-04-27 14:42:02 -Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b44d6d0
2018-04-27 14:42:02 -Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b44d6d0
2018-04-27 14:42:02 -Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3cc053
2018-04-27 14:42:02 -Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3cc053
2018-04-27 14:42:02 -Adding type registration date -> org.hibernate.type.DateType@1c628f6a
2018-04-27 14:42:02 -Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c628f6a
2018-04-27 14:42:02 -Adding type registration time -> org.hibernate.type.TimeType@7bee8621
2018-04-27 14:42:02 -Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7bee8621
2018-04-27 14:42:02 -Adding type registration timestamp -> org.hibernate.type.TimestampType@6f9ab79d
2018-04-27 14:42:02 -Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6f9ab79d
2018-04-27 14:42:02 -Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6f9ab79d
2018-04-27 14:42:02 -Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@69364b2d
2018-04-27 14:42:02 -Adding type registration calendar -> org.hibernate.type.CalendarType@23ca36d
2018-04-27 14:42:02 -Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@23ca36d
2018-04-27 14:42:02 -Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@23ca36d
2018-04-27 14:42:02 -Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b80e5a9
2018-04-27 14:42:02 -Adding type registration locale -> org.hibernate.type.LocaleType@562919fe
2018-04-27 14:42:02 -Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@562919fe
2018-04-27 14:42:02 -Adding type registration currency -> org.hibernate.type.CurrencyType@42e4e589
2018-04-27 14:42:02 -Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@42e4e589
2018-04-27 14:42:02 -Adding type registration timezone -> org.hibernate.type.TimeZoneType@4cdba2ed
2018-04-27 14:42:02 -Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4cdba2ed
2018-04-27 14:42:02 -Adding type registration class -> org.hibernate.type.ClassType@63fd4dda
2018-04-27 14:42:02 -Adding type registration java.lang.Class -> org.hibernate.type.ClassType@63fd4dda
2018-04-27 14:42:02 -Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@740fefc6
2018-04-27 14:42:02 -Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@740fefc6
2018-04-27 14:42:02 -Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7fe07361
2018-04-27 14:42:02 -Adding type registration binary -> org.hibernate.type.BinaryType@108e9837
2018-04-27 14:42:02 -Adding type registration byte[] -> org.hibernate.type.BinaryType@108e9837
2018-04-27 14:42:02 -Adding type registration [B -> org.hibernate.type.BinaryType@108e9837
2018-04-27 14:42:02 -Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30c19bff
2018-04-27 14:42:02 -Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30c19bff
2018-04-27 14:42:02 -Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30c19bff
2018-04-27 14:42:02 -Adding type registration row_version -> org.hibernate.type.RowVersionType@39da5e49
2018-04-27 14:42:02 -Adding type registration image -> org.hibernate.type.ImageType@5934ca1e
2018-04-27 14:42:02 -Adding type registration characters -> org.hibernate.type.CharArrayType@4b87074a
2018-04-27 14:42:02 -Adding type registration char[] -> org.hibernate.type.CharArrayType@4b87074a
2018-04-27 14:42:02 -Adding type registration [C -> org.hibernate.type.CharArrayType@4b87074a
2018-04-27 14:42:02 -Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@27585351
2018-04-27 14:42:02 -Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@27585351
2018-04-27 14:42:02 -Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@27585351
2018-04-27 14:42:02 -Adding type registration text -> org.hibernate.type.TextType@56826a75
2018-04-27 14:42:02 -Adding type registration ntext -> org.hibernate.type.NTextType@740dcae3
2018-04-27 14:42:02 -Adding type registration blob -> org.hibernate.type.BlobType@541bf968
2018-04-27 14:42:02 -Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@541bf968
2018-04-27 14:42:02 -Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6acffb2d
2018-04-27 14:42:02 -Adding type registration clob -> org.hibernate.type.ClobType@4971f459
2018-04-27 14:42:02 -Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4971f459
2018-04-27 14:42:02 -Adding type registration nclob -> org.hibernate.type.NClobType@1d3c112a
2018-04-27 14:42:02 -Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d3c112a
2018-04-27 14:42:02 -Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@db99785
2018-04-27 14:42:02 -Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6da4feeb
2018-04-27 14:42:02 -Adding type registration serializable -> org.hibernate.type.SerializableType@498a612d
2018-04-27 14:42:02 -Adding type registration object -> org.hibernate.type.ObjectType@2c30c81d
2018-04-27 14:42:02 -Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c30c81d
2018-04-27 14:42:02 -Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@19da993b
2018-04-27 14:42:02 -Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3380ca3d
2018-04-27 14:42:02 -Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@23310248
2018-04-27 14:42:02 -Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c2df90e
2018-04-27 14:42:02 -Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@41f3aaf1
2018-04-27 14:42:02 -Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@741741d0
2018-04-27 14:42:02 -Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9f3e58
2018-04-27 14:42:02 -Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c19592c
2018-04-27 14:42:02 -Database ->
       name : MySQL
    version : 5.7.19-log
      major : 5
      minor : 7
2018-04-27 14:42:02 -Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.21 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2018-04-27 14:42:02 -JDBC version : 4.0
2018-04-27 14:42:02 -HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2018-04-27 14:42:02 -JDBC driver metadata reported database stores quoted identifiers in more than one case
2018-04-27 14:42:02 -IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2018-04-27 14:42:02 -Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2018-04-27 14:42:02 -Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2018-04-27 14:42:03 -Binding entity from annotated class: com.example.ren.model.mysql.Department
2018-04-27 14:42:03 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 14:42:03 -Import with entity name Department
2018-04-27 14:42:03 -Bind entity com.example.ren.model.mysql.Department on table department
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -MetadataSourceProcessor property id with lazy=false
2018-04-27 14:42:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:id]
2018-04-27 14:42:03 -building SimpleValue for id
2018-04-27 14:42:03 -Building property id
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -MetadataSourceProcessor property name with lazy=false
2018-04-27 14:42:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Department:name]
2018-04-27 14:42:03 -building SimpleValue for name
2018-04-27 14:42:03 -Building property name
2018-04-27 14:42:03 -Binding entity from annotated class: com.example.ren.model.mysql.Role
2018-04-27 14:42:03 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 14:42:03 -Import with entity name Role
2018-04-27 14:42:03 -Bind entity com.example.ren.model.mysql.Role on table role
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -MetadataSourceProcessor property id with lazy=false
2018-04-27 14:42:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:id]
2018-04-27 14:42:03 -building SimpleValue for id
2018-04-27 14:42:03 -Building property id
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -MetadataSourceProcessor property name with lazy=false
2018-04-27 14:42:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.Role:name]
2018-04-27 14:42:03 -building SimpleValue for name
2018-04-27 14:42:03 -Building property name
2018-04-27 14:42:03 -Binding entity from annotated class: com.example.ren.model.mysql.User
2018-04-27 14:42:03 -Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2018-04-27 14:42:03 -Import with entity name User
2018-04-27 14:42:03 -Bind entity com.example.ren.model.mysql.User on table user
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -MetadataSourceProcessor property id with lazy=false
2018-04-27 14:42:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:id]
2018-04-27 14:42:03 -building SimpleValue for id
2018-04-27 14:42:03 -Building property id
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -MetadataSourceProcessor property createDate with lazy=false
2018-04-27 14:42:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:createDate]
2018-04-27 14:42:03 -building SimpleValue for createDate
2018-04-27 14:42:03 -Building property createDate
2018-04-27 14:42:03 -Binding column: Ejb3JoinColumn{logicalColumnName='did', referencedColumn='', mappedBy=''}
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=department, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -Building property department
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -MetadataSourceProcessor property email with lazy=false
2018-04-27 14:42:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:email]
2018-04-27 14:42:03 -building SimpleValue for email
2018-04-27 14:42:03 -Building property email
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -MetadataSourceProcessor property name with lazy=false
2018-04-27 14:42:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:name]
2018-04-27 14:42:03 -building SimpleValue for name
2018-04-27 14:42:03 -Building property name
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -MetadataSourceProcessor property password with lazy=false
2018-04-27 14:42:03 -Attempting to locate auto-apply AttributeConverter for property [com.example.ren.model.mysql.User:password]
2018-04-27 14:42:03 -building SimpleValue for password
2018-04-27 14:42:03 -Building property password
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=roles_key, insertable=true, updatable=true, unique=false}
2018-04-27 14:42:03 -Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2018-04-27 14:42:03 -Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2018-04-27 14:42:03 -Binding column: Ejb3JoinColumn{logicalColumnName='role_id', referencedColumn='', mappedBy=''}
2018-04-27 14:42:03 -Collection role: com.example.ren.model.mysql.User.roles
2018-04-27 14:42:03 -Building property roles
2018-04-27 14:42:03 -Starting fillSimpleValue for id
2018-04-27 14:42:03 -Starting fillSimpleValue for name
2018-04-27 14:42:03 -Starting fillSimpleValue for id
2018-04-27 14:42:03 -Starting fillSimpleValue for name
2018-04-27 14:42:03 -Starting fillSimpleValue for id
2018-04-27 14:42:03 -Starting fillSimpleValue for createDate
2018-04-27 14:42:03 -Starting fillSimpleValue for email
2018-04-27 14:42:03 -Starting fillSimpleValue for name
2018-04-27 14:42:03 -Starting fillSimpleValue for password
2018-04-27 14:42:03 -Forcing column [id] to be non-null as it is part of the primary key for table [department]
2018-04-27 14:42:03 -Forcing column [id] to be non-null as it is part of the primary key for table [role]
2018-04-27 14:42:03 -Forcing column [id] to be non-null as it is part of the primary key for table [user]
2018-04-27 14:42:03 -Second pass for collection: com.example.ren.model.mysql.User.roles
2018-04-27 14:42:03 -Binding as ManyToMany: com.example.ren.model.mysql.User.roles
2018-04-27 14:42:03 -Mapped collection key: user_id, element: role_id
2018-04-27 14:42:03 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 14:42:03 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 14:42:03 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 14:42:03 -Resolving reference to class: com.example.ren.model.mysql.Department
2018-04-27 14:42:03 -Resolving reference to class: com.example.ren.model.mysql.Role
2018-04-27 14:42:03 -Resolving reference to class: com.example.ren.model.mysql.User
2018-04-27 14:42:03 -Building session factory
2018-04-27 14:42:03 -SessionFactory name : null
2018-04-27 14:42:03 -Automatic flush during beforeCompletion(): enabled
2018-04-27 14:42:03 -Automatic session close at end of transaction: disabled
2018-04-27 14:42:03 -Statistics: disabled
2018-04-27 14:42:03 -Deleted entity synthetic identifier rollback: disabled
2018-04-27 14:42:03 -Default entity-mode: pojo
2018-04-27 14:42:03 -Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2018-04-27 14:42:03 -Allow initialization of lazy state outside session : disabled
2018-04-27 14:42:03 -Using BatchFetchStyle : LEGACY
2018-04-27 14:42:03 -Default batch fetch size: -1
2018-04-27 14:42:03 -Maximum outer join fetch depth: 2
2018-04-27 14:42:03 -Default null ordering: NONE
2018-04-27 14:42:03 -Order SQL updates by primary key: disabled
2018-04-27 14:42:03 -Order SQL inserts for batching: disabled
2018-04-27 14:42:03 -multi-tenancy strategy : NONE
2018-04-27 14:42:03 -JTA Track by Thread: enabled
2018-04-27 14:42:03 -Query language substitutions: {}
2018-04-27 14:42:03 -JPA query language strict compliance: disabled
2018-04-27 14:42:03 -Named query checking : enabled
2018-04-27 14:42:03 -Second-level cache: enabled
2018-04-27 14:42:03 -Second-level query cache: disabled
2018-04-27 14:42:03 -Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5763a655
2018-04-27 14:42:03 -Second-level cache region prefix: null
2018-04-27 14:42:03 -Optimize second-level cache for minimal puts: disabled
2018-04-27 14:42:03 -Structured second-level cache entries: disabled
2018-04-27 14:42:03 -Second-level cache direct-reference entries: disabled
2018-04-27 14:42:03 -Automatic eviction of collection cache: disabled
2018-04-27 14:42:03 -JDBC batch size: 15
2018-04-27 14:42:03 -JDBC batch updates for versioned data: enabled
2018-04-27 14:42:03 -Scrollable result sets: enabled
2018-04-27 14:42:03 -Wrap result sets: disabled
2018-04-27 14:42:03 -JDBC3 getGeneratedKeys(): enabled
2018-04-27 14:42:03 -JDBC result set fetch size: null
2018-04-27 14:42:03 -Connection release mode: ON_CLOSE
2018-04-27 14:42:03 -Generate SQL with comments: disabled
2018-04-27 14:42:03 -Session factory constructed with filter configurations : {}
2018-04-27 14:42:03 -Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;Y:\MyGit\demo\target\test-classes;Y:\MyGit\demo\target\classes;X:\Maven\repository\org\springframework\boot\spring-boot-starter\2.0.0.RELEASE\spring-boot-starter-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot\2.0.0.RELEASE\spring-boot-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-autoconfigure\2.0.0.RELEASE\spring-boot-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;X:\Maven\repository\org\springframework\spring-core\5.0.4.RELEASE\spring-core-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-jcl\5.0.4.RELEASE\spring-jcl-5.0.4.RELEASE.jar;X:\Maven\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar;X:\Maven\repository\org\springframework\boot\spring-boot-configuration-processor\2.0.0.RELEASE\spring-boot-configuration-processor-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-web\2.0.0.RELEASE\spring-boot-starter-web-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-json\2.0.0.RELEASE\spring-boot-starter-json-2.0.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-databind\2.9.4\jackson-databind-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-core\2.9.4\jackson-core-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.9.4\jackson-datatype-jdk8-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.9.4\jackson-datatype-jsr310-2.9.4.jar;X:\Maven\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.9.4\jackson-module-parameter-names-2.9.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-tomcat\2.0.0.RELEASE\spring-boot-starter-tomcat-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-core\8.5.28\tomcat-embed-core-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-el\8.5.28\tomcat-embed-el-8.5.28.jar;X:\Maven\repository\org\apache\tomcat\embed\tomcat-embed-websocket\8.5.28\tomcat-embed-websocket-8.5.28.jar;X:\Maven\repository\org\hibernate\validator\hibernate-validator\6.0.7.Final\hibernate-validator-6.0.7.Final.jar;X:\Maven\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar;X:\Maven\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;X:\Maven\repository\org\springframework\spring-web\5.0.4.RELEASE\spring-web-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-webmvc\5.0.4.RELEASE\spring-webmvc-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-aop\2.0.0.RELEASE\spring-boot-starter-aop-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aop\5.0.4.RELEASE\spring-aop-5.0.4.RELEASE.jar;X:\Maven\repository\org\aspectj\aspectjweaver\1.8.13\aspectjweaver-1.8.13.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.0.0.RELEASE\spring-boot-starter-data-jpa-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-jdbc\2.0.0.RELEASE\spring-boot-starter-jdbc-2.0.0.RELEASE.jar;X:\Maven\repository\com\zaxxer\HikariCP\2.7.8\HikariCP-2.7.8.jar;X:\Maven\repository\org\hibernate\hibernate-core\5.2.14.Final\hibernate-core-5.2.14.Final.jar;X:\Maven\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;X:\Maven\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;X:\Maven\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;X:\Maven\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;X:\Maven\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;X:\Maven\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;X:\Maven\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;X:\Maven\repository\org\springframework\data\spring-data-jpa\2.0.5.RELEASE\spring-data-jpa-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-orm\5.0.4.RELEASE\spring-orm-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-aspects\5.0.4.RELEASE\spring-aspects-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-redis\2.0.0.RELEASE\spring-boot-starter-data-redis-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-redis\2.0.5.RELEASE\spring-data-redis-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-keyvalue\2.0.5.RELEASE\spring-data-keyvalue-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-oxm\5.0.4.RELEASE\spring-oxm-5.0.4.RELEASE.jar;X:\Maven\repository\io\lettuce\lettuce-core\5.0.2.RELEASE\lettuce-core-5.0.2.RELEASE.jar;X:\Maven\repository\io\projectreactor\reactor-core\3.1.5.RELEASE\reactor-core-3.1.5.RELEASE.jar;X:\Maven\repository\org\reactivestreams\reactive-streams\1.0.2\reactive-streams-1.0.2.jar;X:\Maven\repository\io\netty\netty-common\4.1.22.Final\netty-common-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-transport\4.1.22.Final\netty-transport-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-buffer\4.1.22.Final\netty-buffer-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-resolver\4.1.22.Final\netty-resolver-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-handler\4.1.22.Final\netty-handler-4.1.22.Final.jar;X:\Maven\repository\io\netty\netty-codec\4.1.22.Final\netty-codec-4.1.22.Final.jar;X:\Maven\repository\com\google\code\gson\gson\2.8.0\gson-2.8.0.jar;X:\Maven\repository\org\springframework\data\spring-data-mongodb\2.0.5.RELEASE\spring-data-mongodb-2.0.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-context\5.0.4.RELEASE\spring-context-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-beans\5.0.4.RELEASE\spring-beans-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\spring-expression\5.0.4.RELEASE\spring-expression-5.0.4.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-commons\2.0.5.RELEASE\spring-data-commons-2.0.5.RELEASE.jar;X:\Maven\repository\org\mongodb\mongo-java-driver\3.6.3\mongo-java-driver-3.6.3.jar;X:\Maven\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;X:\Maven\repository\org\pegdown\pegdown\1.6.0\pegdown-1.6.0.jar;X:\Maven\repository\org\parboiled\parboiled-java\1.1.7\parboiled-java-1.1.7.jar;X:\Maven\repository\org\parboiled\parboiled-core\1.1.7\parboiled-core-1.1.7.jar;X:\Maven\repository\org\ow2\asm\asm\5.0.3\asm-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-tree\5.0.3\asm-tree-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-analysis\5.0.3\asm-analysis-5.0.3.jar;X:\Maven\repository\org\ow2\asm\asm-util\5.0.3\asm-util-5.0.3.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-hateoas\2.0.0.RELEASE\spring-boot-starter-hateoas-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\hateoas\spring-hateoas\0.24.0.RELEASE\spring-hateoas-0.24.0.RELEASE.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-core\1.2.0.RELEASE\spring-plugin-core-1.2.0.RELEASE.jar;X:\Maven\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-data-neo4j\2.0.0.RELEASE\spring-boot-starter-data-neo4j-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\data\spring-data-neo4j\5.0.5.RELEASE\spring-data-neo4j-5.0.5.RELEASE.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-core\3.1.0\neo4j-ogm-core-3.1.0.jar;X:\Maven\repository\io\github\lukehutch\fast-classpath-scanner\2.7.4\fast-classpath-scanner-2.7.4.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-bolt-driver\3.1.0\neo4j-ogm-bolt-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\driver\neo4j-java-driver\1.5.0\neo4j-java-driver-1.5.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-http-driver\3.1.0\neo4j-ogm-http-driver-3.1.0.jar;X:\Maven\repository\org\neo4j\neo4j-ogm-api\3.1.0\neo4j-ogm-api-3.1.0.jar;X:\Maven\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;X:\Maven\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;X:\Maven\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;X:\Maven\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-freemarker\2.0.0.RELEASE\spring-boot-starter-freemarker-2.0.0.RELEASE.jar;X:\Maven\repository\org\freemarker\freemarker\2.3.27-incubating\freemarker-2.3.27-incubating.jar;X:\Maven\repository\org\springframework\spring-context-support\5.0.4.RELEASE\spring-context-support-5.0.4.RELEASE.jar;X:\Maven\repository\com\alibaba\druid\1.1.9\druid-1.1.9.jar;X:\Maven\repository\com\github\penggle\kaptcha\2.3.2\kaptcha-2.3.2.jar;X:\Maven\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;X:\Maven\repository\com\jhlabs\filters\2.0.235-1\filters-2.0.235-1.jar;X:\Maven\repository\com\github\tobato\fastdfs-client\1.26.1-RELEASE\fastdfs-client-1.26.1-RELEASE.jar;X:\Maven\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;X:\Maven\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;X:\Maven\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;X:\Maven\repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;X:\Maven\repository\commons-beanutils\commons-beanutils\1.9.1\commons-beanutils-1.9.1.jar;X:\Maven\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;X:\Maven\repository\org\apache\commons\commons-pool2\2.5.0\commons-pool2-2.5.0.jar;X:\Maven\repository\org\mockito\mockito-all\1.9.5\mockito-all-1.9.5.jar;X:\Maven\repository\net\coobird\thumbnailator\0.4.8\thumbnailator-0.4.8.jar;X:\Maven\repository\org\springframework\spring-jdbc\4.2.5.RELEASE\spring-jdbc-4.2.5.RELEASE.jar;X:\Maven\repository\org\springframework\spring-tx\4.2.5.RELEASE\spring-tx-4.2.5.RELEASE.jar;X:\Maven\repository\mysql\mysql-connector-java\5.1.21\mysql-connector-java-5.1.21.jar;X:\Maven\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;X:\Maven\repository\org\mybatis\mybatis-spring\1.2.1\mybatis-spring-1.2.1.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-logging\2.0.0.RELEASE\spring-boot-starter-logging-2.0.0.RELEASE.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-to-slf4j\2.10.0\log4j-to-slf4j-2.10.0.jar;X:\Maven\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;X:\Maven\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;X:\Maven\repository\com\google\guava\guava\19.0\guava-19.0.jar;X:\Maven\repository\com\alibaba\fastjson\1.2.46\fastjson-1.2.46.jar;X:\Maven\repository\com\github\axet\kaptcha\0.0.9\kaptcha-0.0.9.jar;X:\Maven\repository\io\springfox\springfox-swagger-ui\2.6.1\springfox-swagger-ui-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-spring-web\2.6.1\springfox-spring-web-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger2\2.6.1\springfox-swagger2-2.6.1.jar;X:\Maven\repository\io\swagger\swagger-annotations\1.5.10\swagger-annotations-1.5.10.jar;X:\Maven\repository\io\swagger\swagger-models\1.5.10\swagger-models-1.5.10.jar;X:\Maven\repository\io\springfox\springfox-spi\2.6.1\springfox-spi-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-core\2.6.1\springfox-core-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-schema\2.6.1\springfox-schema-2.6.1.jar;X:\Maven\repository\io\springfox\springfox-swagger-common\2.6.1\springfox-swagger-common-2.6.1.jar;X:\Maven\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;X:\Maven\repository\org\springframework\plugin\spring-plugin-metadata\1.2.0.RELEASE\spring-plugin-metadata-1.2.0.RELEASE.jar;X:\Maven\repository\org\mapstruct\mapstruct\1.0.0.Final\mapstruct-1.0.0.Final.jar;X:\Maven\repository\org\springframework\boot\spring-boot-starter-test\2.0.0.RELEASE\spring-boot-starter-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test\2.0.0.RELEASE\spring-boot-test-2.0.0.RELEASE.jar;X:\Maven\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.0.0.RELEASE\spring-boot-test-autoconfigure-2.0.0.RELEASE.jar;X:\Maven\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;X:\Maven\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;X:\Maven\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;X:\Maven\repository\org\assertj\assertj-core\3.9.1\assertj-core-3.9.1.jar;X:\Maven\repository\org\mockito\mockito-core\2.15.0\mockito-core-2.15.0.jar;X:\Maven\repository\net\bytebuddy\byte-buddy\1.7.10\byte-buddy-1.7.10.jar;X:\Maven\repository\net\bytebuddy\byte-buddy-agent\1.7.10\byte-buddy-agent-1.7.10.jar;X:\Maven\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;X:\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;X:\Maven\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;X:\Maven\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;X:\Maven\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;X:\Maven\repository\org\xmlunit\xmlunit-core\2.5.1\xmlunit-core-2.5.1.jar;X:\Maven\repository\org\springframework\spring-test\4.3.6.RELEASE\spring-test-4.3.6.RELEASE.jar;X:\Maven\repository\junit\junit\4.12\junit-4.12.jar;D:\Program Files (x86)\JetBrains\IntelliJ IDEA 2017.1\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=GMT+08:00, os.name=Windows 10, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_65\jre\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 com.example.ren.fastdfs.FastdfsTests,downloadTest, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@cf01c2e, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\Qiang, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_65\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_65\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_65\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_65\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_65-b17, user.name=Qiang, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Qiang\AppData\Local\Temp\, java.version=1.8.0_65, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=Y:\MyGit\demo, os.arch=amd64, PID=11668, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6f15f52a, java.library.path=C:\Program Files\Java\jdk1.8.0_65\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\IntelSGXPSW\bin\x64\Release\;C:\Program Files\Intel\IntelSGXPSW\bin\win32\Release\;C:\Program Files\Java\jdk1.8.0_65\bin;C:\Program Files\Java\jdk1.8.0_65\jre\bin;X:\Maven\apache-maven-3.3.9\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Qiang\Anaconda3;D:\Users\Qiang\Anaconda3\Library\mingw-w64\bin;D:\Users\Qiang\Anaconda3\Library\usr\bin;D:\Users\Qiang\Anaconda3\Library\bin;D:\Users\Qiang\Anaconda3\Scripts;D:\Program Files\Docker Toolbox;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.65-b01, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource={
	CreateTime:"2018-04-27 14:42:01",
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:1337289706, ConnectTime:"2018-04-27 14:42:02", UseCount:2, LastActiveTime:"2018-04-27 14:42:02"}
	]
}, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_65\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, java.class.version=52.0}
2018-04-27 14:42:03 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:42:03 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:42:03 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:42:03 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 14:42:03 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 14:42:03 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 14:42:03 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 14:42:03 -Loaded expression factory via original TCCL
2018-04-27 14:42:03 -HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 14:42:03 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 14:42:03 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 14:42:03 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 14:42:03 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 14:42:03 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 14:42:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 14:42:03 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 14:42:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 14:42:03 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 14:42:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 14:42:03 -Skipping JACC integration as it was not enabled
2018-04-27 14:42:03 -External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2018-04-27 14:42:03 -Instantiated session factory
2018-04-27 14:42:03 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 14:42:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 14:42:03 -Not known whether passed class name [com.example.ren.model.mysql.Role] is safe
2018-04-27 14:42:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Role
2018-04-27 14:42:03 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 14:42:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 14:42:03 -Not known whether passed class name [com.example.ren.model.mysql.Department] is safe
2018-04-27 14:42:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.Department
2018-04-27 14:42:03 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 14:42:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 14:42:03 -Not known whether passed class name [com.example.ren.model.mysql.User] is safe
2018-04-27 14:42:03 -No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.ren.model.mysql.User
2018-04-27 14:42:03 -Static SQL for collection: com.example.ren.model.mysql.User.roles
2018-04-27 14:42:03 - Row insert: insert into user_role (user_id, role_id) values (?, ?)
2018-04-27 14:42:03 - Row update: update user_role set role_id=? where user_id=? and role_id=?
2018-04-27 14:42:03 - Row delete: delete from user_role where user_id=? and role_id=?
2018-04-27 14:42:03 - One-shot delete: delete from user_role where user_id=?
2018-04-27 14:42:03 -Static SQL for entity: com.example.ren.model.mysql.Role
2018-04-27 14:42:03 - Version select: select id from role where id =?
2018-04-27 14:42:03 - Snapshot select: select role_.id, role_.name as name2_1_ from role role_ where role_.id=?
2018-04-27 14:42:03 - Insert 0: insert into role (name, id) values (?, ?)
2018-04-27 14:42:03 - Update 0: update role set name=? where id=?
2018-04-27 14:42:03 - Delete 0: delete from role where id=?
2018-04-27 14:42:03 - Identity insert: insert into role (name) values (?)
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc7152e]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Role [NONE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42107318]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Role [READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d829ef0]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dfc2a4]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_NOWAIT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@781c2497]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Role [UPGRADE_SKIPLOCKED]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c491b8]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Role [FORCE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a3cf824]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_READ]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? lock in share mode
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28367da7]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_WRITE]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c60c681]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a1371]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c28181b]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Role)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:42:03 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:42:03 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Role: select role0_.id as id1_1_0_, role0_.name as name2_1_0_ from role role0_ where role0_.id=?
2018-04-27 14:42:03 -Static SQL for entity: com.example.ren.model.mysql.Department
2018-04-27 14:42:03 - Version select: select id from department where id =?
2018-04-27 14:42:03 - Snapshot select: select department_.id, department_.name as name2_0_ from department department_ where department_.id=?
2018-04-27 14:42:03 - Insert 0: insert into department (name, id) values (?, ?)
2018-04-27 14:42:03 - Update 0: update department set name=? where id=?
2018-04-27 14:42:03 - Delete 0: delete from department where id=?
2018-04-27 14:42:03 - Identity insert: insert into department (name) values (?)
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1152900]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Department [NONE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b2a4332]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Department [READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cb24e2]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2296127]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_NOWAIT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d283d1]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Department [UPGRADE_SKIPLOCKED]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fca3eb5]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Department [FORCE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cb29ea8]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_READ]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? lock in share mode
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e747037]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_WRITE]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25218a4d]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Department [PESSIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56da96b3]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@426710f0]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.Department)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.Department [OPTIMISTIC_FORCE_INCREMENT]: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:42:03 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:42:03 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.Department: select department0_.id as id1_0_0_, department0_.name as name2_0_0_ from department department0_ where department0_.id=?
2018-04-27 14:42:03 -Static SQL for entity: com.example.ren.model.mysql.User
2018-04-27 14:42:03 - Version select: select id from user where id =?
2018-04-27 14:42:03 - Snapshot select: select user_.id, user_.create_date as create_d2_2_, user_.did as did6_2_, user_.email as email3_2_, user_.name as name4_2_, user_.password as password5_2_ from user user_ where user_.id=?
2018-04-27 14:42:03 - Insert 0: insert into user (create_date, did, email, name, password, id) values (?, ?, ?, ?, ?, ?)
2018-04-27 14:42:03 - Update 0: update user set create_date=?, did=?, email=?, name=?, password=? where id=?
2018-04-27 14:42:03 - Delete 0: delete from user where id=?
2018-04-27 14:42:03 - Identity insert: insert into user (create_date, did, email, name, password) values (?, ?, ?, ?, ?)
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e37fb82]
2018-04-27 14:42:03 -Visiting attribute path : createDate
2018-04-27 14:42:03 -Visiting attribute path : department
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44ccd75c]
2018-04-27 14:42:03 -Visiting attribute path : department.name
2018-04-27 14:42:03 -Visiting attribute path : email
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Visiting attribute path : password
2018-04-27 14:42:03 -Visiting attribute path : roles
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37d0d373]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632241f5]
2018-04-27 14:42:03 -Visiting attribute path : roles.name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.User [NONE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4baf997]
2018-04-27 14:42:03 -Visiting attribute path : createDate
2018-04-27 14:42:03 -Visiting attribute path : department
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@643f6179]
2018-04-27 14:42:03 -Visiting attribute path : department.name
2018-04-27 14:42:03 -Visiting attribute path : email
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Visiting attribute path : password
2018-04-27 14:42:03 -Visiting attribute path : roles
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@328e4ec2]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7757025d]
2018-04-27 14:42:03 -Visiting attribute path : roles.name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(department)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Department)
                - SQL table alias mapping - department1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:2>
             - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.example.ren.model.mysql.User.roles)
                - SQL table alias mapping - roles2_
                - alias suffix - 2_
                - suffixed key columns - {user_id1_3_2_}
                - entity-element alias suffix - 3_
                - 3_entity-element suffixed key columns - id1_1_3_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.example.ren.model.mysql.Role)
                      - SQL table alias mapping - role3_
                      - alias suffix - 3_
                      - suffixed key columns - {id1_1_3_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.User [READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_, department1_.id as id1_0_1_, department1_.name as name2_0_1_, roles2_.user_id as user_id1_3_2_, role3_.id as role_id2_3_2_, role3_.id as id1_1_3_, role3_.name as name2_1_3_ from user user0_ left outer join department department1_ on user0_.did=department1_.id left outer join user_role roles2_ on user0_.id=roles2_.user_id left outer join role role3_ on roles2_.role_id=role3_.id where user0_.id=?
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12fccff0]
2018-04-27 14:42:03 -Visiting attribute path : createDate
2018-04-27 14:42:03 -Visiting attribute path : department
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@510da778]
2018-04-27 14:42:03 -Visiting attribute path : email
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Visiting attribute path : password
2018-04-27 14:42:03 -Visiting attribute path : roles
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20a1b3ae]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54567b05]
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.User [UPGRADE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a5e2525]
2018-04-27 14:42:03 -Visiting attribute path : createDate
2018-04-27 14:42:03 -Visiting attribute path : department
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b458cd6]
2018-04-27 14:42:03 -Visiting attribute path : email
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Visiting attribute path : password
2018-04-27 14:42:03 -Visiting attribute path : roles
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c2c44e8]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7103745]
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_NOWAIT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@227a933d]
2018-04-27 14:42:03 -Visiting attribute path : createDate
2018-04-27 14:42:03 -Visiting attribute path : department
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bfb93cf]
2018-04-27 14:42:03 -Visiting attribute path : email
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Visiting attribute path : password
2018-04-27 14:42:03 -Visiting attribute path : roles
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@dd737ea]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc2ae16]
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.User [UPGRADE_SKIPLOCKED]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a0963be]
2018-04-27 14:42:03 -Visiting attribute path : createDate
2018-04-27 14:42:03 -Visiting attribute path : department
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49e7e8f1]
2018-04-27 14:42:03 -Visiting attribute path : email
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Visiting attribute path : password
2018-04-27 14:42:03 -Visiting attribute path : roles
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27bb4dc5]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@464ede1f]
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.User [FORCE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64910b2d]
2018-04-27 14:42:03 -Visiting attribute path : createDate
2018-04-27 14:42:03 -Visiting attribute path : department
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fef75c6]
2018-04-27 14:42:03 -Visiting attribute path : email
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Visiting attribute path : password
2018-04-27 14:42:03 -Visiting attribute path : roles
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f61e002]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@334540a0]
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_READ]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? lock in share mode
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f179f51]
2018-04-27 14:42:03 -Visiting attribute path : createDate
2018-04-27 14:42:03 -Visiting attribute path : department
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7308aa]
2018-04-27 14:42:03 -Visiting attribute path : email
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Visiting attribute path : password
2018-04-27 14:42:03 -Visiting attribute path : roles
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42aa1324]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6164e137]
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_WRITE]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ef8e623]
2018-04-27 14:42:03 -Visiting attribute path : createDate
2018-04-27 14:42:03 -Visiting attribute path : department
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fac80a8]
2018-04-27 14:42:03 -Visiting attribute path : email
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Visiting attribute path : password
2018-04-27 14:42:03 -Visiting attribute path : roles
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6987a133]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50778bde]
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=? for update
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1934339]
2018-04-27 14:42:03 -Visiting attribute path : createDate
2018-04-27 14:42:03 -Visiting attribute path : department
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eab8437]
2018-04-27 14:42:03 -Visiting attribute path : email
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Visiting attribute path : password
2018-04-27 14:42:03 -Visiting attribute path : roles
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72eed547]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69ffdaa8]
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a1e57c6]
2018-04-27 14:42:03 -Visiting attribute path : createDate
2018-04-27 14:42:03 -Visiting attribute path : department
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c96403e]
2018-04-27 14:42:03 -Visiting attribute path : email
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Visiting attribute path : password
2018-04-27 14:42:03 -Visiting attribute path : roles
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7babed9e]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2353354a]
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(entity=com.example.ren.model.mysql.User)
    - Returns
       - EntityReturnImpl(entity=com.example.ren.model.mysql.User, querySpaceUid=<gen:0>, path=com.example.ren.model.mysql.User)
          - EntityAttributeFetchImpl(entity=com.example.ren.model.mysql.Department, querySpaceUid=<gen:1>, path=com.example.ren.model.mysql.User.department)
          - CollectionAttributeFetchImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:2>, path=com.example.ren.model.mysql.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:3>, path=com.example.ren.model.mysql.User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.ren.model.mysql.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2018-04-27 14:42:03 -Static select for entity com.example.ren.model.mysql.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:42:03 -Static select for action ACTION_MERGE on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:42:03 -Static select for action ACTION_REFRESH on entity com.example.ren.model.mysql.User: select user0_.id as id1_2_0_, user0_.create_date as create_d2_2_0_, user0_.did as did6_2_0_, user0_.email as email3_2_0_, user0_.name as name4_2_0_, user0_.password as password5_2_0_ from user user0_ where user0_.id=?
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e385b6f]
2018-04-27 14:42:03 -Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67b560fe]
2018-04-27 14:42:03 -Visiting attribute path : name
2018-04-27 14:42:03 -Building LoadPlan...
2018-04-27 14:42:03 -processing queryspace <gen:0>
2018-04-27 14:42:03 -LoadPlan(collection=com.example.ren.model.mysql.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.example.ren.model.mysql.User.roles, querySpaceUid=<gen:0>, path=[com.example.ren.model.mysql.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.ren.model.mysql.Role, querySpaceUid=<gen:1>, path=[com.example.ren.model.mysql.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.ren.model.mysql.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.ren.model.mysql.Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2018-04-27 14:42:03 -Static select for collection com.example.ren.model.mysql.User.roles: select roles0_.user_id as user_id1_3_0_, roles0_.role_id as role_id2_3_0_, role1_.id as id1_1_1_, role1_.name as name2_1_1_ from user_role roles0_ inner join role role1_ on roles0_.role_id=role1_.id where roles0_.user_id=?
2018-04-27 14:42:03 -No alter strings for table : department
2018-04-27 14:42:03 -No alter strings for table : role
2018-04-27 14:42:03 -No alter strings for table : user
2018-04-27 14:42:03 -No alter strings for table : user_role
2018-04-27 14:42:03 -alter table user add constraint FK5638it980qu6b5hqi4trcbqw1 foreign key (did) references department (id)
2018-04-27 14:42:03 -alter table user_role add constraint FKa68196081fvovjhkek5m97n3y foreign key (role_id) references role (id)
2018-04-27 14:42:03 -alter table user_role add constraint FK859n2jvi8ivhui0rl0esws6o foreign key (user_id) references user (id)
2018-04-27 14:42:03 -Checking 0 named HQL queries
2018-04-27 14:42:03 -Checking 0 named SQL queries
2018-04-27 14:42:03 -Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@66298fe9
2018-04-27 14:42:03 -Registering SessionFactory: 80ca5da3-5f0d-41f2-8fc8-10b9dcb82355 (<unnamed>)
2018-04-27 14:42:03 -Not binding SessionFactory to JNDI, no JNDI name configured
2018-04-27 14:42:03 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:42:03 -Initialized JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:42:04 -init trackerLocator [192.168.71.161:22122]
2018-04-27 14:42:04 -Statistics initialized [enabled=false]
2018-04-27 14:42:04 -QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@386e9fd8
2018-04-27 14:42:04 -HHH000397: Using ASTQueryTranslatorFactory
2018-04-27 14:42:04 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 14:42:04 -throwQueryException() : no errors
2018-04-27 14:42:04 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2018-04-27 14:42:04 -select << begin [level=1, statement=select]
2018-04-27 14:42:04 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 14:42:04 -Resolved : t -> user0_.id
2018-04-27 14:42:04 -Resolved : t -> user0_.id
2018-04-27 14:42:04 -getDataType() : name -> org.hibernate.type.StringType@16d07cf3
2018-04-27 14:42:04 -Resolved : t.name -> user0_.name
2018-04-27 14:42:04 -select : finishing up [level=1, statement=select]
2018-04-27 14:42:04 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.name user0_.id name ) ? ) ) )
2018-04-27 14:42:04 -Using FROM fragment [user user0_]
2018-04-27 14:42:04 -select >> end [level=1, statement=select]
2018-04-27 14:42:04 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@16d07cf3}

2018-04-27 14:42:04 -throwQueryException() : no errors
2018-04-27 14:42:04 -HQL: select t from com.example.ren.model.mysql.User t where t.name like ?1 
2018-04-27 14:42:04 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name like ?
2018-04-27 14:42:04 -throwQueryException() : no errors
2018-04-27 14:42:04 -parse() - HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 14:42:04 -throwQueryException() : no errors
2018-04-27 14:42:04 ---- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  |  |  \-[IDENT] Node: 'ren'
    |  |     |  |  |  \-[IDENT] Node: 'model'
    |  |     |  |  \-[IDENT] Node: 'mysql'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'name'
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 't'
             |  \-[IDENT] Node: 'email'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2018-04-27 14:42:04 -select << begin [level=1, statement=select]
2018-04-27 14:42:04 -FromClause{level=1} : com.example.ren.model.mysql.User (t) -> user0_
2018-04-27 14:42:04 -Resolved : t -> user0_.id
2018-04-27 14:42:04 -Resolved : t -> user0_.id
2018-04-27 14:42:04 -getDataType() : name -> org.hibernate.type.StringType@16d07cf3
2018-04-27 14:42:04 -Resolved : t.name -> user0_.name
2018-04-27 14:42:04 -Resolved : t -> user0_.id
2018-04-27 14:42:04 -getDataType() : email -> org.hibernate.type.StringType@16d07cf3
2018-04-27 14:42:04 -Resolved : t.email -> user0_.email
2018-04-27 14:42:04 -select : finishing up [level=1, statement=select]
2018-04-27 14:42:04 -processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.name user0_.id name ) ? ) ( = ( user0_.email user0_.id email ) ? ) ) ) )
2018-04-27 14:42:04 -Using FROM fragment [user user0_]
2018-04-27 14:42:04 -select >> end [level=1, statement=select]
2018-04-27 14:42:04 ---- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[t], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.example.ren.model.mysql.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=t.name,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@16d07cf3}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=t.email,tableAlias=user0_,className=com.example.ren.model.mysql.User,classAlias=t}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=t, className=com.example.ren.model.mysql.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'email' {originalText=email}
             \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@16d07cf3}

2018-04-27 14:42:04 -throwQueryException() : no errors
2018-04-27 14:42:04 -HQL: select t from com.example.ren.model.mysql.User t where t.name = ?1 and t.email = ?2
2018-04-27 14:42:04 -SQL: select user0_.id as id1_2_, user0_.create_date as create_d2_2_, user0_.did as did6_2_, user0_.email as email3_2_, user0_.name as name4_2_, user0_.password as password5_2_ from user user0_ where user0_.name=? and user0_.email=?
2018-04-27 14:42:04 -throwQueryException() : no errors
2018-04-27 14:42:04 -Using SLF4J as the default logging framework
2018-04-27 14:42:04 --Dio.netty.eventLoopThreads: 4
2018-04-27 14:42:05 --Dio.netty.leakDetection.level: simple
2018-04-27 14:42:05 --Dio.netty.leakDetection.targetRecords: 4
2018-04-27 14:42:05 -Platform: Windows
2018-04-27 14:42:05 --Dio.netty.noUnsafe: false
2018-04-27 14:42:05 -Java version: 8
2018-04-27 14:42:05 -sun.misc.Unsafe.theUnsafe: available
2018-04-27 14:42:05 -sun.misc.Unsafe.copyMemory: available
2018-04-27 14:42:05 -java.nio.Buffer.address: available
2018-04-27 14:42:05 -direct buffer constructor: available
2018-04-27 14:42:05 -java.nio.Bits.unaligned: available, true
2018-04-27 14:42:05 -jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2018-04-27 14:42:05 -java.nio.DirectByteBuffer.<init>(long, int): available
2018-04-27 14:42:05 -sun.misc.Unsafe: available
2018-04-27 14:42:05 --Dio.netty.tmpdir: C:\Users\Qiang\AppData\Local\Temp (java.io.tmpdir)
2018-04-27 14:42:05 --Dio.netty.bitMode: 64 (sun.arch.data.model)
2018-04-27 14:42:05 --Dio.netty.noPreferDirect: false
2018-04-27 14:42:05 --Dio.netty.maxDirectMemory: 3780640768 bytes
2018-04-27 14:42:05 --Dio.netty.uninitializedArrayAllocationThreshold: -1
2018-04-27 14:42:05 -java.nio.ByteBuffer.cleaner(): available
2018-04-27 14:42:05 -Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7aa3857b
2018-04-27 14:42:05 -org.jctools-core.MpscChunkedArrayQueue: available
2018-04-27 14:42:05 -Using Slf4j logging framework
2018-04-27 14:42:05 -Starting UnsafeSupport init in Java 1.8
2018-04-27 14:42:05 -Unsafe is available
2018-04-27 14:42:05 -LatencyUtils/HdrUtils are not available, metrics are disabled
2018-04-27 14:42:05 --Dio.netty.allocator.numHeapArenas: 8
2018-04-27 14:42:05 --Dio.netty.allocator.numDirectArenas: 8
2018-04-27 14:42:05 --Dio.netty.allocator.pageSize: 8192
2018-04-27 14:42:05 --Dio.netty.allocator.maxOrder: 11
2018-04-27 14:42:05 --Dio.netty.allocator.chunkSize: 16777216
2018-04-27 14:42:05 --Dio.netty.allocator.tinyCacheSize: 512
2018-04-27 14:42:05 --Dio.netty.allocator.smallCacheSize: 256
2018-04-27 14:42:05 --Dio.netty.allocator.normalCacheSize: 64
2018-04-27 14:42:05 --Dio.netty.allocator.maxCachedBufferCapacity: 32768
2018-04-27 14:42:05 --Dio.netty.allocator.cacheTrimInterval: 8192
2018-04-27 14:42:05 --Dio.netty.allocator.useCacheForAllThreads: true
2018-04-27 14:42:05 --Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2018-04-27 14:42:05 --Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userId
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.userName
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.password
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.realName
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.lang.String com.example.ren.model.mongo.MongoUser.email
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Date com.example.ren.model.mongo.MongoUser.registrationDate
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.mongo.MongoUser when creating persistent property for : private java.util.Set com.example.ren.model.mongo.MongoUser.roles
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.name
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.author
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 14:42:05 -No identity field found for class of type: com.example.ren.model.BookBean when creating persistent property for : private java.lang.String com.example.ren.model.BookBean.price
2018-04-27 14:42:05 -Neo4jMappingContext initialisation completed
2018-04-27 14:42:05 -Neo4jMappingContext initialisation completed
2018-04-27 14:42:06 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 14:42:06 -spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2018-04-27 14:42:06 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 14:42:06 -spring.data.neo4j.open-in-view is enabled by default.Therefore, database queries may be performed during view rendering. Explicitly configure spring.data.neo4j.open-in-view to disable this warning
2018-04-27 14:42:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:42:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.8 ms, state=CONNECTED}]
2018-04-27 14:42:07 -Cluster created with settings {hosts=[192.168.71.151:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2018-04-27 14:42:07 -Updating cluster description to  {type=UNKNOWN, servers=[{address=192.168.71.151:27017, type=UNKNOWN, state=CONNECTING}]
2018-04-27 14:42:07 -Opened connection [connectionId{localValue:1, serverValue:33}] to 192.168.71.151:27017
2018-04-27 14:42:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:42:07 -Monitor thread successfully connected to server with description ServerDescription{address=192.168.71.151:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 2]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=6284005}
2018-04-27 14:42:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=6.3 ms, state=CONNECTED}]
2018-04-27 14:42:07 -Opened connection [connectionId{localValue:2, serverValue:34}] to 192.168.71.151:27017
2018-04-27 14:42:07 -Sending command {createIndexes : BsonString{value='user'}} to database test on connection [connectionId{localValue:2, serverValue:34}] to server 192.168.71.151:27017
2018-04-27 14:42:07 -Command execution completed
2018-04-27 14:42:07 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 14:42:07 -Mapped "{[/book/get2],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook2() throws com.example.ren.exception.DataFormatException
2018-04-27 14:42:07 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 14:42:07 -Mapped "{[/book/get],methods=[GET]}" onto public com.example.ren.model.BookBean com.example.ren.controller.BookController.getBook()
2018-04-27 14:42:07 -Mapped "{[/file/upload/small],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.uploadAndCrtThumbImage(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/file/upload/small],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.uploadAndCrtThumbImage(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/file/upload],methods=[POST]}" onto public java.lang.String com.example.ren.controller.fastdfs.FastdfsController.upload(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 14:42:07 -Mapped "{[/swagger/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.SwaggerLoginController.showLoginPage()
2018-04-27 14:42:07 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 14:42:07 -Mapped "{[/swagger/verify/code],methods=[GET]}" onto public void com.example.ren.controller.mysql.SwaggerLoginController.verifyCode(javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-27 14:42:07 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 14:42:07 -Mapped "{[/swagger/login/check],methods=[POST]}" onto public int com.example.ren.controller.mysql.SwaggerLoginController.loginCheck(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2018-04-27 14:42:07 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 14:42:07 -Mapped "{[/user/login/view]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.login()
2018-04-27 14:42:07 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/user/{id}],methods=[GET]}" onto public com.example.ren.model.mysql.User com.example.ren.controller.mysql.UserController.getUser(java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 14:42:07 -Mapped "{[/user/hello]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.mysql.UserController.hello()
2018-04-27 14:42:07 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 14:42:07 -Mapped "{[/actor/index]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.index()
2018-04-27 14:42:07 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/actor/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/actor/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.update(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/actor/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.delete(java.lang.Long) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 14:42:07 -Mapped "{[/actor/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.create()
2018-04-27 14:42:07 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/actor/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Actor> com.example.ren.controller.neo4j.ActorController.list(javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/actor/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.ActorController.save(com.example.ren.model.neo4j.Actor) throws java.lang.Exception
2018-04-27 14:42:07 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/actor/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.ActorController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/movie/edit/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.update(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 14:42:07 -Mapped "{[/movie/update],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.update(com.example.ren.model.neo4j.Movie,javax.servlet.http.HttpServletRequest)
2018-04-27 14:42:07 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/movie/delete/{id}],methods=[GET]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.delete(java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 14:42:07 -Mapped "{[/movie/new]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.create(org.springframework.ui.ModelMap)
2018-04-27 14:42:07 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 14:42:07 -Mapped "{[/movie/list]}" onto public org.springframework.data.domain.Page<com.example.ren.model.neo4j.Movie> com.example.ren.controller.neo4j.MovieController.list(javax.servlet.http.HttpServletRequest)
2018-04-27 14:42:07 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 14:42:07 -Mapped "{[/movie/save],methods=[POST]}" onto public java.lang.String com.example.ren.controller.neo4j.MovieController.save(com.example.ren.model.neo4j.Movie)
2018-04-27 14:42:07 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/movie/{id}]}" onto public org.springframework.web.servlet.ModelAndView com.example.ren.controller.neo4j.MovieController.show(org.springframework.ui.ModelMap,java.lang.Long)
2018-04-27 14:42:07 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 14:42:07 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-27 14:42:07 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 14:42:07 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-04-27 14:42:07 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 14:42:07 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-04-27 14:42:07 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 14:42:07 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-04-27 14:42:07 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 14:42:07 -Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-04-27 14:42:07 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 14:42:07 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-04-27 14:42:08 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:42:08 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:42:08 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:42:08 -Loaded expression factory via original TCCL
2018-04-27 14:42:08 -Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-27 14:42:08 -Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2018-04-27 14:42:08 -Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
2018-04-27 14:42:08 -Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2018-04-27 14:42:08 -Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2018-04-27 14:42:08 -Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2018-04-27 14:42:08 -Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-27 14:42:08 -Trying to load META-INF/validation.xml via user class loader
2018-04-27 14:42:08 -Trying to load META-INF/validation.xml via TCCL
2018-04-27 14:42:08 -Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2018-04-27 14:42:08 -No META-INF/validation.xml found. Using annotation based configuration only.
2018-04-27 14:42:08 -HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2018-04-27 14:42:08 -HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
2018-04-27 14:42:08 -HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2018-04-27 14:42:08 -HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2018-04-27 14:42:08 -HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2018-04-27 14:42:08 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 14:41:58 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:42:08 -Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 14:41:58 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:42:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:42:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:42:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:42:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:42:08 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 14:42:08 -Detected @ExceptionHandler methods in exceptionHandlerController
2018-04-27 14:42:08 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:42:08 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-04-27 14:42:09 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 14:42:09 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-27 14:42:09 -Registering beans for JMX exposure on startup
2018-04-27 14:42:09 -Registering beans for JMX exposure on startup
2018-04-27 14:42:09 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 14:42:09 -Bean with name 'fdfsConnectionPool' has been autodetected for JMX exposure
2018-04-27 14:42:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 14:42:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2018-04-27 14:42:09 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 14:42:09 -Located MBean 'fdfsConnectionPool': registering with JMX server as MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool]
2018-04-27 14:42:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 14:42:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-04-27 14:42:09 -Starting beans in phase 2147483647
2018-04-27 14:42:09 -Starting beans in phase 2147483647
2018-04-27 14:42:09 -Context refreshed
2018-04-27 14:42:09 -Context refreshed
2018-04-27 14:42:09 -Found 1 custom documentation plugin(s)
2018-04-27 14:42:09 -Found 1 custom documentation plugin(s)
2018-04-27 14:42:09 -Scanning for api listing references
2018-04-27 14:42:09 -Scanning for api listing references
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: updateUsingPOST_1
2018-04-27 14:42:10 -Generating unique operation named: updateUsingPOST_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: createUsingGET_1
2018-04-27 14:42:10 -Generating unique operation named: createUsingGET_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: createUsingHEAD_1
2018-04-27 14:42:10 -Generating unique operation named: createUsingHEAD_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: createUsingPOST_1
2018-04-27 14:42:10 -Generating unique operation named: createUsingPOST_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: createUsingPUT_1
2018-04-27 14:42:10 -Generating unique operation named: createUsingPUT_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: createUsingPATCH_1
2018-04-27 14:42:10 -Generating unique operation named: createUsingPATCH_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: createUsingDELETE_1
2018-04-27 14:42:10 -Generating unique operation named: createUsingDELETE_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 14:42:10 -Generating unique operation named: createUsingOPTIONS_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: createUsingTRACE_1
2018-04-27 14:42:10 -Generating unique operation named: createUsingTRACE_1
2018-04-27 14:42:10 -Generating unique operation named: deleteUsingGET_1
2018-04-27 14:42:10 -Generating unique operation named: deleteUsingGET_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingGET_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingGET_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingHEAD_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingHEAD_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingPOST_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingPOST_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingPUT_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingPUT_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingPATCH_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingPATCH_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingDELETE_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingDELETE_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingOPTIONS_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingTRACE_1
2018-04-27 14:42:10 -Generating unique operation named: listUsingTRACE_1
2018-04-27 14:42:10 -Generating unique operation named: saveUsingPOST_1
2018-04-27 14:42:10 -Generating unique operation named: saveUsingPOST_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: showUsingGET_1
2018-04-27 14:42:10 -Generating unique operation named: showUsingGET_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: showUsingHEAD_1
2018-04-27 14:42:10 -Generating unique operation named: showUsingHEAD_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: showUsingPOST_1
2018-04-27 14:42:10 -Generating unique operation named: showUsingPOST_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: showUsingPUT_1
2018-04-27 14:42:10 -Generating unique operation named: showUsingPUT_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: showUsingPATCH_1
2018-04-27 14:42:10 -Generating unique operation named: showUsingPATCH_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: showUsingDELETE_1
2018-04-27 14:42:10 -Generating unique operation named: showUsingDELETE_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 14:42:10 -Generating unique operation named: showUsingOPTIONS_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: showUsingTRACE_1
2018-04-27 14:42:10 -Generating unique operation named: showUsingTRACE_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: updateUsingGET_1
2018-04-27 14:42:10 -Generating unique operation named: updateUsingGET_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 14:42:10 -Generating unique operation named: updateUsingHEAD_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: updateUsingPOST_2
2018-04-27 14:42:10 -Generating unique operation named: updateUsingPOST_2
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: updateUsingPUT_1
2018-04-27 14:42:10 -Generating unique operation named: updateUsingPUT_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 14:42:10 -Generating unique operation named: updateUsingPATCH_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 14:42:10 -Generating unique operation named: updateUsingDELETE_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 14:42:10 -Generating unique operation named: updateUsingOPTIONS_1
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Trying to infer dataType org.springframework.ui.ModelMap
2018-04-27 14:42:10 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 14:42:10 -Generating unique operation named: updateUsingTRACE_1
2018-04-27 14:42:10 -Generating unique operation named: updateUsingPOST_3
2018-04-27 14:42:10 -Generating unique operation named: updateUsingPOST_3
2018-04-27 14:42:10 -Started FastdfsTests in 13.604 seconds (JVM running for 15.3)
2018-04-27 14:42:11 -获取到Tracker连接地址/192.168.71.161:22122
2018-04-27 14:42:11 -connect to /192.168.71.161:22122 soTimeout=1501 connectTimeout=601
2018-04-27 14:42:11 -对地址/192.168.71.161:22122发出交易请求TrackerGetFetchStorageCommand
2018-04-27 14:42:11 -Setting default value: false
2018-04-27 14:42:11 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 14:42:11 -    No conversion required, value is already a Boolean
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 14:42:11 -    Converted to Byte value '0'
2018-04-27 14:42:11 -Setting default value:  
2018-04-27 14:42:11 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 14:42:11 -    No conversion required, value is already a Character
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 14:42:11 -    Converted to Double value '0.0'
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 14:42:11 -    Converted to Float value '0.0'
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 14:42:11 -    No conversion required, value is already a Integer
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 14:42:11 -    Converted to Long value '0'
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 14:42:11 -    Converted to Short value '0'
2018-04-27 14:42:11 -Setting default value: 0.0
2018-04-27 14:42:11 -Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
2018-04-27 14:42:11 -    No conversion required, value is already a BigDecimal
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'BigInteger' value '0' to type 'BigInteger'
2018-04-27 14:42:11 -    No conversion required, value is already a BigInteger
2018-04-27 14:42:11 -Setting default value: false
2018-04-27 14:42:11 -Converting 'Boolean' value 'false' to type 'Boolean'
2018-04-27 14:42:11 -    No conversion required, value is already a Boolean
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Byte'
2018-04-27 14:42:11 -    Converted to Byte value '0'
2018-04-27 14:42:11 -Setting default value:  
2018-04-27 14:42:11 -Converting 'Character' value ' ' to type 'Character'
2018-04-27 14:42:11 -    No conversion required, value is already a Character
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Double'
2018-04-27 14:42:11 -    Converted to Double value '0.0'
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Float'
2018-04-27 14:42:11 -    Converted to Float value '0.0'
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Integer'
2018-04-27 14:42:11 -    No conversion required, value is already a Integer
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Long'
2018-04-27 14:42:11 -    Converted to Long value '0'
2018-04-27 14:42:11 -Setting default value: 0
2018-04-27 14:42:11 -Converting 'Integer' value '0' to type 'Short'
2018-04-27 14:42:11 -    Converted to Short value '0'
2018-04-27 14:42:11 -Setting default value: 
2018-04-27 14:42:11 -Converting 'String' value '' to type 'String'
2018-04-27 14:42:11 -Setting default value: [Z@11771fd6
2018-04-27 14:42:11 -Converting 'boolean[]' value '[Z@11771fd6' to type 'boolean[]'
2018-04-27 14:42:11 -    No conversion required, value is already a boolean[]
2018-04-27 14:42:11 -Setting default value: [B@1c512bb
2018-04-27 14:42:11 -Converting 'byte[]' value '[B@1c512bb' to type 'byte[]'
2018-04-27 14:42:11 -    No conversion required, value is already a byte[]
2018-04-27 14:42:11 -Setting default value: [C@4d142b53
2018-04-27 14:42:11 -Converting 'char[]' value '[C@4d142b53' to type 'char[]'
2018-04-27 14:42:11 -    No conversion required, value is already a char[]
2018-04-27 14:42:11 -Setting default value: [D@3bac86a3
2018-04-27 14:42:11 -Converting 'double[]' value '[D@3bac86a3' to type 'double[]'
2018-04-27 14:42:11 -    No conversion required, value is already a double[]
2018-04-27 14:42:11 -Setting default value: [F@128ca7af
2018-04-27 14:42:11 -Converting 'float[]' value '[F@128ca7af' to type 'float[]'
2018-04-27 14:42:11 -    No conversion required, value is already a float[]
2018-04-27 14:42:11 -Setting default value: [I@3bf52f8f
2018-04-27 14:42:11 -Converting 'int[]' value '[I@3bf52f8f' to type 'int[]'
2018-04-27 14:42:11 -    No conversion required, value is already a int[]
2018-04-27 14:42:11 -Setting default value: [J@57d7c511
2018-04-27 14:42:11 -Converting 'long[]' value '[J@57d7c511' to type 'long[]'
2018-04-27 14:42:11 -    No conversion required, value is already a long[]
2018-04-27 14:42:11 -Setting default value: [S@811d8d6
2018-04-27 14:42:11 -Converting 'short[]' value '[S@811d8d6' to type 'short[]'
2018-04-27 14:42:11 -    No conversion required, value is already a short[]
2018-04-27 14:42:11 -Setting default value: [Ljava.math.BigDecimal;@7f57a7a4
2018-04-27 14:42:11 -Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@7f57a7a4' to type 'BigDecimal[]'
2018-04-27 14:42:11 -    No conversion required, value is already a BigDecimal[]
2018-04-27 14:42:11 -Setting default value: [Ljava.math.BigInteger;@45ac973
2018-04-27 14:42:11 -Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@45ac973' to type 'BigInteger[]'
2018-04-27 14:42:11 -    No conversion required, value is already a BigInteger[]
2018-04-27 14:42:11 -Setting default value: [Ljava.lang.Boolean;@40239b34
2018-04-27 14:42:11 -Converting 'Boolean[]' value '[Ljava.lang.Boolean;@40239b34' to type 'Boolean[]'
2018-04-27 14:42:11 -    No conversion required, value is already a Boolean[]
2018-04-27 14:42:11 -Setting default value: [Ljava.lang.Byte;@4e553d60
2018-04-27 14:42:11 -Converting 'Byte[]' value '[Ljava.lang.Byte;@4e553d60' to type 'Byte[]'
2018-04-27 14:42:11 -    No conversion required, value is already a Byte[]
2018-04-27 14:42:11 -Setting default value: [Ljava.lang.Character;@1c966488
2018-04-27 14:42:11 -Converting 'Character[]' value '[Ljava.lang.Character;@1c966488' to type 'Character[]'
2018-04-27 14:42:11 -    No conversion required, value is already a Character[]
2018-04-27 14:42:11 -Setting default value: [Ljava.lang.Double;@45f6181a
2018-04-27 14:42:11 -Converting 'Double[]' value '[Ljava.lang.Double;@45f6181a' to type 'Double[]'
2018-04-27 14:42:11 -    No conversion required, value is already a Double[]
2018-04-27 14:42:11 -Setting default value: [Ljava.lang.Float;@19d0d1ab
2018-04-27 14:42:11 -Converting 'Float[]' value '[Ljava.lang.Float;@19d0d1ab' to type 'Float[]'
2018-04-27 14:42:11 -    No conversion required, value is already a Float[]
2018-04-27 14:42:11 -Setting default value: [Ljava.lang.Integer;@7e0941cc
2018-04-27 14:42:11 -Converting 'Integer[]' value '[Ljava.lang.Integer;@7e0941cc' to type 'Integer[]'
2018-04-27 14:42:11 -    No conversion required, value is already a Integer[]
2018-04-27 14:42:11 -Setting default value: [Ljava.lang.Long;@5114c8a1
2018-04-27 14:42:11 -Converting 'Long[]' value '[Ljava.lang.Long;@5114c8a1' to type 'Long[]'
2018-04-27 14:42:11 -    No conversion required, value is already a Long[]
2018-04-27 14:42:11 -Setting default value: [Ljava.lang.Short;@24d73c51
2018-04-27 14:42:11 -Converting 'Short[]' value '[Ljava.lang.Short;@24d73c51' to type 'Short[]'
2018-04-27 14:42:11 -    No conversion required, value is already a Short[]
2018-04-27 14:42:11 -Setting default value: [Ljava.lang.String;@3b95fce9
2018-04-27 14:42:11 -Converting 'String[]' value '[Ljava.lang.String;@3b95fce9' to type 'String[]'
2018-04-27 14:42:11 -    No conversion required, value is already a String[]
2018-04-27 14:42:11 -Setting default value: [Ljava.lang.Class;@f26cd76
2018-04-27 14:42:11 -Converting 'Class[]' value '[Ljava.lang.Class;@f26cd76' to type 'Class[]'
2018-04-27 14:42:11 -    No conversion required, value is already a Class[]
2018-04-27 14:42:11 -Setting default value: [Ljava.util.Date;@78805df3
2018-04-27 14:42:11 -Converting 'Date[]' value '[Ljava.util.Date;@78805df3' to type 'Date[]'
2018-04-27 14:42:11 -    No conversion required, value is already a Date[]
2018-04-27 14:42:11 -Setting default value: [Ljava.util.Calendar;@71ce19ee
2018-04-27 14:42:11 -Converting 'Calendar[]' value '[Ljava.util.Calendar;@71ce19ee' to type 'Calendar[]'
2018-04-27 14:42:11 -    No conversion required, value is already a Calendar[]
2018-04-27 14:42:11 -Setting default value: [Ljava.io.File;@322f84fd
2018-04-27 14:42:11 -Converting 'java.io.File[]' value '[Ljava.io.File;@322f84fd' to type 'java.io.File[]'
2018-04-27 14:42:11 -    No conversion required, value is already a java.io.File[]
2018-04-27 14:42:11 -Setting default value: [Ljava.sql.Date;@10bcbbed
2018-04-27 14:42:11 -Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@10bcbbed' to type 'java.sql.Date[]'
2018-04-27 14:42:11 -    No conversion required, value is already a java.sql.Date[]
2018-04-27 14:42:11 -Setting default value: [Ljava.sql.Time;@47e70f54
2018-04-27 14:42:11 -Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@47e70f54' to type 'java.sql.Time[]'
2018-04-27 14:42:11 -    No conversion required, value is already a java.sql.Time[]
2018-04-27 14:42:11 -Setting default value: [Ljava.sql.Timestamp;@45302e66
2018-04-27 14:42:11 -Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@45302e66' to type 'java.sql.Timestamp[]'
2018-04-27 14:42:11 -    No conversion required, value is already a java.sql.Timestamp[]
2018-04-27 14:42:11 -Setting default value: [Ljava.net.URL;@382608d0
2018-04-27 14:42:11 -Converting 'java.net.URL[]' value '[Ljava.net.URL;@382608d0' to type 'java.net.URL[]'
2018-04-27 14:42:11 -    No conversion required, value is already a java.net.URL[]
2018-04-27 14:42:11 -发出交易请求..报文头为ProtoHead [contentLength=60, cmd=102, status=0]
2018-04-27 14:42:11 -交易参数为[103, 114, 111, 117, 112, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 48, 48, 47, 48, 48, 47, 48, 48, 47, 119, 75, 104, 72, 110, 108, 114, 105, 103, 111, 67, 65, 80, 65, 56, 77, 65, 65, 68, 103, 57, 79, 83, 73, 112, 117, 111, 49, 57, 52, 46, 112, 110, 103]
2018-04-27 14:42:11 -服务端返回报文头ProtoHead [contentLength=39, cmd=100, status=0]
2018-04-27 14:42:11 -dump class=com.github.tobato.fastdfs.domain.StorageNodeInfo
2018-04-27 14:42:11 -----------------------------------------
2018-04-27 14:42:11 -FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]
2018-04-27 14:42:11 -FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]
2018-04-27 14:42:11 -FieldMateData [field=port, index=2, max=0, size=8, offsize=31]
2018-04-27 14:42:11 -设置值是 FieldMateData [field=groupName, index=0, max=16, size=16, offsize=0]group1
2018-04-27 14:42:11 -Convert string 'group1' to class 'java.lang.String'
2018-04-27 14:42:11 -Converting 'String' value 'group1' to type 'String'
2018-04-27 14:42:11 -设置值是 FieldMateData [field=ip, index=1, max=15, size=15, offsize=16]192.168.71.158
2018-04-27 14:42:11 -Convert string '192.168.71.158' to class 'java.lang.String'
2018-04-27 14:42:11 -Converting 'String' value '192.168.71.158' to type 'String'
2018-04-27 14:42:11 -设置值是 FieldMateData [field=port, index=2, max=0, size=8, offsize=31]23000
2018-04-27 14:42:11 -Converting 'Integer' value '23000' to type 'Integer'
2018-04-27 14:42:11 -    No conversion required, value is already a Integer
2018-04-27 14:42:11 -connect to /192.168.71.158:23000 soTimeout=1501 connectTimeout=601
2018-04-27 14:42:11 -对地址/192.168.71.158:23000发出交易请求StorageDownloadCommand
2018-04-27 14:42:11 -发出交易请求..报文头为ProtoHead [contentLength=76, cmd=14, status=0]
2018-04-27 14:42:11 -交易参数为[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 114, 111, 117, 112, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 48, 48, 47, 48, 48, 47, 48, 48, 47, 119, 75, 104, 72, 110, 108, 114, 105, 103, 111, 67, 65, 80, 65, 56, 77, 65, 65, 68, 103, 57, 79, 83, 73, 112, 117, 111, 49, 57, 52, 46, 112, 110, 103]
2018-04-27 14:42:11 -服务端返回报文头ProtoHead [contentLength=57588, cmd=100, status=0]
2018-04-27 14:42:11 -execute fdfs command error
java.lang.NullPointerException: null
	at com.github.tobato.fastdfs.proto.storage.internal.StorageDownloadResponse.decodeContent(StorageDownloadResponse.java:34)
	at com.github.tobato.fastdfs.proto.FdfsResponse.decode(FdfsResponse.java:54)
	at com.github.tobato.fastdfs.proto.AbstractFdfsCommand.receive(AbstractFdfsCommand.java:105)
	at com.github.tobato.fastdfs.proto.AbstractFdfsCommand.execute(AbstractFdfsCommand.java:45)
	at com.github.tobato.fastdfs.conn.ConnectionManager.execute(ConnectionManager.java:76)
	at com.github.tobato.fastdfs.conn.ConnectionManager.executeFdfsCmd(ConnectionManager.java:61)
	at com.github.tobato.fastdfs.service.DefaultGenerateStorageClient.downloadFile(DefaultGenerateStorageClient.java:141)
	at com.github.tobato.fastdfs.service.DefaultGenerateStorageClient.downloadFile(DefaultGenerateStorageClient.java:130)
	at com.example.ren.utils.FastdfsClient.downloadFile(FastdfsClient.java:85)
	at com.example.ren.fastdfs.FastdfsTests.downloadTest(FastdfsTests.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:237)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
2018-04-27 14:42:11 -Closing org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 14:41:58 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:42:11 -Closing org.springframework.web.context.support.GenericWebApplicationContext@3af0a9da: startup date [Fri Apr 27 14:41:58 GMT+08:00 2018]; root of context hierarchy
2018-04-27 14:42:11 -Stopping beans in phase 2147483647
2018-04-27 14:42:11 -Stopping beans in phase 2147483647
2018-04-27 14:42:11 -Unregistering JMX-exposed beans on shutdown
2018-04-27 14:42:11 -Unregistering JMX-exposed beans on shutdown
2018-04-27 14:42:11 -Unregistering JMX-exposed beans
2018-04-27 14:42:11 -Unregistering JMX-exposed beans
2018-04-27 14:42:11 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 14:42:11 -Could not unregister MBean [com.github.tobato.fastdfs.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2018-04-27 14:42:11 -disconnect from Socket[addr=/192.168.71.161,port=22122,localport=60477]
2018-04-27 14:42:11 -disconnect from Socket[addr=/192.168.71.158,port=23000,localport=60478]
2018-04-27 14:42:11 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:42:11 -Closing JPA EntityManagerFactory for persistence unit 'default'
2018-04-27 14:42:11 -HHH000031: Closing
2018-04-27 14:42:11 -External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
2018-04-27 14:42:11 -Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2018-04-27 14:42:11 -Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2018-04-27 14:42:11 -{dataSource-1} closed
2018-04-27 14:42:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:42:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=4.2 ms, state=CONNECTED}]
2018-04-27 14:42:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:42:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.7 ms, state=CONNECTED}]
2018-04-27 14:42:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:42:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=3.1 ms, state=CONNECTED}]
2018-04-27 14:42:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:42:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.9 ms, state=CONNECTED}]
2018-04-27 14:42:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:42:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.5 ms, state=CONNECTED}]
2018-04-27 14:43:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:43:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.2 ms, state=CONNECTED}]
2018-04-27 14:43:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:43:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.9 ms, state=CONNECTED}]
2018-04-27 14:43:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:43:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.7 ms, state=CONNECTED}]
2018-04-27 14:43:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:43:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:43:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:43:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:43:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:43:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:44:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:44:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:44:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:44:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:44:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:44:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:44:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:44:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:44:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:44:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:44:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:44:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:45:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:45:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:45:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:45:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:45:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:45:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:45:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:45:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:45:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:45:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:45:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:45:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:46:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:46:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:46:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:46:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:46:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:46:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:46:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:46:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:46:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:46:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:46:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:46:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:47:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:47:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:47:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:47:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:47:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:47:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:47:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:47:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:47:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:47:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:47:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:47:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:48:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:48:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:48:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:48:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:48:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:48:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:48:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:48:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:48:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:48:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:48:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:48:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:49:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:49:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:49:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:49:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:49:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:49:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:49:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:49:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:49:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:49:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:49:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:49:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:50:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:50:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:50:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:50:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:50:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:50:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:50:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:50:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:50:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:50:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:50:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:50:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:51:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:51:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 14:51:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:51:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 14:51:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:51:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 14:51:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:51:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:51:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:51:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 14:51:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:51:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:52:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:52:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:52:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:52:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:52:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:52:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:52:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:52:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:52:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:52:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:52:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:52:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:53:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:53:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:53:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:53:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:53:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:53:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:53:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:53:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:53:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:53:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:53:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:53:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:54:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:54:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:54:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:54:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:54:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:54:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:54:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:54:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:54:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:54:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:54:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:54:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:55:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:55:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:55:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:55:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:55:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:55:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:55:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:55:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:55:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:55:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:55:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:55:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:56:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:56:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:56:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:56:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 14:56:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:56:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:56:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:56:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:56:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:56:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:56:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:56:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:57:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:57:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:57:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:57:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:57:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:57:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 14:57:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:57:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:57:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:57:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 14:57:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:57:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=2.1 ms, state=CONNECTED}]
2018-04-27 14:58:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:58:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.8 ms, state=CONNECTED}]
2018-04-27 14:58:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:58:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 14:58:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:58:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:58:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:58:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:58:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:58:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 14:58:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:58:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:59:07 -Checking status of 192.168.71.151:27017
2018-04-27 14:59:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:59:17 -Checking status of 192.168.71.151:27017
2018-04-27 14:59:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 14:59:27 -Checking status of 192.168.71.151:27017
2018-04-27 14:59:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:59:37 -Checking status of 192.168.71.151:27017
2018-04-27 14:59:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 14:59:47 -Checking status of 192.168.71.151:27017
2018-04-27 14:59:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 14:59:57 -Checking status of 192.168.71.151:27017
2018-04-27 14:59:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:00:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:00:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 15:00:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:00:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 15:00:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:00:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:00:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:00:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:00:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:00:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:00:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:00:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:01:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:01:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:01:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:01:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:01:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:01:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:01:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:01:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:01:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:01:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:01:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:01:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:02:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:02:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:02:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:02:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 15:02:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:02:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:02:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:02:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:02:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:02:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 15:02:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:02:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:03:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:03:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:03:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:03:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:03:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:03:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:03:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:03:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:03:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:03:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:03:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:03:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:04:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:04:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:04:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:04:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:04:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:04:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:04:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:04:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:04:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:04:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:04:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:04:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:05:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:05:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:05:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:05:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 15:05:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:05:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 15:05:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:05:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 15:05:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:05:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 15:05:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:05:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 15:06:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:06:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 15:06:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:06:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.7 ms, state=CONNECTED}]
2018-04-27 15:06:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:06:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 15:06:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:06:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:06:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:06:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 15:06:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:06:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 15:07:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:07:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 15:07:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:07:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 15:07:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:07:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.6 ms, state=CONNECTED}]
2018-04-27 15:07:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:07:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 15:07:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:07:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 15:07:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:07:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 15:08:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:08:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:08:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:08:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:08:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:08:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:08:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:08:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:08:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:08:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:08:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:08:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:09:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:09:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:09:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:09:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:09:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:09:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:09:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:09:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 15:09:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:09:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 15:09:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:09:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 15:10:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:10:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:10:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:10:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:10:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:10:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:10:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:10:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 15:10:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:10:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 15:10:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:10:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:11:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:11:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:11:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:11:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:11:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:11:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:11:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:11:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:11:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:11:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:11:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:11:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:12:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:12:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:12:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:12:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:12:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:12:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:12:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:12:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:12:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:12:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:12:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:12:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 15:13:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:13:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 15:13:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:13:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:13:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:13:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:13:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:13:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:13:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:13:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.2 ms, state=CONNECTED}]
2018-04-27 15:13:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:13:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:14:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:14:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:14:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:14:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:14:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:14:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:14:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:14:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:14:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:14:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.8 ms, state=CONNECTED}]
2018-04-27 15:14:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:14:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=0.9 ms, state=CONNECTED}]
2018-04-27 15:15:07 -Checking status of 192.168.71.151:27017
2018-04-27 15:15:07 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.1 ms, state=CONNECTED}]
2018-04-27 15:15:17 -Checking status of 192.168.71.151:27017
2018-04-27 15:15:17 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.0 ms, state=CONNECTED}]
2018-04-27 15:15:27 -Checking status of 192.168.71.151:27017
2018-04-27 15:15:27 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.5 ms, state=CONNECTED}]
2018-04-27 15:15:37 -Checking status of 192.168.71.151:27017
2018-04-27 15:15:37 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
2018-04-27 15:15:47 -Checking status of 192.168.71.151:27017
2018-04-27 15:15:47 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.4 ms, state=CONNECTED}]
2018-04-27 15:15:57 -Checking status of 192.168.71.151:27017
2018-04-27 15:15:57 -Updating cluster description to  {type=STANDALONE, servers=[{address=192.168.71.151:27017, type=STANDALONE, roundTripTime=1.3 ms, state=CONNECTED}]
